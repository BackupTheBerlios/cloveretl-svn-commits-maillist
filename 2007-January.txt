From cloveretl-svn-commits at lists.berlios.de  Wed Jan 24 10:02:23 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 24 Jan 2007 10:02:23 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2362 -
	trunk/cloveretl.engine/examples
Message-ID: <200701240902.l0O92NLr022646@sheep.berlios.de>

Author: agad
Date: 2007-01-24 10:02:22 +0100 (Wed, 24 Jan 2007)
New Revision: 2362

Modified:
   trunk/cloveretl.engine/examples/graphJoinMergeInline.grf
Log:
UPDATE: graphJoinMergeInline uses GUI

Modified: trunk/cloveretl.engine/examples/graphJoinMergeInline.grf
===================================================================
--- trunk/cloveretl.engine/examples/graphJoinMergeInline.grf	2007-01-23 15:15:52 UTC (rev 2361)
+++ trunk/cloveretl.engine/examples/graphJoinMergeInline.grf	2007-01-24 09:02:22 UTC (rev 2362)
@@ -1,41 +1,20 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph description="This graph demonstrates how to use MERGE_JOIN component for 3way join." name="Testing Hash Joiner">
+<Graph created="Tue Jan 16 09:47:22 CET 2007" guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Wed Jan 24 09:27:14 CET 2007" name="test" revision="1.60">
 <Global>
-<Metadata fileURL="metadata/orders.fmt" id="InMetadata1"/>
-<Metadata fileURL="metadata/employees.fmt" id="InMetadata2"/>
-<Metadata fileURL="metadata/joinedOrders3way.fmt" id="OutMetadata"/>
+<Metadata fileURL="metadata/employees.fmt" id="Metadata0"/>
+<Metadata fileURL="metadata/joinedOrders3way.fmt" id="Metadata1"/>
+<Metadata fileURL="metadata/ordersFix.fmt" id="Metadata2"/>
 <Property fileURL="workspace.prm" id="GraphParameter0"/>
 </Global>
 <Phase number="0">
-<Node enabled="enabled" id="INPUT1" type="DELIMITED_DATA_READER"
-fileURL="${WORKSPACE}/data/orders.dat"
-/>
-<Node enabled="enabled" id="INPUT2" type="DELIMITED_DATA_READER"
-fileURL="${WORKSPACE}/data/employees.dat"
-/>
-<Node enabled="enabled" id="INPUT3" type="DELIMITED_DATA_READER"
-fileURL="${WORKSPACE}/data/employees.dat"
-/>
-
-<Node enabled="enabled" id="SORT1" type="SORT"
-sortKey="EmployeeID" 
-/>
-<Node enabled="enabled" id="SORT2" type="SORT"
-sortKey="EmployeeID" 
-/>
-<Node enabled="enabled" id="SORT3" type="SORT"
-sortKey="ReportsTo" 
-/>
-
-<Edge fromNode="INPUT1:0" id="INEDGE1s" metadata="InMetadata1"  toNode="SORT1:0"/>
-<Edge fromNode="INPUT2:0" id="INEDGE2s" metadata="InMetadata2"  toNode="SORT2:0"/>
-<Edge fromNode="INPUT3:0" id="INEDGE3s" metadata="InMetadata2"  toNode="SORT3:0"/>
-
-<Node enabled="enabled" id="JOIN" type="MERGE_JOIN"
-joinKey="EmployeeID=EmployeeID#EmployeeID=ReportsTo"
-joinType="leftOuter"
-slaveDuplicates="true"
-><attr name="transform">
+<Node enabled="enabled" fileURL="${WORKSPACE}/data/employees.dat" guiHeight="0" guiName="Universal Data Reader" guiWidth="0" guiX="47" guiY="276" id="DATA_READER0" type="DATA_READER"/>
+<Node enabled="enabled" fileURL="${WORKSPACE}/data/employees.dat" guiHeight="0" guiName="Delimited Data Reader" guiWidth="0" guiX="47" guiY="190" id="DELIMITED_DATA_READER0" type="DELIMITED_DATA_READER"/>
+<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/joined_data_hash.out" guiHeight="0" guiName="Delimited Data Writer" guiWidth="0" guiX="656" guiY="190" id="DELIMITED_DATA_WRITER0" type="DELIMITED_DATA_WRITER"/>
+<Node enabled="enabled" guiHeight="0" guiName="Ext Sort" guiWidth="0" guiX="275" guiY="83" id="EXT_SORT0" sortKey="EmployeeID" type="EXT_SORT"/>
+<Node enabled="enabled" guiHeight="0" guiName="Ext Sort" guiWidth="0" guiX="275" guiY="190" id="EXT_SORT1" sortKey="EmployeeID" type="EXT_SORT"/>
+<Node enabled="enabled" guiHeight="0" guiName="Ext Sort" guiWidth="0" guiX="275" guiY="276" id="EXT_SORT2" sortKey="ReportsTo" type="EXT_SORT"/>
+<Node enabled="enabled" guiHeight="0" guiName="Ext Merge Join" guiWidth="0" guiX="480" guiY="190" id="MERGE_JOIN1" joinKey="EmployeeID=EmployeeID#EmployeeID=ReportsTo" type="MERGE_JOIN">
+<attr name="transform">
 import org.jetel.component.DataRecordTransform;
 import org.jetel.data.*;
 
@@ -67,14 +46,13 @@
 
 </attr>
 </Node>
-
-<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/joined_data_hash.out" guiHeight="25" guiName="WRITER" guiWidth="50" guiX="370" guiY="20" id="WRITER" type="DELIMITED_DATA_WRITER"/>
-
-<Edge fromNode="SORT1:0" guiBendpoints="" id="INEDGE1" inPort="0 (JOIN)" metadata="InMetadata1" outPort="0 (INPUT1)" toNode="JOIN:0"/>
-<Edge fromNode="SORT2:0" guiBendpoints="" id="INEDGE2" inPort="1 (JOIN)" metadata="InMetadata2" outPort="0 (INPUT2)" toNode="JOIN:1"/>
-<Edge fromNode="SORT3:0" guiBendpoints="" id="INEDGE3" inPort="2 (JOIN)" metadata="InMetadata2" outPort="0 (INPUT3)" toNode="JOIN:2"/>
-
-<Edge fromNode="JOIN:0" guiBendpoints="" id="OUTEDGE" inPort="0 (WRITER)" metadata="OutMetadata" outPort="0 (JOIN)" toNode="WRITER:0"/>
-
+<Node enabled="enabled" fieldMap="OrderID=$A;CustomerID=$B;EmployeeID=$C;OrderDate=$D;RequiredDate=$E;ShippedDate=$F;ShipVia=$G;Freight=$H;ShipName=$I;ShipAddress=$J;ShipCity=$K;ShipRegion=$L;ShipPostalCode=$M;ShipCountry=$N" fileURL="${WORKSPACE}/data/orders2.xls" guiHeight="0" guiName="XLS Data Reader" guiWidth="0" guiX="48" guiY="83" id="XLS_READER0" metadataRow="1" startRow="2" type="XLS_READER"/>
+<Edge fromNode="DATA_READER0:0" guiBendpoints="" id="Edge2" inPort="0 (Ext Sort)" metadata="Metadata0" outPort="0 (Universal Data Reader)" toNode="EXT_SORT2:0"/>
+<Edge fromNode="DELIMITED_DATA_READER0:0" guiBendpoints="" id="Edge1" inPort="0 (Ext Sort)" metadata="Metadata0" outPort="0 (Delimited Data Reader)" toNode="EXT_SORT1:0"/>
+<Edge debugMode="false" fromNode="EXT_SORT0:0" guiBendpoints="" id="Edge3" inPort="0 (Ext Merge Join)" metadata="Metadata2" outPort="0 (Ext Sort)" toNode="MERGE_JOIN1:0"/>
+<Edge debugMode="false" fromNode="EXT_SORT1:0" guiBendpoints="" id="Edge4" inPort="1 (Ext Merge Join)" metadata="Metadata0" outPort="0 (Ext Sort)" toNode="MERGE_JOIN1:1"/>
+<Edge debugMode="false" fromNode="EXT_SORT2:0" guiBendpoints="" id="Edge5" inPort="2 (Ext Merge Join)" metadata="Metadata0" outPort="0 (Ext Sort)" toNode="MERGE_JOIN1:2"/>
+<Edge debugMode="false" fromNode="MERGE_JOIN1:0" guiBendpoints="" id="Edge6" inPort="0 (Delimited Data Writer)" metadata="Metadata1" outPort="0 (Ext Merge Join)" toNode="DELIMITED_DATA_WRITER0:0"/>
+<Edge fromNode="XLS_READER0:0" guiBendpoints="" id="Edge0" inPort="0 (Ext Sort)" metadata="Metadata2" outPort="0 (XLS Data Reader)" toNode="EXT_SORT0:0"/>
 </Phase>
 </Graph>



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 24 10:39:34 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 24 Jan 2007 10:39:34 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2363 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701240939.l0O9dXvM027206@sheep.berlios.de>

Author: agad
Date: 2007-01-24 10:39:33 +0100 (Wed, 24 Jan 2007)
New Revision: 2363

Modified:
   trunk/cloveretl.component/src/org/jetel/component/DBExecute.java
Log:
FIX:initialization of DBConnection moved from getting connection - DBExecute component

Modified: trunk/cloveretl.component/src/org/jetel/component/DBExecute.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/DBExecute.java	2007-01-24 09:02:22 UTC (rev 2362)
+++ trunk/cloveretl.component/src/org/jetel/component/DBExecute.java	2007-01-24 09:39:33 UTC (rev 2363)
@@ -190,9 +190,11 @@
                 throw new ComponentNotReadyException("Connection with ID: " + dbConnectionName + " isn't instance of the DBConnection class.");
             }
             dbConnection = (DBConnection) conn;
-            dbConnection.init();
 	    }
-        if (dbSQL==null){
+		if (!dbConnection.isInitialized()) {
+			dbConnection.init();
+		}        
+		if (dbSQL==null){
             String delimiter = sqlStatementDelimiter !=null ? sqlStatementDelimiter : DEFAULT_SQL_STATEMENT_DELIMITER;
             dbSQL=sqlQuery.split(delimiter);
         }



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 24 10:40:54 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 24 Jan 2007 10:40:54 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2364 -
	trunk/cloveretl.engine/examples
Message-ID: <200701240940.l0O9esAl027298@sheep.berlios.de>

Author: agad
Date: 2007-01-24 10:40:52 +0100 (Wed, 24 Jan 2007)
New Revision: 2364

Modified:
   trunk/cloveretl.engine/examples/graphCloverData.grf
Log:
CHANGE: changed value of one attribute - graphCloverData

Modified: trunk/cloveretl.engine/examples/graphCloverData.grf
===================================================================
--- trunk/cloveretl.engine/examples/graphCloverData.grf	2007-01-24 09:39:33 UTC (rev 2363)
+++ trunk/cloveretl.engine/examples/graphCloverData.grf	2007-01-24 09:40:52 UTC (rev 2364)
@@ -1,63 +1,63 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph created="Tue Oct 24 10:36:22 CEST 2006" guiVersion="1.5" licenseType="Evaluation license" modified="Tue Oct 31 09:00:37 CET 2006" name="graphCLOVERData" revision="1.27">
+<Graph created="Tue Oct 24 10:36:22 CEST 2006" guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Wed Jan 24 10:05:43 CET 2007" name="graphCLOVERData" revision="1.28">
 <Global>
 <Metadata id="Metadata0">
-<Record name="customer" recordDelimiter="\n" type="fixed">
-<Field name="customer_id" nullable="true" size="4" type="integer"/>
-<Field name="account_num" nullable="true" size="11" type="long"/>
-<Field name="lname" nullable="true" size="10" type="string"/>
-<Field name="fname" nullable="true" size="10" type="string"/>
-<Field name="mi" nullable="true" size="4" type="string"/>
-<Field name="address1" nullable="true" size="30" type="string"/>
-<Field name="city" nullable="true" size="7" type="string"/>
-<Field name="state_province" nullable="true" size="6" type="string"/>
-<Field name="postal_code" nullable="true" size="5" type="string"/>
-<Field name="country" nullable="true" size="5" type="string"/>
-<Field name="customer_region_id" nullable="true" size="4" type="integer"/>
-<Field name="phone1" nullable="true" size="12" type="string"/>
-<Field name="phone2" nullable="true" size="12" type="string"/>
-<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" size="15" type="date"/>
-<Field name="marital_status" nullable="true" size="1" type="string"/>
-<Field name="yearly_income" nullable="true" size="13" type="string"/>
-<Field name="gender" nullable="true" size="1" type="string"/>
-<Field name="total_children" nullable="true" size="1" type="integer"/>
-<Field name="num_children_at_home" nullable="true" size="1" type="integer"/>
-<Field name="education" nullable="true" size="15" type="string"/>
-<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" size="15" type="date"/>
-<Field name="member_card" nullable="true" size="8" type="string"/>
-<Field name="occupation" nullable="true" size="20" type="string"/>
-<Field name="houseowner" nullable="true" size="1" type="string"/>
-<Field name="num_cars_owned" nullable="true" size="1" type="integer"/>
+<Record name="customer" recordDelimiter="&#10;" recordSize="212" type="fixed">
+<Field name="customer_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="account_num" nullable="true" shift="0" size="11" type="long"/>
+<Field name="lname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="mi" nullable="true" shift="0" size="4" type="string"/>
+<Field name="address1" nullable="true" shift="0" size="30" type="string"/>
+<Field name="city" nullable="true" shift="0" size="7" type="string"/>
+<Field name="state_province" nullable="true" shift="0" size="6" type="string"/>
+<Field name="postal_code" nullable="true" shift="0" size="5" type="string"/>
+<Field name="country" nullable="true" shift="0" size="5" type="string"/>
+<Field name="customer_region_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="phone1" nullable="true" shift="0" size="12" type="string"/>
+<Field name="phone2" nullable="true" shift="0" size="12" type="string"/>
+<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" shift="0" size="15" type="date"/>
+<Field name="marital_status" nullable="true" shift="0" size="1" type="string"/>
+<Field name="yearly_income" nullable="true" shift="0" size="13" type="string"/>
+<Field name="gender" nullable="true" shift="0" size="1" type="string"/>
+<Field name="total_children" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="num_children_at_home" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="education" nullable="true" shift="0" size="15" type="string"/>
+<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" shift="0" size="15" type="date"/>
+<Field name="member_card" nullable="true" shift="0" size="8" type="string"/>
+<Field name="occupation" nullable="true" shift="0" size="20" type="string"/>
+<Field name="houseowner" nullable="true" shift="0" size="1" type="string"/>
+<Field name="num_cars_owned" nullable="true" shift="0" size="1" type="integer"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata1">
-<Record name="customer1" type="fixed">
-<Field name="customer_id" nullable="true" size="4" type="integer"/>
-<Field name="account_num" nullable="true" size="11" type="long"/>
-<Field name="lname" nullable="true" size="10" type="string"/>
-<Field name="fname" nullable="true" size="10" type="string"/>
-<Field name="mi" nullable="true" size="4" type="string"/>
-<Field name="address1" nullable="true" size="30" type="string"/>
-<Field name="city" nullable="true" size="7" type="string"/>
-<Field name="state_province" nullable="true" size="6" type="string"/>
-<Field name="postal_code" nullable="true" size="5" type="string"/>
-<Field name="country" nullable="true" size="5" type="string"/>
-<Field name="customer_region_id" nullable="true" size="4" type="integer"/>
-<Field name="phone1" nullable="true" size="12" type="string"/>
-<Field name="phone2" nullable="true" size="12" type="string"/>
-<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" size="15" type="date"/>
-<Field name="marital_status" nullable="true" size="1" type="string"/>
-<Field name="yearly_income" nullable="true" size="13" type="string"/>
-<Field name="gender" nullable="true" size="1" type="string"/>
-<Field name="total_children" nullable="true" size="1" type="integer"/>
-<Field name="num_children_at_home" nullable="true" size="1" type="integer"/>
-<Field name="education" nullable="true" size="15" type="string"/>
-<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" size="15" type="date"/>
-<Field name="member_card" nullable="true" size="8" type="string"/>
-<Field name="occupation" nullable="true" size="20" type="string"/>
-<Field name="houseowner" nullable="true" size="1" type="string"/>
-<Field name="num_cars_owned" nullable="true" size="1" type="integer"/>
-<Field name="size" nullable="true" size="10" type="integer"/>
+<Record name="customer1" recordSize="222" type="fixed">
+<Field name="customer_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="account_num" nullable="true" shift="0" size="11" type="long"/>
+<Field name="lname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="mi" nullable="true" shift="0" size="4" type="string"/>
+<Field name="address1" nullable="true" shift="0" size="30" type="string"/>
+<Field name="city" nullable="true" shift="0" size="7" type="string"/>
+<Field name="state_province" nullable="true" shift="0" size="6" type="string"/>
+<Field name="postal_code" nullable="true" shift="0" size="5" type="string"/>
+<Field name="country" nullable="true" shift="0" size="5" type="string"/>
+<Field name="customer_region_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="phone1" nullable="true" shift="0" size="12" type="string"/>
+<Field name="phone2" nullable="true" shift="0" size="12" type="string"/>
+<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" shift="0" size="15" type="date"/>
+<Field name="marital_status" nullable="true" shift="0" size="1" type="string"/>
+<Field name="yearly_income" nullable="true" shift="0" size="13" type="string"/>
+<Field name="gender" nullable="true" shift="0" size="1" type="string"/>
+<Field name="total_children" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="num_children_at_home" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="education" nullable="true" shift="0" size="15" type="string"/>
+<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" shift="0" size="15" type="date"/>
+<Field name="member_card" nullable="true" shift="0" size="8" type="string"/>
+<Field name="occupation" nullable="true" shift="0" size="20" type="string"/>
+<Field name="houseowner" nullable="true" shift="0" size="1" type="string"/>
+<Field name="num_cars_owned" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="size" nullable="true" shift="0" size="10" type="integer"/>
 </Record>
 </Metadata>
 <Property fileURL="workspace.prm" id="GraphParameter0"/>
@@ -65,22 +65,17 @@
 <Phase number="0">
 <Node enabled="enabled" fileURL="${WORKSPACE}/output/customers.clv.zip" guiHeight="0" guiName="CLOVER Data Writer" guiWidth="0" guiX="558" guiY="118" id="CLOVER_WRITER0" saveIndex="true" saveMetadata="true" type="CLOVER_WRITER"/>
 <Node enabled="enabled" guiHeight="0" guiName="Concatenate" guiWidth="0" guiX="328" guiY="118" id="CONCATENATE0" type="CONCATENATE"/>
-<Node enableIncomplete="true" enabled="enabled" fileURL="${WORKSPACE}/data/customers.???" guiHeight="66" guiName="customer from file" guiWidth="130" guiX="50" guiY="44" id="FIXLEN_DATA_READER0" type="FIXLEN_DATA_READER">
+<Node byteMode="false" enableIncomplete="true" enabled="enabled" fileURL="${WORKSPACE}/data/customers.???" guiHeight="66" guiName="customer from file" guiWidth="130" guiX="50" guiY="44" id="FIXLEN_DATA_READER0" type="FIXLEN_DATA_READER">
 <attr name="OneRecordPerLine">true</attr>
 </Node>
-<Node enableIncomplete="true" enabled="enabled" fileURL="zip:${WORKSPACE}/data/data.zip#customers.dat;" guiHeight="0" guiName="Fixed Length Data Reader" guiWidth="0" guiX="48" guiY="168" id="FIXLEN_DATA_READER1" type="FIXLEN_DATA_READER"/>
+<Node byteMode="false" enableIncomplete="true" enabled="enabled" fileURL="zip:${WORKSPACE}/data/data.zip#customers.dat;" guiHeight="0" guiName="Fixed Length Data Reader" guiWidth="0" guiX="48" guiY="168" id="FIXLEN_DATA_READER1" type="FIXLEN_DATA_READER"/>
 <Edge debugMode="false" fromNode="CONCATENATE0:0" guiBendpoints="" id="Edge2" inPort="0 (CLOVER Data Writer)" metadata="Metadata0" outPort="0 (Concatenate)" toNode="CLOVER_WRITER0:0"/>
 <Edge debugMode="false" fromNode="FIXLEN_DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="1 (Concatenate)" metadata="Metadata0" outPort="0 (customer from file)" toNode="CONCATENATE0:1"/>
 <Edge debugMode="false" fromNode="FIXLEN_DATA_READER1:0" guiBendpoints="" id="Edge8" inPort="0 (Concatenate)" metadata="Metadata0" outPort="0 (Fixed Length Data Reader)" toNode="CONCATENATE0:0"/>
 </Phase>
 <Phase number="1">
-<Node enabled="enabled" fileURL="${WORKSPACE}/output/customers.clv.zip" guiHeight="0" guiName="Clover Data Reader" guiWidth="0" guiX="55" guiY="296" id="CLOVER_READER0" startRecord="10000" type="CLOVER_READER"/>
-<Node enabled="enabled" fileURL="${WORKSPACE}/output/strucured_customers.txt" guiHeight="0" guiName="Structured Data Writer" guiWidth="0" guiX="559" guiY="296" id="STRUCTURE_WRITER0" type="STRUCTURE_WRITER">
-<attr name="mask">&lt;Customer id=$customer_id&gt;
-	&lt;last name = $lname&gt;
-	&lt;first name = $fname&gt;
-&lt;/Customer&gt;
-</attr>
+<Node enabled="enabled" fileURL="${WORKSPACE}/output/customers.clv.zip" guiHeight="0" guiName="Clover Data Reader" guiWidth="0" guiX="55" guiY="296" id="CLOVER_READER0" indexFileURL="Index file URL&#9;" startRecord="10" type="CLOVER_READER"/>
+<Node enabled="enabled" fileURL="${WORKSPACE}/output/strucured_customers.txt" guiHeight="0" guiName="Structured Data Writer" guiWidth="0" guiX="559" guiY="296" id="STRUCTURE_WRITER0" mask="&lt;Customer id=$customer_id&gt;&#10;&#9;&lt;last name = $lname&gt;&#10;&#9;&lt;first name = $fname&gt;&#10;&lt;/Customer&gt;&#10;" type="STRUCTURE_WRITER">
 <attr name="header">dir = ${WORKSPACE}
 </attr>
 <attr name="footer">



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 24 12:01:36 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 24 Jan 2007 12:01:36 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2365 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701241101.l0OB1aow001366@sheep.berlios.de>

Author: agad
Date: 2007-01-24 12:01:36 +0100 (Wed, 24 Jan 2007)
New Revision: 2365

Modified:
   trunk/cloveretl.component/src/org/jetel/component/DataGenerator.java
Log:
FIX:DataGenerato component - all fields can be field by random or sequence value (patttern can be empty)

Modified: trunk/cloveretl.component/src/org/jetel/component/DataGenerator.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/DataGenerator.java	2007-01-24 09:40:52 UTC (rev 2364)
+++ trunk/cloveretl.component/src/org/jetel/component/DataGenerator.java	2007-01-24 11:01:36 UTC (rev 2365)
@@ -149,7 +149,7 @@
 	private final int MOVE = 3;
 
 	private String pattern;
-	private DataRecord patternRecord;
+	private DataRecord patternRecord = null;
 	private Parser parser;
 	private DataRecordMetadata metadata;
 	private DataRecord record;
@@ -300,8 +300,12 @@
         		sequenceIndex = StringUtils.findString(metadata.getField(i).getName(), 
         				sequenceFields);
         		if (sequenceIndex > -1){//field found among sequence fields
-            		cutMetadata.delField(metadata.getField(i).getName());
-            		if (sequenceIDs[sequenceIndex] == null){//not given sequence id
+					if (cutMetadata.getNumFields() > 1) {
+						cutMetadata.delField(metadata.getField(i).getName());
+					}else{
+						cutMetadata = null;
+					}
+					if (sequenceIDs[sequenceIndex] == null){//not given sequence id
             			//find any sequence in graph
             			specialValue[i][0]  = getGraph().getSequences().hasNext() ? (String)getGraph().getSequences().next() : null;
 						if (specialValue[i][0] == null) {
@@ -320,30 +324,34 @@
 		}else{
 			random = new Random();
 		}
-		//prepare approperiate data parser
-        switch (metadata.getRecType()) {
-		case DataRecordMetadata.DELIMITED_RECORD:
-			parser = new DelimitedDataParser(Defaults.DataParser.DEFAULT_CHARSET_DECODER);
-			break;
-		case DataRecordMetadata.FIXEDLEN_RECORD:
-			parser = new FixLenCharDataParser(Defaults.DataParser.DEFAULT_CHARSET_DECODER);
-			break;
-		default:
-			parser = new DataParser(Defaults.DataParser.DEFAULT_CHARSET_DECODER);
-			break;
-		}
-		parser.init(cutMetadata);
-		try {
-			parser.setDataSource(new ByteArrayInputStream(pattern.getBytes(
-					Defaults.DataParser.DEFAULT_CHARSET_DECODER)));
-		} catch (UnsupportedEncodingException e1) {
-		}
-		try {
-			patternRecord = parser.getNext();
-		} catch (JetelException e) {
-			throw new ComponentNotReadyException(this,e);
-		}
-		parser.close();
+		if (cutMetadata != null) {
+			//prepare approperiate data parser
+			switch (metadata.getRecType()) {
+			case DataRecordMetadata.DELIMITED_RECORD:
+				parser = new DelimitedDataParser(
+						Defaults.DataParser.DEFAULT_CHARSET_DECODER);
+				break;
+			case DataRecordMetadata.FIXEDLEN_RECORD:
+				parser = new FixLenCharDataParser(
+						Defaults.DataParser.DEFAULT_CHARSET_DECODER);
+				break;
+			default:
+				parser = new DataParser(
+						Defaults.DataParser.DEFAULT_CHARSET_DECODER);
+				break;
+			}
+			parser.init(cutMetadata);
+			try {
+				parser.setDataSource(new ByteArrayInputStream(pattern.getBytes(Defaults.DataParser.DEFAULT_CHARSET_DECODER)));
+			} catch (UnsupportedEncodingException e1) {
+			}
+			try {
+				patternRecord = parser.getNext();
+			} catch (JetelException e) {
+				throw new ComponentNotReadyException(this, e);
+			}
+			parser.close();
+		}		
 	}
 	
 
@@ -495,7 +503,7 @@
 
 		try {
 			dataGenerator = new DataGenerator(xattribs.getString(XML_ID_ATTRIBUTE), 
-					xattribs.getString(XML_PATTERN_ATTRIBUTE), 
+					xattribs.getString(XML_PATTERN_ATTRIBUTE,""), 
 					xattribs.getInteger(XML_RECORDS_NUMBER_ATTRIBUTE));
 			if (xattribs.exists(XML_RANDOM_FIELDS_ATTRIBUTE)){
 				dataGenerator.setRandomFields(xattribs.getString(XML_RANDOM_FIELDS_ATTRIBUTE));



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 24 12:06:25 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 24 Jan 2007 12:06:25 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2366 -
	trunk/cloveretl.engine/src/org/jetel/data
Message-ID: <200701241106.l0OB6P4q001788@sheep.berlios.de>

Author: agad
Date: 2007-01-24 12:06:25 +0100 (Wed, 24 Jan 2007)
New Revision: 2366

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java
Log:
FIX: when method DataRecord.copyFieldsByName gets null argument it doesn't throw Exception

Modified: trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-24 11:01:36 UTC (rev 2365)
+++ trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-24 11:06:25 UTC (rev 2366)
@@ -183,6 +183,7 @@
 	public boolean[] copyFieldsByName(DataRecord sourceRecord) {
         boolean[] result = new boolean[fields.length];
         Arrays.fill(result, false);
+        if (sourceRecord == null) return result;
         DataField sourceField;
         DataField targetField;
         int sourceLength = sourceRecord.getMetadata().getNumFields();



From cloveretl-svn-commits at lists.berlios.de  Thu Jan 25 14:46:06 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Thu, 25 Jan 2007 14:46:06 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2367 -
	trunk/cloveretl.engine/src/org/jetel/component
Message-ID: <200701251346.l0PDk6w7027704@sheep.berlios.de>

Author: agad
Date: 2007-01-25 14:46:06 +0100 (Thu, 25 Jan 2007)
New Revision: 2367

Modified:
   trunk/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java
Log:
FIX:bugfix in method putMappingByNames

Modified: trunk/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java	2007-01-24 11:06:25 UTC (rev 2366)
+++ trunk/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java	2007-01-25 13:46:06 UTC (rev 2367)
@@ -1417,7 +1417,6 @@
 							count++;
 							outFieldsName[i][j] = null;
 							inFieldsName[i][index] = null;
-							break;
 						}
 					}
 				}				
@@ -1431,11 +1430,10 @@
 						index = StringUtils.findString(outFieldsName[i][j],
 								inFieldsName[k]);
 						if (index > -1) {//output field name found amoung input fields
-							if (putMapping(i, j, i, index, rule, transformMap)){
+							if (putMapping(i, j, k, index, rule, transformMap)){
 								count++;
 								outFieldsName[i][j] = null;
 								inFieldsName[k][index] = null;
-								break;
 							}
 						}
 					}					
@@ -1453,7 +1451,6 @@
 							count++;
 							outFieldsName[i][j] = null;
 							inFieldsName[i][index] = null;
-							break;
 						}
 					}
 				}				
@@ -1467,11 +1464,10 @@
 						index = StringUtils.findStringIgnoreCase(
 								outFieldsName[i][j], inFieldsName[k]);
 						if (index > -1) {//output field name found amoung input fields
-							if (putMapping(i, j, i, index, rule, transformMap)){
+							if (putMapping(i, j, k, index, rule, transformMap)){
 								count++;
 								outFieldsName[i][j] = null;
 								inFieldsName[k][index] = null;
-								break;
 							}
 						}
 					}					



From cloveretl-svn-commits at lists.berlios.de  Thu Jan 25 14:48:07 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Thu, 25 Jan 2007 14:48:07 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2368 -
	trunk/cloveretl.engine/src/org/jetel/data
Message-ID: <200701251348.l0PDm771027874@sheep.berlios.de>

Author: agad
Date: 2007-01-25 14:48:06 +0100 (Thu, 25 Jan 2007)
New Revision: 2368

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java
Log:
FIX:removed debug printout

Modified: trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-25 13:46:06 UTC (rev 2367)
+++ trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-25 13:48:06 UTC (rev 2368)
@@ -563,7 +563,6 @@
 	 * @return    The size value
 	 */
 	public int getSizeSerialized() {
-        System.err.println("getSize");
         int size=0;
         int inNull=0;
         if (metadata.isNullable()){
@@ -574,7 +573,7 @@
                     size+=fields[i].getSizeSerialized(); 
                 }
             }
-            size+=BitArray.bitsLength2Bytes(metadata.getNumNullableFields());
+            size+=BitArray.bitsLength2Bytes(fields.length);
         }else{
             for (int i = 0; i < fields.length; size+=fields[i++].getSizeSerialized());
         }



From cloveretl-svn-commits at lists.berlios.de  Thu Jan 25 14:49:27 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Thu, 25 Jan 2007 14:49:27 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2369 -
	trunk/cloveretl.engine/examples/data
Message-ID: <200701251349.l0PDnRfb027939@sheep.berlios.de>

Author: agad
Date: 2007-01-25 14:49:25 +0100 (Thu, 25 Jan 2007)
New Revision: 2369

Added:
   trunk/cloveretl.engine/examples/data/orders2.dat
   trunk/cloveretl.engine/examples/data/orders2.xls
Log:
INIT:data for graph

Added: trunk/cloveretl.engine/examples/data/orders2.dat
===================================================================
--- trunk/cloveretl.engine/examples/data/orders2.dat	2007-01-25 13:48:06 UTC (rev 2368)
+++ trunk/cloveretl.engine/examples/data/orders2.dat	2007-01-25 13:49:25 UTC (rev 2369)
@@ -0,0 +1,49 @@
+10248|VINET||4.7.1996 0:00:00|1.8.1996 0:00:00|16.7.1996 0:00:00|3|32.38|Vins et alcools Chevalier|59 rue de l'Abbaye|Reims||51100|France
+10249|TOMSP||5.7.1996 0:00:00|16.8.1996 0:00:00|10.7.1996 0:00:00|1|11.61|Toms Spezialit?en|Luisenstr. 48|Mnster||44087|Germany
+10250|HANAR||8.7.1996 0:00:00|5.8.1996 0:00:00|12.7.1996 0:00:00|2|65.83|Hanari Carnes|Rua do Pa?, 67|Rio de Janeiro|RJ|05454-876|Brazil
+10251|VICTE|3|8.7.1996 0:00:00|5.8.1996 0:00:00|15.7.1996 0:00:00|1|41.34|Victuailles en stock|2, rue du Commerce|Lyon||69004|France
+10252|SUPRD|4|9.7.1996 0:00:00|6.8.1996 0:00:00|11.7.1996 0:00:00|2|51.30|Supr?es d?ices|Boulevard Tirou, 255|Charleroi||B-6000|Belgium
+10253|HANAR|3|10.7.1996 0:00:00|24.7.1996 0:00:00|16.7.1996 0:00:00|2|58.17|Hanari Carnes|Rua do Pa?, 67|Rio de Janeiro|RJ|05454-876|Brazil
+10254|CHOPS|5|11.7.1996 0:00:00|8.8.1996 0:00:00|23.7.1996 0:00:00|2|22.98|Chop-suey Chinese|Hauptstr. 31|Bern||3012|Switzerland
+10255|RICSU|9|12.7.1996 0:00:00|9.8.1996 0:00:00|15.7.1996 0:00:00|3|148.33|Richter Supermarkt|Starenweg 5|Gen?e||1204|Switzerland
+10256|WELLI|3|15.7.1996 0:00:00|12.8.1996 0:00:00|17.7.1996 0:00:00|2|13.97|Wellington Importadora|Rua do Mercado, 12|Resende|SP|08737-363|Brazil
+10257|HILAA|4|16.7.1996 0:00:00|13.8.1996 0:00:00|22.7.1996 0:00:00|3|81.91|HILARI?-Abastos|Carrera 22 con Ave. Carlos Soublette #8-35|San Crist?al|T?hira|5022|Venezuela
+10258|ERNSH|1|17.7.1996 0:00:00|14.8.1996 0:00:00|23.7.1996 0:00:00|1|140.51|Ernst Handel|Kirchgasse 6|Graz||8010|Austria
+10259|CENTC|4|18.7.1996 0:00:00|15.8.1996 0:00:00|25.7.1996 0:00:00|3|3.25|Centro comercial Moctezuma|Sierras de Granada 9993|M?ico D.F.||05022|Mexico
+10260|OTTIK|4|19.7.1996 0:00:00|16.8.1996 0:00:00|29.7.1996 0:00:00|1|55.09|Ottilies K?eladen|Mehrheimerstr. 369|K?n||50739|Germany
+10261|QUEDE|4|19.7.1996 0:00:00|16.8.1996 0:00:00|30.7.1996 0:00:00|2|3.05|Que Del?ia|Rua da Panificadora, 12|Rio de Janeiro|RJ|02389-673|Brazil
+10262|RATTC|8|22.7.1996 0:00:00|19.8.1996 0:00:00|25.7.1996 0:00:00|3|48.29|Rattlesnake Canyon Grocery|2817 Milton Dr.|Albuquerque|NM|87110|USA
+10263|ERNSH|9|23.7.1996 0:00:00|20.8.1996 0:00:00|31.7.1996 0:00:00|3|146.06|Ernst Handel|Kirchgasse 6|Graz||8010|Austria
+10264|FOLKO|6|24.7.1996 0:00:00|21.8.1996 0:00:00|23.8.1996 0:00:00|3|3.67|Folk och f?HB|?ergatan 24|Br?ke||S-844 67|Sweden
+10265|BLONP|2|25.7.1996 0:00:00|22.8.1996 0:00:00|12.8.1996 0:00:00|1|55.28|Blondel p?e et fils|24, place Kl?er|Strasbourg||67000|France
+10266|WARTH|3|26.7.1996 0:00:00|6.9.1996 0:00:00|31.7.1996 0:00:00|3|25.73|Wartian Herkku|Torikatu 38|Oulu||90110|Finland
+10267|FRANK|4|29.7.1996 0:00:00|26.8.1996 0:00:00|6.8.1996 0:00:00|1|208.58|Frankenversand|Berliner Platz 43|Mnchen||80805|Germany
+10268|GROSR|8|30.7.1996 0:00:00|27.8.1996 0:00:00|2.8.1996 0:00:00|3|66.29|GROSELLA-Restaurante|5 Ave. Los Palos Grandes|Caracas|DF|1081|Venezuela
+10269|WHITC|5|31.7.1996 0:00:00|14.8.1996 0:00:00|9.8.1996 0:00:00|1|4.56|White Clover Markets|1029 - 12th Ave. S.|Seattle|WA|98124|USA
+10270|WARTH|1|1.8.1996 0:00:00|29.8.1996 0:00:00|2.8.1996 0:00:00|1|136.54|Wartian Herkku|Torikatu 38|Oulu||90110|Finland
+10271|SPLIR|6|1.8.1996 0:00:00|29.8.1996 0:00:00|30.8.1996 0:00:00|2|4.54|Split Rail Beer & Ale|P.O. Box 555|Lander|WY|82520|USA
+10272|RATTC|6|2.8.1996 0:00:00|30.8.1996 0:00:00|6.8.1996 0:00:00|2|98.03|Rattlesnake Canyon Grocery|2817 Milton Dr.|Albuquerque|NM|87110|USA
+10273|QUICK|3|5.8.1996 0:00:00|2.9.1996 0:00:00|12.8.1996 0:00:00|3|76.07|QUICK-Stop|Taucherstra? 10|Cunewalde||01307|Germany
+10274|VINET|6|6.8.1996 0:00:00|3.9.1996 0:00:00|16.8.1996 0:00:00|1|6.01|Vins et alcools Chevalier|59 rue de l'Abbaye|Reims||51100|France
+10275|MAGAA|1|7.8.1996 0:00:00|4.9.1996 0:00:00|9.8.1996 0:00:00|1|26.93|Magazzini Alimentari Riuniti|Via Ludovico il Moro 22|Bergamo||24100|Italy
+10276|TORTU|8|8.8.1996 0:00:00|22.8.1996 0:00:00|14.8.1996 0:00:00|3|13.84|Tortuga Restaurante|Avda. Azteca 123|M?ico D.F.||05033|Mexico
+10277|MORGK|2|9.8.1996 0:00:00|6.9.1996 0:00:00|13.8.1996 0:00:00|3|125.77|Morgenstern Gesundkost|Heerstr. 22|Leipzig||04179|Germany
+10278|BERGS|8|12.8.1996 0:00:00|9.9.1996 0:00:00|16.8.1996 0:00:00|2|92.69|Berglunds snabbk?|Berguvsv?en  8||Lule?|S-958 22|Sweden
+10279|LEHMS|8|13.8.1996 0:00:00|10.9.1996 0:00:00|16.8.1996 0:00:00|2|25.83|Lehmanns Marktstand|Magazinweg 7|Frankfurt a.M. ||60528|Germany
+10280|BERGS|2|14.8.1996 0:00:00|11.9.1996 0:00:00|12.9.1996 0:00:00|1|8.98|Berglunds snabbk?|Berguvsv?en  8||Lule?|S-958 22|Sweden
+10281|ROMEY|4|14.8.1996 0:00:00|28.8.1996 0:00:00|21.8.1996 0:00:00|1|2.94|Romero y tomillo|Gran V?, 1|Madrid||28001|Spain
+10282|ROMEY|4|15.8.1996 0:00:00|12.9.1996 0:00:00|21.8.1996 0:00:00|1|12.69|Romero y tomillo|Gran V?, 1|Madrid||28001|Spain
+10283|LILAS|3|16.8.1996 0:00:00|13.9.1996 0:00:00|23.8.1996 0:00:00|3|84.81|LILA-Supermercado|Carrera 52 con Ave. Bol?ar #65-98 Llano Largo|Barquisimeto|Lara|3508|Venezuela
+10284|LEHMS|4|19.8.1996 0:00:00|16.9.1996 0:00:00|27.8.1996 0:00:00|1|76.56|Lehmanns Marktstand|Magazinweg 7|Frankfurt a.M. ||60528|Germany
+10285|QUICK|1|20.8.1996 0:00:00|17.9.1996 0:00:00|26.8.1996 0:00:00|2|76.83|QUICK-Stop|Taucherstra? 10|Cunewalde||01307|Germany
+10286|QUICK|8|21.8.1996 0:00:00|18.9.1996 0:00:00|30.8.1996 0:00:00|3|229.24|QUICK-Stop|Taucherstra? 10|Cunewalde||01307|Germany
+10287|RICAR|8|22.8.1996 0:00:00|19.9.1996 0:00:00|28.8.1996 0:00:00|3|12.76|Ricardo Adocicados|Av. Copacabana, 267|Rio de Janeiro|RJ|02389-890|Brazil
+10288|REGGC|4|23.8.1996 0:00:00|20.9.1996 0:00:00|3.9.1996 0:00:00|1|7.45|Reggiani Caseifici|Strada Provinciale 124|Reggio Emilia||42100|Italy
+10289|BSBEV|7|26.8.1996 0:00:00|23.9.1996 0:00:00|28.8.1996 0:00:00|3|22.77|B's Beverages|Fauntleroy Circus|London||EC2 5NT|UK
+10290|COMMI|8|27.8.1996 0:00:00|24.9.1996 0:00:00|3.9.1996 0:00:00|1|79.70|Com?cio Mineiro|Av. dos Lus?das, 23|S? Paulo|SP|05432-043|Brazil
+10291|QUEDE|6|27.8.1996 0:00:00|24.9.1996 0:00:00|4.9.1996 0:00:00|2|6.40|Que Del?ia|Rua da Panificadora, 12|Rio de Janeiro|RJ|02389-673|Brazil
+10292|TRADH|1|28.8.1996 0:00:00|25.9.1996 0:00:00|2.9.1996 0:00:00|2|1.35|Tradi?o Hipermercados|Av. In? de Castro, 414|S? Paulo|SP|05634-030|Brazil
+10293|TORTU|1|29.8.1996 0:00:00|26.9.1996 0:00:00|11.9.1996 0:00:00|3|21.18|Tortuga Restaurante|Avda. Azteca 123|M?ico D.F.||05033|Mexico
+10294|RATTC|4|30.8.1996 0:00:00|27.9.1996 0:00:00|5.9.1996 0:00:00|2|147.26|Rattlesnake Canyon Grocery|2817 Milton Dr.|Albuquerque|NM|87110|USA
+10295|VINET|2|2.9.1996 0:00:00|30.9.1996 0:00:00|10.9.1996 0:00:00|2|1.15|Vins et alcools Chevalier|59 rue de l'Abbaye|Reims||51100|France
+10295|VINET|2|2.9.1996 0:00:00|30.9.1996 0:00:00|10.9.1996 0:00:00|2|1.15|Vins et alcools Chevalier|59 rue de l'Abbaye|Reims||51100|France


Property changes on: trunk/cloveretl.engine/examples/data/orders2.dat
___________________________________________________________________
Name: svn:executable
   + *

Added: trunk/cloveretl.engine/examples/data/orders2.xls
===================================================================
(Binary files differ)


Property changes on: trunk/cloveretl.engine/examples/data/orders2.xls
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From cloveretl-svn-commits at lists.berlios.de  Thu Jan 25 14:51:55 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Thu, 25 Jan 2007 14:51:55 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2370 -
	trunk/cloveretl.engine/examples
Message-ID: <200701251351.l0PDptgV028197@sheep.berlios.de>

Author: agad
Date: 2007-01-25 14:51:53 +0100 (Thu, 25 Jan 2007)
New Revision: 2370

Added:
   trunk/cloveretl.engine/examples/customizedTransformExample.java
Modified:
   trunk/cloveretl.engine/examples/graphAproximativeJoin.grf
Log:
UPDATE:example with CustizedRecordTransform class usage

Added: trunk/cloveretl.engine/examples/customizedTransformExample.java
===================================================================
--- trunk/cloveretl.engine/examples/customizedTransformExample.java	2007-01-25 13:49:25 UTC (rev 2369)
+++ trunk/cloveretl.engine/examples/customizedTransformExample.java	2007-01-25 13:51:53 UTC (rev 2370)
@@ -0,0 +1,28 @@
+import java.util.Properties;
+
+import org.apache.commons.logging.LogFactory;
+import org.jetel.component.CustomizedRecordTransform;
+import org.jetel.component.DataRecordTransform;
+import org.jetel.data.DataRecord;
+import org.jetel.exception.ComponentNotReadyException;
+import org.jetel.exception.TransformException;
+import org.jetel.metadata.DataRecordMetadata;
+
+
+public class customizedTransformExample extends DataRecordTransform {
+	
+	CustomizedRecordTransform transformation;
+	
+	public boolean init(Properties arg0, DataRecordMetadata[] arg1, DataRecordMetadata[] arg2) throws ComponentNotReadyException {
+		transformation = new CustomizedRecordTransform(LogFactory.getLog(customizedTransformExample.class));
+		transformation.addFieldToFieldRule("*.*", "*.*");
+		transformation.setGraph(this.getGraph());
+		return transformation.init(arg0, arg1, arg2);
+	}
+
+	public boolean transform(DataRecord[] arg0, DataRecord[] arg1)
+			throws TransformException {
+		return transformation.transform(arg0, arg1);
+	}
+
+}

Modified: trunk/cloveretl.engine/examples/graphAproximativeJoin.grf
===================================================================
--- trunk/cloveretl.engine/examples/graphAproximativeJoin.grf	2007-01-25 13:49:25 UTC (rev 2369)
+++ trunk/cloveretl.engine/examples/graphAproximativeJoin.grf	2007-01-25 13:51:53 UTC (rev 2370)
@@ -1,143 +1,137 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph created="Tue Oct 24 13:04:40 CEST 2006" description="This graph ilustrates usage of Aproximative Join component.&#10;This component requires prepared data: they have &#10;to have a key (component Key Generator creates it) &#10;and be sorted by this key." guiVersion="1.4" licenseType="Evaluation license" modified="Tue Oct 24 14:01:53 CEST 2006" name="graphFixedLengthData">
+<Graph created="Tue Oct 24 13:04:40 CEST 2006" description="This graph ilustrates usage of Aproximative Join component.&#10;This component requires prepared data: they have &#10;to have a key (component Key Generator creates it) &#10;and be sorted by this key." guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Thu Jan 25 12:43:25 CET 2007" name="graphFixedLengthData" revision="1.3">
 <Global>
 <Metadata id="Metadata4">
-<Record name="conforming_out" type="fixed">
-<Field name="lname" nullable="true" size="15" type="string"/>
-<Field name="fname" nullable="true" size="15" type="string"/>
-<Field name="last_name" nullable="true" size="15" type="string"/>
-<Field name="first_name" nullable="true" size="15" type="string"/>
-<Field name="_total_conformity_" nullable="true" size="8" type="numeric"/>
+<Record name="conforming_out" recordDelimiter="\n" recordSize="68" type="fixed">
+<Field name="lname" nullable="true" shift="0" size="15" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="15" type="string"/>
+<Field name="last_name" nullable="true" shift="0" size="15" type="string"/>
+<Field name="first_name" nullable="true" shift="0" size="15" type="string"/>
+<Field name="_total_conformity_" nullable="true" shift="0" size="8" type="numeric"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata0">
-<Record name="customer" recordDelimiter="\n" type="fixed">
-<Field name="customer_id" nullable="true" size="4" type="integer"/>
-<Field name="account_num" nullable="true" size="11" type="long"/>
-<Field name="lname" nullable="true" size="10" type="string"/>
-<Field name="fname" nullable="true" size="10" type="string"/>
-<Field name="mi" nullable="true" size="4" type="string"/>
-<Field name="address1" nullable="true" size="30" type="string"/>
-<Field name="city" nullable="true" size="7" type="string"/>
-<Field name="state_province" nullable="true" size="6" type="string"/>
-<Field name="postal_code" nullable="true" size="5" type="string"/>
-<Field name="country" nullable="true" size="5" type="string"/>
-<Field name="customer_region_id" nullable="true" size="4" type="integer"/>
-<Field name="phone1" nullable="true" size="12" type="string"/>
-<Field name="phone2" nullable="true" size="12" type="string"/>
-<Field format="EEE MMM dd yyyy" name="birthdate" nullable="false" size="15" type="date"/>
-<Field name="marital_status" nullable="true" size="1" type="string"/>
-<Field name="yearly_income" nullable="true" size="13" type="string"/>
-<Field name="gender" nullable="true" size="1" type="string"/>
-<Field name="total_children" nullable="true" size="1" type="integer"/>
-<Field name="num_children_at_home" nullable="true" size="1" type="integer"/>
-<Field name="education" nullable="true" size="15" type="string"/>
-<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" size="15" type="date"/>
-<Field name="member_card" nullable="true" size="8" type="string"/>
-<Field name="occupation" nullable="true" size="20" type="string"/>
-<Field name="houseowner" nullable="true" size="1" type="string"/>
-<Field name="num_cars_owned" nullable="true" size="1" type="integer"/>
+<Record name="customer" recordDelimiter="&#10;" recordSize="212" type="fixed">
+<Field name="customer_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="account_num" nullable="true" shift="0" size="11" type="long"/>
+<Field name="lname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="mi" nullable="true" shift="0" size="4" type="string"/>
+<Field name="address1" nullable="true" shift="0" size="30" type="string"/>
+<Field name="city" nullable="true" shift="0" size="7" type="string"/>
+<Field name="state_province" nullable="true" shift="0" size="6" type="string"/>
+<Field name="postal_code" nullable="true" shift="0" size="5" type="string"/>
+<Field name="country" nullable="true" shift="0" size="5" type="string"/>
+<Field name="customer_region_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="phone1" nullable="true" shift="0" size="12" type="string"/>
+<Field name="phone2" nullable="true" shift="0" size="12" type="string"/>
+<Field format="EEE MMM dd yyyy" name="birthdate" nullable="false" shift="0" size="15" type="date"/>
+<Field name="marital_status" nullable="true" shift="0" size="1" type="string"/>
+<Field name="yearly_income" nullable="true" shift="0" size="13" type="string"/>
+<Field name="gender" nullable="true" shift="0" size="1" type="string"/>
+<Field name="total_children" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="num_children_at_home" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="education" nullable="true" shift="0" size="15" type="string"/>
+<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" shift="0" size="15" type="date"/>
+<Field name="member_card" nullable="true" shift="0" size="8" type="string"/>
+<Field name="occupation" nullable="true" shift="0" size="20" type="string"/>
+<Field name="houseowner" nullable="true" shift="0" size="1" type="string"/>
+<Field name="num_cars_owned" nullable="true" shift="0" size="1" type="integer"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata2">
-<Record name="customer_with_key" type="fixed">
-<Field name="customer_id" nullable="true" size="4" type="integer"/>
-<Field name="account_num" nullable="true" size="11" type="long"/>
-<Field name="lname" nullable="true" size="10" type="string"/>
-<Field name="fname" nullable="true" size="10" type="string"/>
-<Field name="mi" nullable="true" size="4" type="string"/>
-<Field name="address1" nullable="true" size="30" type="string"/>
-<Field name="city" nullable="true" size="6" type="string"/>
-<Field name="state_province" nullable="true" size="6" type="string"/>
-<Field name="postal_code" nullable="true" size="5" type="string"/>
-<Field name="country" nullable="true" size="5" type="string"/>
-<Field name="customer_region_id" nullable="true" size="4" type="integer"/>
-<Field name="phone1" nullable="true" size="12" type="string"/>
-<Field name="phone2" nullable="true" size="12" type="string"/>
-<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" size="28" type="date"/>
-<Field name="marital_status" nullable="true" size="1" type="string"/>
-<Field name="yearly_income" nullable="true" size="13" type="string"/>
-<Field name="gender" nullable="true" size="1" type="string"/>
-<Field name="total_children" nullable="true" size="1" type="integer"/>
-<Field name="num_children_at_home" nullable="true" size="1" type="integer"/>
-<Field name="education" nullable="true" size="10" type="string"/>
-<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" size="28" type="date"/>
-<Field name="member_card" nullable="true" size="8" type="string"/>
-<Field name="occupation" nullable="true" size="20" type="string"/>
-<Field name="houseowner" nullable="true" size="1" type="string"/>
-<Field name="num_cars_owned" nullable="true" size="1" type="integer"/>
-<Field locale="en.US" name="key" nullable="true" size="7" type="string"/>
+<Record name="customer_with_key" recordSize="239" type="fixed">
+<Field name="customer_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="account_num" nullable="true" shift="0" size="11" type="long"/>
+<Field name="lname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="mi" nullable="true" shift="0" size="4" type="string"/>
+<Field name="address1" nullable="true" shift="0" size="30" type="string"/>
+<Field name="city" nullable="true" shift="0" size="6" type="string"/>
+<Field name="state_province" nullable="true" shift="0" size="6" type="string"/>
+<Field name="postal_code" nullable="true" shift="0" size="5" type="string"/>
+<Field name="country" nullable="true" shift="0" size="5" type="string"/>
+<Field name="customer_region_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="phone1" nullable="true" shift="0" size="12" type="string"/>
+<Field name="phone2" nullable="true" shift="0" size="12" type="string"/>
+<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" shift="0" size="28" type="date"/>
+<Field name="marital_status" nullable="true" shift="0" size="1" type="string"/>
+<Field name="yearly_income" nullable="true" shift="0" size="13" type="string"/>
+<Field name="gender" nullable="true" shift="0" size="1" type="string"/>
+<Field name="total_children" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="num_children_at_home" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="education" nullable="true" shift="0" size="10" type="string"/>
+<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" shift="0" size="28" type="date"/>
+<Field name="member_card" nullable="true" shift="0" size="8" type="string"/>
+<Field name="occupation" nullable="true" shift="0" size="20" type="string"/>
+<Field name="houseowner" nullable="true" shift="0" size="1" type="string"/>
+<Field name="num_cars_owned" nullable="true" shift="0" size="1" type="integer"/>
+<Field locale="en.US" name="key" nullable="true" shift="0" size="7" type="string"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata1">
-<Record name="employee" type="delimited">
-<Field delimiter=";" name="employee_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="full_name" nullable="true" type="string"/>
-<Field delimiter=";" name="first_name" nullable="true" type="string"/>
-<Field delimiter=";" name="last_name" nullable="true" type="string"/>
-<Field delimiter=";" name="position_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="position_title" nullable="true" type="string"/>
-<Field delimiter=";" name="store_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="department_id" nullable="true" type="integer"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" type="date"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="hire_date" nullable="true" type="date"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="end_date" nullable="true" type="date"/>
-<Field delimiter=";" name="salary" nullable="true" type="numeric"/>
-<Field delimiter=";" name="supervisor_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="education_level" nullable="true" type="string"/>
-<Field delimiter=";" name="marital_status" nullable="true" type="string"/>
-<Field delimiter=";" name="gender" nullable="true" type="string"/>
-<Field delimiter="\n" name="management_role" nullable="true" type="string"/>
+<Record name="employee" recordSize="-1" type="delimited">
+<Field delimiter=";" name="employee_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="full_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="first_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="last_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="position_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="position_title" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="store_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="department_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="hire_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="end_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="salary" nullable="true" shift="0" type="numeric"/>
+<Field delimiter=";" name="supervisor_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="education_level" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="marital_status" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="gender" nullable="true" shift="0" type="string"/>
+<Field delimiter="\n" name="management_role" nullable="true" shift="0" type="string"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata3">
-<Record name="employee_with_key" type="delimited">
-<Field delimiter=";" name="employee_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="full_name" nullable="true" type="string"/>
-<Field delimiter=";" name="first_name" nullable="true" type="string"/>
-<Field delimiter=";" name="last_name" nullable="true" type="string"/>
-<Field delimiter=";" name="position_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="position_title" nullable="true" type="string"/>
-<Field delimiter=";" name="store_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="department_id" nullable="true" type="integer"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" type="date"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="hire_date" nullable="true" type="date"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="end_date" nullable="true" type="date"/>
-<Field delimiter=";" name="salary" nullable="true" type="numeric"/>
-<Field delimiter=";" name="supervisor_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="education_level" nullable="true" type="string"/>
-<Field delimiter=";" name="marital_status" nullable="true" type="string"/>
-<Field delimiter=";" name="gender" nullable="true" type="string"/>
-<Field delimiter=";" name="management_role" nullable="true" type="string"/>
-<Field delimiter="\n" locale="en.US" name="key" nullable="true" type="string"/>
+<Record name="employee_with_key" recordSize="-1" type="delimited">
+<Field delimiter=";" name="employee_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="full_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="first_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="last_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="position_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="position_title" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="store_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="department_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="hire_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="end_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="salary" nullable="true" shift="0" type="numeric"/>
+<Field delimiter=";" name="supervisor_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="education_level" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="marital_status" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="gender" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="management_role" nullable="true" shift="0" type="string"/>
+<Field delimiter="\n" locale="en.US" name="key" nullable="true" shift="0" type="string"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata5">
-<Record name="suspicious" type="delimited">
-<Field delimiter=";" name="lname" nullable="true" type="string"/>
-<Field delimiter=";" name="fname" nullable="true" type="string"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="birthdate" nullable="true" type="date"/>
-<Field delimiter=";" name="gender" nullable="true" type="string"/>
-<Field delimiter=";" name="last_name" nullable="true" type="string"/>
-<Field delimiter=";" name="first_name" nullable="true" type="string"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" type="date"/>
-<Field delimiter=";" name="gender1" nullable="true" type="string"/>
-<Field delimiter=";" length="8" name="_lname_conformity_" nullable="true" scale="2" type="numeric"/>
-<Field delimiter=";" length="8" name="_fname_conformity_" nullable="true" scale="2" type="numeric"/>
-<Field delimiter="\n" length="8" name="_total_conformity_" nullable="true" scale="2" type="numeric"/>
+<Record name="suspicious" recordSize="-1" type="delimited">
+<Field delimiter=";" name="lname" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="fname" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="birthdate" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="gender" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="last_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="first_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="gender1" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" length="8" name="_lname_conformity_" nullable="true" scale="2" shift="0" type="numeric"/>
+<Field delimiter=";" length="8" name="_fname_conformity_" nullable="true" scale="2" shift="0" type="numeric"/>
+<Field delimiter="\n" length="8" name="_total_conformity_" nullable="true" scale="2" shift="0" type="numeric"/>
 </Record>
 </Metadata>
 <Connection dbConfig="koule_postgre.cfg" id="DBConnection0" type="JDBC"/>
 <Property fileURL="workspace.prm" id="GraphParameter0"/>
 </Global>
 <Phase number="0">
-<Node conformity="0.8" enabled="enabled" guiHeight="67" guiName="aproximative join" guiWidth="122" guiX="444" guiY="176" id="APROX_MERGE_JOIN1" joinKey="lname 4 0.5 true false false false;fname 3 0.5 true false false false" matchingKey="key" type="APROX_MERGE_JOIN">
-<attr name="transform">${out.0.lname} = ${in.0.lname};
-${out.0.fname} = ${in.0.fname};
-${out.0.last_name} = ${in.1.last_name};
-${out.0.first_name} = ${in.1.first_name};
-</attr>
-<attr name="slaveOverrideKey">last_name;first_name</attr>
+<Node conformity="0.8" enabled="enabled" guiHeight="67" guiName="aproximative join" guiWidth="122" guiX="444" guiY="176" id="APROX_MERGE_JOIN1" joinKey="lname 4 0.5 true false false false;fname 3 0.5 true false false false" matchingKey="key" slaveOverrideKey="last_name;first_name" transformClass="customizedTransformExample" type="APROX_MERGE_JOIN">
 <attr name="transformForSuspicious">${out.0.lname} = ${in.0.lname};
 ${out.0.fname} = ${in.0.fname};
 ${out.0.birthdate} = ${in.0.birthdate};
@@ -152,9 +146,15 @@
 <Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/employee.out" guiHeight="69" guiName="employee without pair" guiWidth="118" guiX="596" guiY="303" id="DELIMITED_DATA_WRITER_NIO1" type="DELIMITED_DATA_WRITER"/>
 <Node enabled="enabled" guiHeight="64" guiName="Ext Sort" guiWidth="95" guiX="296" guiY="92" id="EXT_SORT0" sortKey="key" type="EXT_SORT"/>
 <Node enabled="enabled" guiHeight="64" guiName="Ext Sort" guiWidth="111" guiX="296" guiY="259" id="EXT_SORT1" sortKey="key" type="EXT_SORT"/>
-<Node OneRecordPerLine="true" enabled="enabled" fileURL="${WORKSPACE}/data/customers.dat" guiHeight="72" guiName="customer" guiWidth="119" guiX="7" guiY="92" id="FIXLEN_DATA_READER_NIO0" type="FIXLEN_DATA_READER"/>
-<Node OneRecordPerLine="true" append="false" enabled="enabled" fileURL="${WORKSPACE}/output/conforming.txt" guiHeight="69" guiName="joined - similarity greater then 0.8" guiWidth="111" guiX="596" guiY="54" id="FIXLEN_DATA_WRITER_NIO0" type="FIXLEN_DATA_WRITER"/>
-<Node OneRecordPerLine="true" append="false" enabled="enabled" fileURL="${WORKSPACE}/output/customers.out" guiHeight="54" guiName="customer without pair" guiWidth="123" guiX="596" guiY="215" id="FIXLEN_DATA_WRITER_NIO1" type="FIXLEN_DATA_WRITER"/>
+<Node byteMode="false" enabled="enabled" fileURL="${WORKSPACE}/data/customers.dat" guiHeight="72" guiName="customer" guiWidth="119" guiX="7" guiY="92" id="FIXLEN_DATA_READER_NIO0" type="FIXLEN_DATA_READER">
+<attr name="OneRecordPerLine">true</attr>
+</Node>
+<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/conforming.txt" guiHeight="69" guiName="joined - similarity greater then 0.8" guiWidth="111" guiX="596" guiY="54" id="FIXLEN_DATA_WRITER_NIO0" type="FIXLEN_DATA_WRITER">
+<attr name="OneRecordPerLine">true</attr>
+</Node>
+<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/customers.out" guiHeight="54" guiName="customer without pair" guiWidth="123" guiX="596" guiY="215" id="FIXLEN_DATA_WRITER_NIO1" type="FIXLEN_DATA_WRITER">
+<attr name="OneRecordPerLine">true</attr>
+</Node>
 <Node enabled="enabled" guiHeight="70" guiName="Key generator" guiWidth="138" guiX="152" guiY="92" id="KEY_GEN0" keyExpression="lname 4;fname 3" type="KEY_GEN"/>
 <Node enabled="enabled" guiHeight="88" guiName="Key generator" guiWidth="145" guiX="152" guiY="259" id="KEY_GEN1" keyExpression="last_name 4;first_name 3" type="KEY_GEN"/>
 <Edge fromNode="APROX_MERGE_JOIN1:0" guiBendpoints="" id="Edge0" inPort="0 (joined - similarity greater then 0.8)" metadata="Metadata4" outPort="0 (aproximative join)" toNode="FIXLEN_DATA_WRITER_NIO0:0"/>



From cloveretl-svn-commits at lists.berlios.de  Thu Jan 25 14:53:01 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Thu, 25 Jan 2007 14:53:01 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2371 -
	trunk/cloveretl.engine/examples
Message-ID: <200701251353.l0PDr1Gf028264@sheep.berlios.de>

Author: agad
Date: 2007-01-25 14:53:00 +0100 (Thu, 25 Jan 2007)
New Revision: 2371

Modified:
   trunk/cloveretl.engine/examples/graphDBLoad5.grf
Log:
UPDATE:changed values of attributes cloverFields and fieldMap

Modified: trunk/cloveretl.engine/examples/graphDBLoad5.grf
===================================================================
--- trunk/cloveretl.engine/examples/graphDBLoad5.grf	2007-01-25 13:51:53 UTC (rev 2370)
+++ trunk/cloveretl.engine/examples/graphDBLoad5.grf	2007-01-25 13:53:00 UTC (rev 2371)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph description="This graph illustrates usage of dbFields and cloverFields parameters of&#10;DB_OUTPUT_TABLE component.&#10;Parameter dbFields allows to specify that only certain fields of target DB table&#10;will be populated.&#10;Parameter cloverFields allows to specify which input/Clover fields are used&#10;for populating target fields.&#10;The final mapping is determined by the order in which Clover fields and DB fields appear&#10;in the parameters.&#10;Note: in this example, input field LAST_NAME is mapped onto FIRST_NAME in DB and&#10;input field FIRST_NAME onto LAST_NAME in DB.&#10;Note2: parameter batchMode allows for grouping of inserts into DB thus increasing throughput. It works&#10;only with DBs/JDBC drivers which support this feature (e.g. Oracle).&#10;" name="TestingDBOutputTable">
+<Graph created="Wed Jan 24 09:02:52 CET 2007" description="This graph illustrates usage of dbFields and cloverFields parameters of&#10;DB_OUTPUT_TABLE component.&#10;Parameter dbFields allows to specify that only certain fields of target DB table&#10;will be populated.&#10;Parameter cloverFields allows to specify which input/Clover fields are used&#10;for populating target fields.&#10;The final mapping is determined by the order in which Clover fields and DB fields appear&#10;in the parameters.&#10;Note: in this example, input field LAST_NAME is mapped onto FIRST_NAME in DB and&#10;input field FIRST_NAME onto LAST_NAME in DB.&#10;Note2: parameter batchMode allows for grouping of inserts into DB thus increasing throughput. It works&#10;only with DBs/JDBC drivers which support this feature (e.g. Oracle).&#10;" guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Wed Jan 24 10:55:54 CET 2007" name="TestingDBOutputTable" revision="1.0">
 <Global>
 <Metadata fileURL="metadata/employeeDB.fmt" id="InMetadata"/>
 <Connection dbConfig="koule_postgre.cfg" id="DBConnection0" type="JDBC"/>
@@ -7,7 +7,7 @@
 </Global>
 <Phase number="0">
 <Node enabled="enabled" fileURL="${WORKSPACE}/employees.list.dat" guiHeight="25" guiName="INPUT" guiWidth="50" guiX="20" guiY="20" id="INPUT" type="DELIMITED_DATA_READER"/>
-<Node batchMode="false" cloverFields="LAST_NAME;FIRST_NAME" commit="300" dbConnection="DBConnection0" dbFields="FIRST_NAME;LAST_NAME" dbTable="employee_tmp" enabled="enabled" guiHeight="25" guiName="OUTPUT" guiWidth="50" guiX="195" guiY="20" id="OUTPUT" type="DB_OUTPUT_TABLE"/>
+<Node batchMode="false" commit="300" dbConnection="DBConnection0" dbTable="employee_tmp" enabled="enabled" fieldMap="FIRST_NAME=first_name;LAST_NAME=last_name" guiHeight="25" guiName="OUTPUT" guiWidth="50" guiX="195" guiY="20" id="OUTPUT" type="DB_OUTPUT_TABLE"/>
 <Edge fromNode="INPUT:0" guiBendpoints="" id="INEDGE2" inPort="0 (OUTPUT)" metadata="InMetadata" outPort="0 (INPUT)" toNode="OUTPUT:0"/>
 </Phase>
 </Graph>



From cloveretl-svn-commits at lists.berlios.de  Thu Jan 25 15:24:51 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Thu, 25 Jan 2007 15:24:51 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2372 -
	trunk/cloveretl.engine/examples/metadata
Message-ID: <200701251424.l0PEOpY3031692@sheep.berlios.de>

Author: agad
Date: 2007-01-25 15:24:50 +0100 (Thu, 25 Jan 2007)
New Revision: 2372

Modified:
   trunk/cloveretl.engine/examples/metadata/employees.fmt
Log:
UPDATE:disfunctional example fixed

Modified: trunk/cloveretl.engine/examples/metadata/employees.fmt
===================================================================
--- trunk/cloveretl.engine/examples/metadata/employees.fmt	2007-01-25 13:53:00 UTC (rev 2371)
+++ trunk/cloveretl.engine/examples/metadata/employees.fmt	2007-01-25 14:24:50 UTC (rev 2372)
@@ -1,20 +1,20 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Record name="Employees" type="delimited">
-	<Field name="EmployeeID" type="string" delimiter=";" />
-	<Field name="LastName" type="string" delimiter=";" format="#" />
-	<Field name="FirstName" type="string" delimiter=";"/>
-	<Field name="Title" type="string" delimiter=";"/>
-	<Field name="TitleInCourtesy" type="string" delimiter=";"/>
-	<Field name="BirthDate" type="date" delimiter=";" format="dd/MM/yyyy" />
-	<Field name="HireDate" type="date" delimiter=";" format="dd/MM/yyyy" />
-	<Field name="Address" type="string" delimiter=";"/>
-	<Field name="City" type="string" delimiter=";"/>
-	<Field name="Region" type="string" delimiter=";"/>
-	<Field name="PostalCode" type="string" delimiter=";"/>
-	<Field name="Country" type="string" delimiter=";"/>
-	<Field name="Phone" type="string" delimiter=";"/>
-	<Field name="Extension" type="string" delimiter=";"/>
-	<Field name="Photo" type="string" delimiter=";"/>
-	<Field name="Memo" type="string" delimiter=";"/>
-	<Field name="ReportsTo" type="string" delimiter="\n"/>
+<Record name="Employees" recordDelimiter="" recordSize="-1" type="delimited">
+<Field delimiter=";" name="EmployeeID" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" format="#" name="LastName" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="FirstName" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Title" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="TitleInCourtesy" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" format="dd/MM/yyyy" name="BirthDate" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="dd/MM/yyyy" name="HireDate" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="Address" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="City" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Region" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="PostalCode" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Country" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Phone" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Extension" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Photo" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Memo" nullable="true" shift="0" type="string"/>
+<Field delimiter="\r\n" name="ReportsTo" nullable="true" shift="0" type="integer"/>
 </Record>



From cloveretl-svn-commits at lists.berlios.de  Thu Jan 25 15:26:01 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Thu, 25 Jan 2007 15:26:01 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2373 -
	trunk/cloveretl.engine/examples
Message-ID: <200701251426.l0PEQ1I5031749@sheep.berlios.de>

Author: agad
Date: 2007-01-25 15:26:01 +0100 (Thu, 25 Jan 2007)
New Revision: 2373

Modified:
   trunk/cloveretl.engine/examples/graphExtFilter.grf
Log:
UPDATE:disfunctional example fixed

Modified: trunk/cloveretl.engine/examples/graphExtFilter.grf
===================================================================
(Binary files differ)



From cloveretl-svn-commits at lists.berlios.de  Thu Jan 25 15:26:44 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Thu, 25 Jan 2007 15:26:44 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2374 -
	trunk/cloveretl.engine/examples
Message-ID: <200701251426.l0PEQiLt031823@sheep.berlios.de>

Author: agad
Date: 2007-01-25 15:26:43 +0100 (Thu, 25 Jan 2007)
New Revision: 2374

Modified:
   trunk/cloveretl.engine/examples/graphIntersectData.grf
Log:
UPDATE:disfunctional example fixed

Modified: trunk/cloveretl.engine/examples/graphIntersectData.grf
===================================================================
(Binary files differ)



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 09:53:04 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 09:53:04 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2375 -
	trunk/cloveretl.engine/src/org/jetel/component
Message-ID: <200701260853.l0Q8r44G018042@sheep.berlios.de>

Author: agad
Date: 2007-01-26 09:53:03 +0100 (Fri, 26 Jan 2007)
New Revision: 2375

Modified:
   trunk/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java
Log:
FIX:bugfix in method transform - customizedRecordTransform

Modified: trunk/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java	2007-01-25 14:26:43 UTC (rev 2374)
+++ trunk/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java	2007-01-26 08:53:03 UTC (rev 2375)
@@ -1617,9 +1617,9 @@
 				sequenceID = ruleString.indexOf(DOT) == -1 ? ruleString
 						: ruleString.substring(0, ruleString.indexOf(DOT));
 				try {
-						target[order[i][REC_NO]].getField(order[i][FIELD_NO]).setValue(
+						target[order[i][REC_NO]].getField(order[i][FIELD_NO]).fromString(
 								transformMapArray[order[i][REC_NO]][order[i][FIELD_NO]]
-										.getValue(getGraph().getSequence(sequenceID)));
+										.getValue(getGraph().getSequence(sequenceID)).toString());
 					} catch (BadDataFormatException e) {
 						errorMessage = "Can't set value from sequence " + sequenceID + 
 							" to field " + targetMetadata[order[i][REC_NO]].getName() + 



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 09:53:50 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 09:53:50 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2376 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701260853.l0Q8ro5K018149@sheep.berlios.de>

Author: agad
Date: 2007-01-26 09:53:50 +0100 (Fri, 26 Jan 2007)
New Revision: 2376

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
Log:
UPDATE:better error message

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-26 08:53:03 UTC (rev 2375)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-26 08:53:50 UTC (rev 2376)
@@ -43,6 +43,7 @@
 import org.jetel.metadata.DataFieldMetadata;
 import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.util.QuotingDecoder;
+import org.jetel.util.StringUtils;
 
 /**
  *  Parsing delimited text data. Supports delimiters with the length of up to 32
@@ -450,11 +451,13 @@
 			record.getField(fieldNum).fromString(strData);
 		} catch (BadDataFormatException bdfe) {
 			if(exceptionHandler != null ) {  //use handler only if configured
-                exceptionHandler.populateHandler(getErrorMessage(bdfe.getMessage(),data,recordCounter, fieldNum), record, -1, fieldNum, strData, bdfe);
+                exceptionHandler.populateHandler(getErrorMessage(bdfe
+						.getMessage(), data, recordCounter, fieldNum), record,
+						-1, fieldNum, "\"" + StringUtils.specCharToString(strData) + "\"", bdfe);
 			} else {
                 bdfe.setRecordNumber(recordCounter);
                 bdfe.setFieldNumber(fieldNum);
-                bdfe.setOffendingValue(strData);
+                bdfe.setOffendingValue("\"" + StringUtils.specCharToString(strData) + "\"");
                 throw bdfe;
 			}
 		} catch (Exception ex) {



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 10:04:48 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 10:04:48 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2377 -
	trunk/cloveretl.engine/src/org/jetel/util
Message-ID: <200701260904.l0Q94mDQ019037@sheep.berlios.de>

Author: agad
Date: 2007-01-26 10:04:48 +0100 (Fri, 26 Jan 2007)
New Revision: 2377

Modified:
   trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java
Log:
UPDATE: StringUtils class - some methods accept CharSequence instead String argument

Modified: trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java	2007-01-26 08:53:50 UTC (rev 2376)
+++ trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java	2007-01-26 09:04:48 UTC (rev 2377)
@@ -46,7 +46,7 @@
 	 *      text representation (i.e.\n -> "\n" )
 	 * @since                 July 25, 2002
 	 */
-	public static String specCharToString(String controlString) {
+	public static String specCharToString(CharSequence controlString) {
 		StringBuffer copy = new StringBuffer();
 		char character;
 		for (int i = 0; i < controlString.length(); i++) {
@@ -83,8 +83,8 @@
 	 * @return                String with control characters
 	 * @since                 July 25, 2002
 	 */
-	public static String stringToSpecChar(String controlString) {
-		if(controlString == null) {
+	public static String stringToSpecChar(CharSequence controlString) {
+		if(isEmpty(controlString)) {
 			return null;
 		}
 		StringBuffer copy = new StringBuffer();
@@ -429,7 +429,7 @@
 		return stringArraytoString(strings,' ');
 	} 
   
-    public static boolean isEmpty(String s) {
+    public static boolean isEmpty(CharSequence s) {
         return s == null || s.length() == 0;
     }
 



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 10:07:00 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 10:07:00 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2378 -
	trunk/cloveretl.engine/examples
Message-ID: <200701260907.l0Q970Gr019328@sheep.berlios.de>

Author: agad
Date: 2007-01-26 10:07:00 +0100 (Fri, 26 Jan 2007)
New Revision: 2378

Modified:
   trunk/cloveretl.engine/examples/customizedTransformExample.java
Log:
UPDATE:customizedTransformExample uses sequence

Modified: trunk/cloveretl.engine/examples/customizedTransformExample.java
===================================================================
--- trunk/cloveretl.engine/examples/customizedTransformExample.java	2007-01-26 09:04:48 UTC (rev 2377)
+++ trunk/cloveretl.engine/examples/customizedTransformExample.java	2007-01-26 09:07:00 UTC (rev 2378)
@@ -4,6 +4,7 @@
 import org.jetel.component.CustomizedRecordTransform;
 import org.jetel.component.DataRecordTransform;
 import org.jetel.data.DataRecord;
+import org.jetel.data.sequence.Sequence;
 import org.jetel.exception.ComponentNotReadyException;
 import org.jetel.exception.TransformException;
 import org.jetel.metadata.DataRecordMetadata;
@@ -16,6 +17,9 @@
 	public boolean init(Properties arg0, DataRecordMetadata[] arg1, DataRecordMetadata[] arg2) throws ComponentNotReadyException {
 		transformation = new CustomizedRecordTransform(LogFactory.getLog(customizedTransformExample.class));
 		transformation.addFieldToFieldRule("*.*", "*.*");
+		Sequence sequence = getGraph().getSequence("Sequence0");
+		sequence.reset();
+		transformation.addSequenceToFieldRule("0.no", sequence);
 		transformation.setGraph(this.getGraph());
 		return transformation.init(arg0, arg1, arg2);
 	}



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 10:07:25 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 10:07:25 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2379 -
	trunk/cloveretl.engine/examples
Message-ID: <200701260907.l0Q97Pnr019359@sheep.berlios.de>

Author: agad
Date: 2007-01-26 10:07:25 +0100 (Fri, 26 Jan 2007)
New Revision: 2379

Modified:
   trunk/cloveretl.engine/examples/graphAproximativeJoin.grf
Log:
UPDATE:customizedTransformExample uses sequence

Modified: trunk/cloveretl.engine/examples/graphAproximativeJoin.grf
===================================================================
--- trunk/cloveretl.engine/examples/graphAproximativeJoin.grf	2007-01-26 09:07:00 UTC (rev 2378)
+++ trunk/cloveretl.engine/examples/graphAproximativeJoin.grf	2007-01-26 09:07:25 UTC (rev 2379)
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph created="Tue Oct 24 13:04:40 CEST 2006" description="This graph ilustrates usage of Aproximative Join component.&#10;This component requires prepared data: they have &#10;to have a key (component Key Generator creates it) &#10;and be sorted by this key." guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Thu Jan 25 12:43:25 CET 2007" name="graphFixedLengthData" revision="1.3">
+<Graph created="Tue Oct 24 13:04:40 CEST 2006" description="This graph ilustrates usage of Aproximative Join component.&#10;This component requires prepared data: they have &#10;to have a key (component Key Generator creates it) &#10;and be sorted by this key." guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Fri Jan 26 09:29:45 CET 2007" name="graphFixedLengthData" revision="1.5">
 <Global>
 <Metadata id="Metadata4">
-<Record name="conforming_out" recordDelimiter="\n" recordSize="68" type="fixed">
+<Record name="conforming_out" recordDelimiter="\n" recordSize="71" type="fixed">
+<Field name="no" nullable="true" shift="0" size="3" type="integer"/>
 <Field name="lname" nullable="true" shift="0" size="15" type="string"/>
 <Field name="fname" nullable="true" shift="0" size="15" type="string"/>
 <Field name="last_name" nullable="true" shift="0" size="15" type="string"/>
@@ -129,6 +130,7 @@
 </Metadata>
 <Connection dbConfig="koule_postgre.cfg" id="DBConnection0" type="JDBC"/>
 <Property fileURL="workspace.prm" id="GraphParameter0"/>
+<Sequence cached="10" fileURL="id.seq" id="Sequence0" name="id" start="1" step="1" type="SIMPLE_SEQUENCE"/>
 </Global>
 <Phase number="0">
 <Node conformity="0.8" enabled="enabled" guiHeight="67" guiName="aproximative join" guiWidth="122" guiX="444" guiY="176" id="APROX_MERGE_JOIN1" joinKey="lname 4 0.5 true false false false;fname 3 0.5 true false false false" matchingKey="key" slaveOverrideKey="last_name;first_name" transformClass="customizedTransformExample" type="APROX_MERGE_JOIN">



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 13:59:25 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 13:59:25 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2380 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701261259.l0QCxP1t018626@sheep.berlios.de>

Author: otasanek
Date: 2007-01-26 13:59:24 +0100 (Fri, 26 Jan 2007)
New Revision: 2380

Modified:
   trunk/cloveretl.component/src/org/jetel/component/SequenceChecker.java
Log:
FIX: in execute() - first call writeRecordBroadcast then return

Modified: trunk/cloveretl.component/src/org/jetel/component/SequenceChecker.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/SequenceChecker.java	2007-01-26 09:07:25 UTC (rev 2379)
+++ trunk/cloveretl.component/src/org/jetel/component/SequenceChecker.java	2007-01-26 12:59:24 UTC (rev 2380)
@@ -35,8 +35,8 @@
 import org.jetel.graph.Result;
 import org.jetel.graph.TransformationGraph;
 import org.jetel.util.ComponentXMLAttributes;
+import org.jetel.util.MiscUtils;
 import org.jetel.util.StringUtils;
-import org.jetel.util.MiscUtils;
 import org.w3c.dom.Element;
 /**
  *  <h3>Sequence Checker Component</h3>
@@ -142,6 +142,7 @@
 		DataRecord[] records = {new DataRecord(inPort.getMetadata()), new DataRecord(inPort.getMetadata())};
 		records[0].init();
 		records[1].init();
+		Result result = Result.FINISHED_OK;
 		
 		while ((records[current] = inPort.readRecord(records[current])) != null && runIt) {
 			if (isFirst) {
@@ -150,13 +151,18 @@
 				compareResult = recordComparator.compare(records[current], records[previous]);
 
 				if (compareResult == 0) {
-					if (uniqueKeys) 
-						return Result.ERROR;
+					if (uniqueKeys) {
+						result = Result.ERROR;
+						break;
+					}
 				} else if (compareResult > 0) {
-					if (!sortOrderAscending) 
-						return Result.ERROR;
+					if (!sortOrderAscending) {
+						result = Result.ERROR;
+						break;
+					}
 				} else if (sortOrderAscending) {
-					return Result.ERROR;
+					result = Result.ERROR;
+					break;
 				}
 			}
 			
@@ -167,7 +173,7 @@
 			previous = previous ^ 1;
 		}
 		if (isOutPort) broadcastEOF();
-        return runIt ? Result.FINISHED_OK : Result.ABORTED;
+        return runIt ? result : Result.ABORTED;
 	}
 
 	@Override



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 14:13:39 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 14:13:39 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2381 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701261313.l0QDDdc0021232@sheep.berlios.de>

Author: agad
Date: 2007-01-26 14:13:39 +0100 (Fri, 26 Jan 2007)
New Revision: 2381

Modified:
   trunk/cloveretl.component/src/org/jetel/component/LookupJoin.java
Log:
FIX:LookupJoin component - method checkConfig is empty, because of problem with twice initialization of DBLookupTable

Modified: trunk/cloveretl.component/src/org/jetel/component/LookupJoin.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/LookupJoin.java	2007-01-26 12:59:24 UTC (rev 2380)
+++ trunk/cloveretl.component/src/org/jetel/component/LookupJoin.java	2007-01-26 13:13:39 UTC (rev 2381)
@@ -301,42 +301,17 @@
         checkInputPorts(status, 1, 1);
         checkOutputPorts(status, 1, 1);
 
-        try {
-        	
-    		lookupTable = getGraph().getLookupTable(lookupTableName);
-    		if (lookupTable == null) {
-    			throw new ComponentNotReadyException("Lookup table \""
-    					+ lookupTableName + "\" not found.");
-    		}
-    		if (!lookupTable.isInitialized()) {
-    			lookupTable.init();
-    		}
-    		lookupMetadata = lookupTable.getMetadata();
-    		DataRecordMetadata inMetadata[] = {
-    				getInputPort(READ_FROM_PORT).getMetadata(), lookupMetadata };
-    		DataRecordMetadata outMetadata[] = { getOutputPort(WRITE_TO_PORT)
-    				.getMetadata() };
-    		try {
-    			recordKey = new RecordKey(joinKey, inMetadata[0]);
-    			recordKey.init();
-    			lookupTable.setLookupKey(recordKey);
-    		} catch (Exception e) {
-    			throw new ComponentNotReadyException(this, e);
-    		}
-        	
-        	
-    		if (freeLookupTable) {
-    			lookupTable.free();
-    		}
-//            init();
-//            free();
-        } catch (ComponentNotReadyException e) {
-            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
-            if(!StringUtils.isEmpty(e.getAttributeName())) {
-                problem.setAttributeName(e.getAttributeName());
-            }
-            status.add(problem);
-        }
+ 
+//        try {
+////            init();
+////            free();
+//        } catch (ComponentNotReadyException e) {
+//            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
+//            if(!StringUtils.isEmpty(e.getAttributeName())) {
+//                problem.setAttributeName(e.getAttributeName());
+//            }
+//            status.add(problem);
+//        }
         
         return status;
 	}



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 14:14:31 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 14:14:31 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2382 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701261314.l0QDEVIZ021421@sheep.berlios.de>

Author: agad
Date: 2007-01-26 14:14:31 +0100 (Fri, 26 Jan 2007)
New Revision: 2382

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
Log:
UPDATE:better error message

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-26 13:13:39 UTC (rev 2381)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-26 13:14:31 UTC (rev 2382)
@@ -390,7 +390,10 @@
                             try{
                                 fieldStringBuffer.put((char) character);
                             }catch(BufferOverflowException ex){
-                                throw new IOException("Field too long or can not find delimiter ["+String.valueOf(delimiters[fieldCounter])+"]");
+                                throw new IOException(
+										"Field too long or can not find delimiter ["
+												+ StringUtils.specCharToString(String
+																.valueOf(delimiters[fieldCounter]))						+ "]\n");
                             }
 						}
 						delimiterPosition = 0;



From cloveretl-svn-commits at lists.berlios.de  Fri Jan 26 14:16:49 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Fri, 26 Jan 2007 14:16:49 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2383 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701261316.l0QDGnSU021699@sheep.berlios.de>

Author: otasanek
Date: 2007-01-26 14:16:48 +0100 (Fri, 26 Jan 2007)
New Revision: 2383

Modified:
   trunk/cloveretl.component/src/org/jetel/component/SequenceChecker.java
Log:
FIX: viz previous fix

Modified: trunk/cloveretl.component/src/org/jetel/component/SequenceChecker.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/SequenceChecker.java	2007-01-26 13:14:31 UTC (rev 2382)
+++ trunk/cloveretl.component/src/org/jetel/component/SequenceChecker.java	2007-01-26 13:16:48 UTC (rev 2383)
@@ -142,7 +142,7 @@
 		DataRecord[] records = {new DataRecord(inPort.getMetadata()), new DataRecord(inPort.getMetadata())};
 		records[0].init();
 		records[1].init();
-		Result result = Result.FINISHED_OK;
+		boolean error = false; 
 		
 		while ((records[current] = inPort.readRecord(records[current])) != null && runIt) {
 			if (isFirst) {
@@ -152,16 +152,16 @@
 
 				if (compareResult == 0) {
 					if (uniqueKeys) {
-						result = Result.ERROR;
+						error = true;
 						break;
 					}
 				} else if (compareResult > 0) {
 					if (!sortOrderAscending) {
-						result = Result.ERROR;
+						error = true;
 						break;
 					}
 				} else if (sortOrderAscending) {
-					result = Result.ERROR;
+					error = true;
 					break;
 				}
 			}
@@ -173,6 +173,7 @@
 			previous = previous ^ 1;
 		}
 		if (isOutPort) broadcastEOF();
+		Result result = error ? Result.ERROR : Result.FINISHED_OK;
         return runIt ? result : Result.ABORTED;
 	}
 



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 10:14:11 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 10:14:11 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2384 -
	trunk/cloveretl.engine/src/org/jetel/util
Message-ID: <200701290914.l0T9EBCf003378@sheep.berlios.de>

Author: dpavlis
Date: 2007-01-29 10:14:10 +0100 (Mon, 29 Jan 2007)
New Revision: 2384

Modified:
   trunk/cloveretl.engine/src/org/jetel/util/BitArray.java
Log:
UPDATE:performance optimalized

Modified: trunk/cloveretl.engine/src/org/jetel/util/BitArray.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/util/BitArray.java	2007-01-26 13:16:48 UTC (rev 2383)
+++ trunk/cloveretl.engine/src/org/jetel/util/BitArray.java	2007-01-29 09:14:10 UTC (rev 2384)
@@ -18,7 +18,6 @@
 *
 */
 package org.jetel.util;
-import java.lang.IndexOutOfBoundsException;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
 /**
@@ -35,6 +34,7 @@
 
 	private  byte bits[];
 	private  int length;
+    private  int lengthBytes;
 
 
 	/**
@@ -45,7 +45,8 @@
 	public BitArray(int size) {
 		length = size;
 		if (length<1) throw new RuntimeException("Can't create ZERO length array !");
-		bits = new byte[(size-1) / 8 + 1];
+		bits = new byte[((size-1) >> 3) + 1];
+        lengthBytes=bits.length;
 		// init array
         Arrays.fill(bits,(byte)0);
 	}
@@ -61,6 +62,7 @@
     private BitArray(byte[] bits,int length){
         this.bits=bits;
         this.length=length;
+        this.lengthBytes=bitsLength2Bytes(length);
         
     }
     
@@ -78,20 +80,31 @@
     }
 
     /**
-     * Resizes the BitArray to new size & initializes all
-     * bits to 0.
+     * Utility method which makes sure we can
+     * accomodate specified number of bits and then
+     * resets all bits.
      * 
      * @param size
+     * @since 23.1.2007
+     */
+    public void resize(int size){
+       ensureSize(size);
+       resetAll();
+    }
+    
+    /**
+     * Ensures that the BitArray can accomodate specified
+     * number of bits
+     * 
+     * @param size
      * @since 18.1.2007
      */
-    public void resize(int size){
+    public void ensureSize(int size){
         length = size;
-        if (length<1) throw new RuntimeException("Can't create ZERO length array !");
-        if (bits.length < ((size-1) / 8 + 1)){
-            bits = new byte[(size-1) / 8 + 1];
+        lengthBytes = ((size-1) >> 3) + 1; 
+        if (bits.length < lengthBytes){
+            bits = new byte[lengthBytes];
         }
-        // init array
-        Arrays.fill(bits,(byte)0);
        
     }
     
@@ -102,9 +115,6 @@
 	 *@param  index  which bit to set
 	 */
 	public final void set(int index) {
-		if (index >= length) {
-			throw new IndexOutOfBoundsException();
-		}
 		bits[index >> 3] |= (byte) (1 << (index % 8));
 	}
 
@@ -116,19 +126,16 @@
 	 *@param  index  which bit to reset
 	 */
 	public final void reset(int index) {
-		if (index >= length) {
-			throw new IndexOutOfBoundsException();
-		}
 		bits[index >> 3] &= (~((byte) (1 << (index % 8))));
 	}
 
     
     public final void resetAll(){
-        Arrays.fill(bits, (byte)0);
+        Arrays.fill(bits,0,lengthBytes,(byte)0);
     }
     
     public final void setAll(){
-        Arrays.fill(bits,(byte)0xFF);
+        Arrays.fill(bits,0,lengthBytes,(byte)0xFF);
     }
 
 	/**
@@ -138,24 +145,20 @@
 	 *@param  index  which bit to check
 	 *@return        true/false according to bit state
 	 */
-	public final boolean get(int index) {
-		if (index >= length) {
-			throw new IndexOutOfBoundsException();
-		}
-		byte pattern = (byte) (1 << (index % 8));
-		return (bits[index >> 3] & pattern) == pattern ? true : false;
+	public final boolean isSet(int index) {
+		return (bits[index >> 3] & ((byte) (1 << (index % 8)))) != 0;
 	}
 
 
 	/**
 	 *  Gets state of specified bit<br>
-	 *  Synonym for get()
+	 *  Synonym for isSet()
 	 *
 	 *@param  index  which bit to check
 	 *@return        true/false according to bit state
 	 */
-	public final boolean isSet(int index) {
-		return get(index);
+	public final boolean get(int index) {
+		return isSet(index);
 	}
 
 
@@ -213,7 +216,7 @@
      *@since          October 29, 2002
      */
     public void serialize(ByteBuffer buffer) {
-         buffer.put(bits);
+         buffer.put(bits,0,lengthBytes);
     }
 
 
@@ -224,7 +227,7 @@
      *@since          October 29, 2002
      */
     public void deserialize(ByteBuffer buffer) {
-        buffer.get(bits);
+        buffer.get(bits,0,lengthBytes);
     }
 
     
@@ -253,6 +256,11 @@
         bytes[bit >> 3] |= (byte) (1 << (bit % 8));
     }
     
+    public final static void set(ByteBuffer bytes,int base,int bit){
+        final int position=bit >> 3 + bytes.position() + base ;
+        bytes.put(position, (byte)( bytes.get(position) | (1 << (bit % 8))));
+    }
+    
     /**
      *  Gets status of specified bit in array of bytes - counting
      * from left.
@@ -264,10 +272,14 @@
      * @since 18.1.2007
      */
     public final static boolean isSet(byte[] bytes,int bit){
-        final byte pattern = (byte) (1 << (bit % 8));
-        return ((bytes[bit >> 3] & pattern) == pattern );
+        return ((bytes[bit >> 3] & ((byte) (1 << (bit % 8)))) != 0 );
     }
     
+    public final static boolean isSet(ByteBuffer bytes,int base, int bit){
+        final int position=bit >> 3 + bytes.position() + base ;
+        return ((bytes.get(position) & ((byte) (1 << (bit % 8))))!= 0); 
+        
+    }
     
     /**
      * Resets specified bit in array of bytes - counting
@@ -281,6 +293,22 @@
     public final static void reset(byte[] bytes, int bit){
         bytes[bit >> 3] &= (~((byte) (1 << (bit % 8))));
     }
+  
+    public final static void reset(ByteBuffer bytes, int base, int bit){
+        final int position=bit >> 3 + bytes.position()+base;
+        bytes.put(position, (byte)( bytes.get(position) & (~((1 << (bit % 8))))));
+    }
+
+    /**
+     * How many bytes are used to store the number
+     * of bits this BitArray can represent
+     * 
+     * @return the lengthBytes
+     * @since 25.1.2007
+     */
+    public int getLengthBytes() {
+        return lengthBytes;
+    }   
 }
 /*
  *  End class BitArray



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 10:16:06 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 10:16:06 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2385 -
	trunk/cloveretl.engine/src/org/jetel/graph
Message-ID: <200701290916.l0T9G6Tv003676@sheep.berlios.de>

Author: dpavlis
Date: 2007-01-29 10:16:06 +0100 (Mon, 29 Jan 2007)
New Revision: 2385

Modified:
   trunk/cloveretl.engine/src/org/jetel/graph/DirectEdge.java
Log:
MINOR:extended error message (IOException text) thrown when BUFFER OVERFLOW during serialization(writing)

Modified: trunk/cloveretl.engine/src/org/jetel/graph/DirectEdge.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/DirectEdge.java	2007-01-29 09:14:10 UTC (rev 2384)
+++ trunk/cloveretl.engine/src/org/jetel/graph/DirectEdge.java	2007-01-29 09:16:06 UTC (rev 2385)
@@ -224,7 +224,8 @@
             record.serialize(tmpDataRecord);
         } catch (BufferOverflowException ex) {
             throw new IOException(
-                    "Internal buffer is not big enough to accomodate data record ! (See MAX_RECORD_SIZE parameter)");
+                    "Internal buffer is not big enough to accomodate data record ! (See MAX_RECORD_SIZE parameter)"+
+                    "\n [actual record size: "+record.getSizeSerialized()+" bytes]");
         }
         tmpDataRecord.flip();
         int length = tmpDataRecord.remaining();
@@ -269,7 +270,8 @@
             writeBuffer.put(record);
         } catch (BufferOverflowException ex) {
             throw new IOException(
-                    "WriteBuffer is not big enough to accomodate data record !");
+                    "WriteBuffer is not big enough to accomodate data record ! (See MAX_RECORD_SIZE parameter)"+
+                    "\n [actual record size: "+record.rewind().remaining()+" bytes]");
         }
 
         byteCounter += dataLength;



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 10:26:06 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 10:26:06 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2386 -
	trunk/cloveretl.engine/src/org/jetel/data
Message-ID: <200701290926.l0T9Q6M7004186@sheep.berlios.de>

Author: dpavlis
Date: 2007-01-29 10:26:05 +0100 (Mon, 29 Jan 2007)
New Revision: 2386

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java
Log:
UPDATE:serialization/deserialization reflects NULL field indicators only for NULLable fields

Modified: trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-29 09:16:06 UTC (rev 2385)
+++ trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-29 09:26:05 UTC (rev 2386)
@@ -43,9 +43,14 @@
  */
 public class DataRecord implements Serializable, Comparable {
 
-    private static ThreadLocal<byte[]> NULLs_BYTE_BUFFER = new ThreadLocal<byte[]>();
+    private static final long serialVersionUID = 2497808992091497225L;
+
+
+    // switch- shall we handle differently NULLable records (record
+    // which has at least one field NULLable ?)
     private static final boolean HANDLE_NULLABLE = false;
     
+    
 	/**
      * Currently not used
 	 * @since
@@ -249,23 +254,33 @@
 	 */
 	public void deserialize(ByteBuffer buffer) {
         if (HANDLE_NULLABLE && metadata.isNullable()) {
-          BitArray bits=new BitArray(fields.length);
-          bits.deserialize(buffer);
-          for (int i=0;i<fields.length;i++){
-              if (bits.isSet(i)){
-                  fields[i].setNull(true);
-              }else{
-                  fields[i].deserialize(buffer);
-              }
-          }
-          
+            final int base = buffer.position();
+            BitArray nullSwitches = metadata.getFieldsNullSwitches();
+            final int numNullBytes = BitArray.bitsLength2Bytes(metadata
+                    .getNumNullableFields());
+            byte indicator = 0;
+            // skip to first field
+            buffer.position(buffer.position() + numNullBytes);
+            // are there any NULLs ? if not, use the simple version
+            int nullCounter = 0;
+            for (int i = 0; i < fields.length; i++) {
+                if (nullSwitches.isSet(i)) {
+                    if (BitArray.isSet(buffer, base, nullCounter)) {
+                        fields[i].setNull(true);
+                    } else {
+                        fields[i].deserialize(buffer);
+                    }
+                    nullCounter++;
+                } else {
+                    fields[i].deserialize(buffer);
+                }
+            }
         } else {
-
             for (int i = 0; i < fields.length; i++) {
                 fields[i].deserialize(buffer);
             }
         }
-	}
+    }
 
 
 	/**
@@ -421,21 +436,27 @@
 	 */
 	public void serialize(ByteBuffer buffer) {
         if (HANDLE_NULLABLE && metadata.isNullable()) {
-           BitArray bits=new BitArray(fields.length);
-           buffer.mark();
-           bits.serialize(buffer);
-           for(int i=0;i<fields.length;i++){
-               if (fields[i].isNull){
-                   bits.set(i);
-               }else{
-                   fields[i].serialize(buffer);
-               }
-           }
-           final int pos=buffer.position();
-           buffer.reset();
-           bits.serialize(buffer);
-           buffer.position(pos);
-           
+            final int base = buffer.position();
+            BitArray nullSwitches = metadata.getFieldsNullSwitches();
+            final int numNullBytes = BitArray.bitsLength2Bytes(metadata
+                    .getNumNullableFields());
+            // clear NULL indicators
+            for (int i = 0; i < numNullBytes; i++) {
+                buffer.put((byte) 0);
+            }
+            int nullCounter = 0;
+            for (int i = 0; i < fields.length; i++) {
+                if (nullSwitches.isSet(i)) {
+                    if (fields[i].isNull) {
+                        BitArray.set(buffer, base, nullCounter);
+                    } else {
+                        fields[i].serialize(buffer);
+                    }
+                    nullCounter++;
+                } else {
+                    fields[i].serialize(buffer);
+                }
+            }
         } else {
             for (int i = 0; i < fields.length; i++) {
                 fields[i].serialize(buffer);
@@ -603,7 +624,6 @@
         }
         return true;
     }
-    
 }
 /*
  *  end class DataRecord



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 15:21:41 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 15:21:41 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2387 -
	trunk/cloveretl.engine/src/org/jetel/interpreter
Message-ID: <200701291421.l0TELf4g031950@sheep.berlios.de>

Author: dpavlis
Date: 2007-01-29 15:21:39 +0100 (Mon, 29 Jan 2007)
New Revision: 2387

Modified:
   trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
Log:
MINOR:minor fix/report of potential probelm in mapping

Modified: trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-29 09:26:05 UTC (rev 2386)
+++ trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-29 14:21:39 UTC (rev 2387)
@@ -1566,6 +1566,7 @@
         DataField field=outputRecords[node.recordNo].getField(node.fieldNo);
         int arity=node.arity; // how many children we have defined
         Object value=null;
+        boolean success=false;
         try{
             // we try till success or no more options
             for (int i=0;i<arity;i++){
@@ -1578,19 +1579,12 @@
                     }else{
                         field.setValue(value);
                     }
-                }catch(BadDataFormatException ex){
-                    if (i == arity)
+                    success=true;
+                    break; // success during assignment, finish looping
+               }catch(Exception ex){
+                    if (i == arity-1)
                         throw ex;
-                    else
-                        continue;
-                    
-                }catch(Exception ex){
-                    if (i == arity)
-                        throw ex;
-                    else
-                        continue;
-                }
-                break; // success during assignment, finish looping
+               }
             }
             
         }catch(BadDataFormatException ex){
@@ -1610,7 +1604,10 @@
                     +") - assigning \"" + value + "\" ("+(value!=null ? value.getClass(): "unknown class" )+")");
             
         }
-        
+        if (!success){
+            logger.fatal("fatal error in mapping on line : "+node.getLineNumber()+" : "+
+                    node.getColumnNumber());
+        }
         return data;
     }
     



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 15:46:26 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 15:46:26 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2388 -
	trunk/cloveretl.engine/src/org/jetel/interpreter
Message-ID: <200701291446.l0TEkQjd001755@sheep.berlios.de>

Author: agad
Date: 2007-01-29 15:46:25 +0100 (Mon, 29 Jan 2007)
New Revision: 2388

Modified:
   trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
Log:
BUGFIX:#10113

Modified: trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-29 14:21:39 UTC (rev 2387)
+++ trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-29 14:46:25 UTC (rev 2388)
@@ -1564,9 +1564,8 @@
     
     public Object visit(CLVFMapping node, Object data) {
         DataField field=outputRecords[node.recordNo].getField(node.fieldNo);
-        int arity=node.arity; // how many children we have defined
+        int arity=node.jjtGetNumChildren(); // how many children we have defined
         Object value=null;
-        boolean success=false;
         try{
             // we try till success or no more options
             for (int i=0;i<arity;i++){
@@ -1579,7 +1578,6 @@
                     }else{
                         field.setValue(value);
                     }
-                    success=true;
                     break; // success during assignment, finish looping
                }catch(Exception ex){
                     if (i == arity-1)
@@ -1604,10 +1602,6 @@
                     +") - assigning \"" + value + "\" ("+(value!=null ? value.getClass(): "unknown class" )+")");
             
         }
-        if (!success){
-            logger.fatal("fatal error in mapping on line : "+node.getLineNumber()+" : "+
-                    node.getColumnNumber());
-        }
         return data;
     }
     



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 15:55:56 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 15:55:56 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2389 -
	trunk/cloveretl.engine/src/org/jetel/graph/runtime
Message-ID: <200701291455.l0TEtujJ002471@sheep.berlios.de>

Author: dpavlis
Date: 2007-01-29 15:55:55 +0100 (Mon, 29 Jan 2007)
New Revision: 2389

Modified:
   trunk/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java
   trunk/cloveretl.engine/src/org/jetel/graph/runtime/WatchDog.java
Log:
UPDATE:added implementation of stopGraphExecution()

Modified: trunk/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java	2007-01-29 14:46:25 UTC (rev 2388)
+++ trunk/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java	2007-01-29 14:55:55 UTC (rev 2389)
@@ -37,11 +37,12 @@
     private int runingPhase;
     private int runningNodes;
     private long runTimeMS;
+    private WatchDog watchDog;
     
     
     private Map<String,TrackingDetail> trackingMap;
     
-    public CloverJMX(){
+    public CloverJMX(WatchDog watchDog){
         StringBuilder str=new StringBuilder(30);
       //  str.append(org.jetel.util.JetelVersion.getMajorVersion()).append('.');
       //  str.append(org.jetel.util.JetelVersion.getMinorVersion()).append(" build# ");
@@ -49,6 +50,7 @@
       //  str.append(org.jetel.util.JetelVersion.getBuildDatetime());
         
         cloverVersion=str.toString();
+        this.watchDog=watchDog;
     }
     
    
@@ -110,7 +112,7 @@
     }
 
     public void stopGraphExecution() {
-        // TODO Auto-generated method stub
+        watchDog.stopRun();
 
     }
     

Modified: trunk/cloveretl.engine/src/org/jetel/graph/runtime/WatchDog.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/runtime/WatchDog.java	2007-01-29 14:46:25 UTC (rev 2388)
+++ trunk/cloveretl.engine/src/org/jetel/graph/runtime/WatchDog.java	2007-01-29 14:55:55 UTC (rev 2389)
@@ -81,6 +81,7 @@
     private Throwable causeException;
     private String causeNodeID;
     private CloverJMX mbean;
+    private volatile boolean runIt;
     
     private PrintTracking printTracking;
 
@@ -134,9 +135,10 @@
 	/**  Main processing method for the WatchDog object */
 	public void run() {
 		watchDogStatus = Result.RUNNING;
+        runIt=true;
 		logger.info("Thread started.");
 		logger.info("Running on " + javaRuntime.availableProcessors() + " CPU(s)"
-			+ " max available memory for JVM " + javaRuntime.freeMemory() / 1024 + " KB");
+			+ " max available memory for JVM " + javaRuntime.maxMemory() / 1024 + " KB");
 		// renice - lower the priority
 		setPriority(Thread.MIN_PRIORITY);
 		
@@ -151,11 +153,16 @@
 //        trackingThread.start();
         
 		for (currentPhaseNum = 0; currentPhaseNum < phases.length; currentPhaseNum++) {
-			if (!executePhase(phases[currentPhaseNum])) {
-				watchDogStatus = Result.ERROR;
+			switch( executePhase(phases[currentPhaseNum]) ){
+            case ABORTED:
+                watchDogStatus = Result.ABORTED;
+                logger.error("!!! Phase execution aborted !!!");
+                return;
+            case ERROR:
+                watchDogStatus = Result.ERROR;
 				logger.error("!!! Phase finished with error - stopping graph run !!!");
 				return;
-			}
+            }
 			// force running of garbage collector
 			logger.info("Forcing garbage collection ...");
 			javaRuntime.runFinalization();
@@ -174,7 +181,7 @@
      * @since 17.1.2007
      */
     private CloverJMX registerTrackingMBean() {
-       mbean = new CloverJMX();
+       mbean = new CloverJMX(this);
         // register MBean
         MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
 
@@ -221,7 +228,12 @@
             }
         }
         if (currentPhaseNum>=0){
-            if (!executePhase(phases[currentPhaseNum])) {
+            switch( executePhase(phases[currentPhaseNum]) ) {
+            case ABORTED:
+                watchDogStatus = Result.ABORTED;
+                logger.error("!!! Phase execution aborted !!!");
+                return;
+            case ERROR:
                 watchDogStatus = Result.ERROR;
                 logger.error("!!! Phase finished with error - stopping graph run !!!");
                 return;
@@ -280,7 +292,7 @@
         mbean.updated();
 	
         // entering the loop awaiting completion of work by all leaf nodes
-		while (true) {
+		while (runIt) {
             // wait on error message queue
             message=inMsgQueue.poll(Defaults.WatchDog.WATCHDOG_SLEEP_INTERVAL, TimeUnit.MILLISECONDS);
             if (message != null) {
@@ -397,6 +409,16 @@
                     mbean.updated();
                 }
             }
+        if (!runIt){
+            // we were forced to stop execution, stop all Nodes
+            logger.error("User has interrupted graph execution !!!");
+            abort();
+            causeNodeID=null;
+            causeException=null;
+            return Result.ABORTED;
+        }else{
+            return Result.FINISHED_OK;
+        }
 			
 	}
 
@@ -433,6 +455,7 @@
 	 * @since    July 29, 2002
 	 */
 	public void abort() {
+        watchDogStatus=Result.ABORTED;
 		Iterator iterator = currentPhase.getNodes().iterator();
 		Node node;
 
@@ -471,13 +494,13 @@
 	 * @param  phase  Description of the Parameter
 	 * @return        Description of the Return Value
 	 */
-	private boolean executePhase(Phase phase) {
+	private Result executePhase(Phase phase) {
 		currentPhase = phase;
 		//phase.checkConfig();
 		// init phase
 		if (!phase.init()) {
 			// something went wrong !
-			return false;
+			return Result.ERROR;
 		}
 		logger.info("Starting up all nodes in phase [" + phase.getPhaseNum() + "]");
 		startUpNodes(phase);
@@ -504,7 +527,7 @@
         //end of phase, destroy it
 		phase.free();
         
-		return (watchDogStatus==Result.FINISHED_OK) ? true : false;
+		return watchDogStatus;
 	}
 
 	/*
@@ -710,6 +733,16 @@
     public String getCauseNodeID() {
         return causeNodeID;
     }
+
+
+    /**
+     * Stop execution of graph
+     * 
+     * @since 29.1.2007
+     */
+    public void stopRun() {
+        this.runIt = false;
+    }
     
     
 }



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 15:56:29 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 15:56:29 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2390 - in
	trunk/cloveretl.engine/src/org/jetel: graph main
Message-ID: <200701291456.l0TEuTG1002522@sheep.berlios.de>

Author: dpavlis
Date: 2007-01-29 15:56:27 +0100 (Mon, 29 Jan 2007)
New Revision: 2390

Modified:
   trunk/cloveretl.engine/src/org/jetel/graph/TransformationGraph.java
   trunk/cloveretl.engine/src/org/jetel/main/runGraph.java
Log:
UPDATE:added reporting of graph Abort caused by user action

Modified: trunk/cloveretl.engine/src/org/jetel/graph/TransformationGraph.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/TransformationGraph.java	2007-01-29 14:55:55 UTC (rev 2389)
+++ trunk/cloveretl.engine/src/org/jetel/graph/TransformationGraph.java	2007-01-29 14:56:27 UTC (rev 2390)
@@ -336,31 +336,39 @@
 	 * @since     April 2, 2002
 	 */
 	public Result run() {
-		long timestamp = System.currentTimeMillis();
-		watchDog = new WatchDog(this, phasesArray, trackingInterval);
+        long timestamp = System.currentTimeMillis();
+        watchDog = new WatchDog(this, phasesArray, trackingInterval);
 
-		logger.info("Starting WatchDog thread ...");
-		watchDog.start();
-		try {
-			watchDog.join();
-		} catch (InterruptedException ex) {
-			logger.error(ex);
-			return Result.ABORTED;
-		}
-		logger.info("WatchDog thread finished - total execution time: " 
-				+ (System.currentTimeMillis() - timestamp) / 1000
-				+ " (sec)");
+        logger.info("Starting WatchDog thread ...");
+        watchDog.start();
+        try {
+            watchDog.join();
+        } catch (InterruptedException ex) {
+            logger.error(ex);
+            return Result.ABORTED;
+        }
+        logger.info("WatchDog thread finished - total execution time: "
+                + (System.currentTimeMillis() - timestamp) / 1000 + " (sec)");
 
-		freeResources();
+        freeResources();
 
-		if (watchDog.getStatus() == Result.FINISHED_OK) {
-			logger.info("Graph execution finished successfully");
-		} else {
-			logger.error("!!! Graph execution finished with errors !!!");
-		}
+        switch (watchDog.getStatus()) {
+        case FINISHED_OK:
+            logger.info("Graph execution finished successfully");
+            break;
+        case ABORTED:
+            logger.error("!!! Graph execution aborted !!!");
+            break;
+        case ERROR:
+            logger.error("!!! Graph execution finished with errors !!!");
+            break;
+        default:
+            logger.fatal("Unexpected result when executing graph !");
+        }
+        
         return watchDog.getStatus();
 
-	}
+    }
 
 
 

Modified: trunk/cloveretl.engine/src/org/jetel/main/runGraph.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/main/runGraph.java	2007-01-29 14:55:55 UTC (rev 2389)
+++ trunk/cloveretl.engine/src/org/jetel/main/runGraph.java	2007-01-29 14:56:27 UTC (rev 2390)
@@ -155,132 +155,150 @@
 	 * @param  args  Description of the Parameter
 	 */
 	public static void main(String args[]) {
-		boolean verbose = false;
+        boolean verbose = false;
         boolean loadFromSTDIN = false;
-		Properties properties = new Properties();
-		int trackingInterval=-1;
-		String pluginsRootDirectory = null;
+        Properties properties = new Properties();
+        int trackingInterval = -1;
+        String pluginsRootDirectory = null;
         String password = null;
         String logHost = null;
-		
-		System.out.println("***  CloverETL framework/transformation graph runner ver "+RUN_GRAPH_VERSION+", (c) 2002-06 D.Pavlis, released under GNU Lesser General Public License  ***");
-		System.out.println(" Running with framework version: "+JetelVersion.MAJOR_VERSION+"."+JetelVersion.MINOR_VERSION+" build#"+JetelVersion.BUILD_NUMBER+" compiled "+JetelVersion.LIBRARY_BUILD_DATETIME);
-		System.out.println();
-        
-		if (args.length < 1) {
-			printHelp();
-			System.exit(-1);
-		}
-        
-		// process command line arguments
-		for (int i = 0; i < args.length; i++) {
-			if (args[i].startsWith(VERBOSE_SWITCH)) {
-				verbose = true;
-			}else if (args[i].startsWith(PROPERTY_FILE_SWITCH)){
-				i++;
-				try {
-					InputStream inStream = new BufferedInputStream(new FileInputStream(args[i]));
-					properties.load(inStream);
-				} catch (IOException ex) {
-					logger.error(ex.getMessage(), ex);
-					System.exit(-1);
-				}
-			}else if (args[i].startsWith(PROPERTY_DEFINITION_SWITCH)){
-			   	//String[] nameValue=args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,"").split("=");
-				//properties.setProperty(nameValue[0],nameValue[1]);
-		    	String tmp =  args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,"");
-        	    properties.setProperty(tmp.substring(0,tmp.indexOf("=")),tmp.substring(tmp.indexOf("=") +1)); 
-			}else if (args[i].startsWith(TRACKING_INTERVAL_SWITCH)) {
-				i++;
-                try{
+
+        System.out
+                .println("***  CloverETL framework/transformation graph runner ver "
+                        + RUN_GRAPH_VERSION
+                        + ", (c) 2002-06 D.Pavlis, released under GNU Lesser General Public License  ***");
+        System.out.println(" Running with framework version: "
+                + JetelVersion.MAJOR_VERSION + "." + JetelVersion.MINOR_VERSION
+                + " build#" + JetelVersion.BUILD_NUMBER + " compiled "
+                + JetelVersion.LIBRARY_BUILD_DATETIME);
+        System.out.println();
+
+        if (args.length < 1) {
+            printHelp();
+            System.exit(-1);
+        }
+
+        // process command line arguments
+        for (int i = 0; i < args.length; i++) {
+            if (args[i].startsWith(VERBOSE_SWITCH)) {
+                verbose = true;
+            } else if (args[i].startsWith(PROPERTY_FILE_SWITCH)) {
+                i++;
+                try {
+                    InputStream inStream = new BufferedInputStream(
+                            new FileInputStream(args[i]));
+                    properties.load(inStream);
+                } catch (IOException ex) {
+                    logger.error(ex.getMessage(), ex);
+                    System.exit(-1);
+                }
+            } else if (args[i].startsWith(PROPERTY_DEFINITION_SWITCH)) {
+                // String[]
+                // nameValue=args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,"").split("=");
+                // properties.setProperty(nameValue[0],nameValue[1]);
+                String tmp = args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,
+                        "");
+                properties.setProperty(tmp.substring(0, tmp.indexOf("=")), tmp
+                        .substring(tmp.indexOf("=") + 1));
+            } else if (args[i].startsWith(TRACKING_INTERVAL_SWITCH)) {
+                i++;
+                try {
                     trackingInterval = Integer.parseInt(args[i]);
-                }catch(NumberFormatException ex){
-                    System.err.println("Invalid tracking parameter: \""+args[i]+"\"");
+                } catch (NumberFormatException ex) {
+                    System.err.println("Invalid tracking parameter: \""
+                            + args[i] + "\"");
                     System.exit(-1);
                 }
-			}else if (args[i].startsWith(INFO_SWITCH)){
-			    printInfo();
-			    System.exit(0);
-            }else if (args[i].startsWith(PLUGINS_SWITCH)){
+            } else if (args[i].startsWith(INFO_SWITCH)) {
+                printInfo();
+                System.exit(0);
+            } else if (args[i].startsWith(PLUGINS_SWITCH)) {
                 i++;
                 pluginsRootDirectory = args[i];
-            }else if (args[i].startsWith(PASSWORD_SWITCH)){
+            } else if (args[i].startsWith(PASSWORD_SWITCH)) {
                 i++;
-                password = args[i]; 
-            }else if (args[i].startsWith(LOAD_FROM_STDIN_SWITCH)){
-                loadFromSTDIN=true;
-            }else if (args[i].startsWith(LOG_HOST_SWITCH)){
+                password = args[i];
+            } else if (args[i].startsWith(LOAD_FROM_STDIN_SWITCH)) {
+                loadFromSTDIN = true;
+            } else if (args[i].startsWith(LOG_HOST_SWITCH)) {
                 i++;
-                logHost = args[i]; 
-            }else if (args[i].startsWith("-")) {
-				System.err.println("Unknown option: "+args[i]);
-				System.exit(-1);
+                logHost = args[i];
+            } else if (args[i].startsWith("-")) {
+                System.err.println("Unknown option: " + args[i]);
+                System.exit(-1);
             }
-		}
+        }
 
-        //setup log4j appenders
-        if(logHost != null) {
+        // setup log4j appenders
+        if (logHost != null) {
             String[] hostAndPort = logHost.split(":");
-            if(hostAndPort[0].length() == 0 || hostAndPort.length > 2) {
-                System.err.println("Invalid log destination, i.e. -loghost localhost:4445");
+            if (hostAndPort[0].length() == 0 || hostAndPort.length > 2) {
+                System.err
+                        .println("Invalid log destination, i.e. -loghost localhost:4445");
                 System.exit(-1);
             }
             int port = 4445;
             try {
-                if(hostAndPort.length == 2) {
+                if (hostAndPort.length == 2) {
                     port = Integer.parseInt(hostAndPort[1]);
                 }
-            } catch(NumberFormatException e) {
-                System.err.println("Invalid log destination, i.e. -loghost localhost:4445");
+            } catch (NumberFormatException e) {
+                System.err
+                        .println("Invalid log destination, i.e. -loghost localhost:4445");
                 System.exit(-1);
             }
-            Logger.getRootLogger().addAppender(new SocketAppender(hostAndPort[0], port));
+            Logger.getRootLogger().addAppender(
+                    new SocketAppender(hostAndPort[0], port));
         }
 
-        //engine initialization - should be called only once
+        // engine initialization - should be called only once
         runGraph.initEngine(pluginsRootDirectory, password);
-        
-		//prapere input stream with XML graph definition
+
+        // prapere input stream with XML graph definition
         InputStream in = null;
         if (loadFromSTDIN) {
             System.out.println("Graph definition loaded from STDIN");
             in = System.in;
         } else {
-            System.out.println("Graph definition file: " + args[args.length - 1]);
-            try{
+            System.out.println("Graph definition file: "
+                    + args[args.length - 1]);
+            try {
                 URL fileURL = FileUtils.getFileURL(null, args[args.length - 1]);
                 in = fileURL.openStream();
             } catch (IOException e) {
-                System.err.println("Error - graph definition file can't be read: " + e.getMessage());
+                System.err
+                        .println("Error - graph definition file can't be read: "
+                                + e.getMessage());
                 System.exit(-1);
             }
         }
-        
-        //loading graph from the input stream
+
+        // loading graph from the input stream
         TransformationGraph graph = null;
         try {
             graph = runGraph.loadGraph(in, properties);
 
-            //check graph elements configuration
+            // check graph elements configuration
             logger.info("Checking graph configuration...");
             ConfigurationStatus status = graph.checkConfig(null);
             status.log();
 
-            if(!graph.init()) {
-                throw new GraphConfigurationException("Graph initialization failed.");
+            if (!graph.init()) {
+                throw new GraphConfigurationException(
+                        "Graph initialization failed.");
             }
 
             if (verbose) {
-                //this can be called only after graph.init()
+                // this can be called only after graph.init()
                 graph.dumpGraphConfiguration();
             }
-        }catch(XMLConfigurationException ex){
+        } catch (XMLConfigurationException ex) {
             logger.error("Error in reading graph from XML !", ex);
             if (verbose) {
                 ex.printStackTrace(System.err);
             }
             System.exit(-1);
-        }catch(GraphConfigurationException ex){
+        } catch (GraphConfigurationException ex) {
             logger.error("Error - graph's configuration invalid !", ex);
             if (verbose) {
                 ex.printStackTrace(System.err);
@@ -293,35 +311,42 @@
             }
             System.exit(-1);
         }
-        
+
         // set tracking interval
-		if(trackingInterval!=-1){
-			graph.setTrackingInterval(trackingInterval*1000);
-		}
-		
-		//	start all Nodes (each node is one thread)
-		Result result=Result.N_A;
-		try {
+        if (trackingInterval != -1) {
+            graph.setTrackingInterval(trackingInterval * 1000);
+        }
+
+        // start all Nodes (each node is one thread)
+        Result result = Result.N_A;
+        try {
             result = graph.run();
-		} catch (RuntimeException ex) {
-			System.err.println("Fatal error during graph run !");
-			System.err.println(ex.getCause().getMessage());
-			if (verbose) {
-				ex.printStackTrace();
-			}
-			System.exit(-1);
-		}
-		if (result==Result.FINISHED_OK) {
-			// everything O.K.
-			System.out.println("Execution of graph successful !");
-			System.exit(0);
-		} else {
-			// something FAILED !!
-			System.err.println("Execution of graph failed !");
-			System.exit(result.code());
-		}
+        } catch (RuntimeException ex) {
+            System.err.println("Fatal error during graph run !");
+            System.err.println(ex.getCause().getMessage());
+            if (verbose) {
+                ex.printStackTrace();
+            }
+            System.exit(-1);
+        }
+        switch (result) {
 
-	}
+        case FINISHED_OK:
+            // everything O.K.
+            System.out.println("Execution of graph successful !");
+            System.exit(0);
+            break;
+        case ABORTED:
+            // execution was ABORTED !!
+            System.err.println("Execution of graph aborted !");
+            System.exit(result.code());
+            break;
+        default:
+            System.err.println("Execution of graph failed !");
+            System.exit(result.code());
+        }
+
+    }
     
     
 	private static void printHelp() {



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 18:06:19 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 18:06:19 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2391 -
	trunk/cloveretl.engine/src/org/jetel/main
Message-ID: <200701291706.l0TH6JqO013522@sheep.berlios.de>

Author: otasanek
Date: 2007-01-29 18:06:19 +0100 (Mon, 29 Jan 2007)
New Revision: 2391

Modified:
   trunk/cloveretl.engine/src/org/jetel/main/runGraph.java
Log:
FIX: TransformationGraph.checkConfig() is surrounded by try catch block.

Modified: trunk/cloveretl.engine/src/org/jetel/main/runGraph.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/main/runGraph.java	2007-01-29 14:56:27 UTC (rev 2390)
+++ trunk/cloveretl.engine/src/org/jetel/main/runGraph.java	2007-01-29 17:06:19 UTC (rev 2391)
@@ -280,8 +280,12 @@
 
             // check graph elements configuration
             logger.info("Checking graph configuration...");
-            ConfigurationStatus status = graph.checkConfig(null);
-            status.log();
+            try {
+                ConfigurationStatus status = graph.checkConfig(null);
+                status.log();
+            } catch(Exception e) {
+                logger.error("Checking graph failed! (" + e.getMessage() + ")");
+            }
 
             if (!graph.init()) {
                 throw new GraphConfigurationException(



From cloveretl-svn-commits at lists.berlios.de  Mon Jan 29 18:14:44 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Mon, 29 Jan 2007 18:14:44 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2392 -
	trunk/cloveretl.engine/src/org/jetel/data
Message-ID: <200701291714.l0THEirE014723@sheep.berlios.de>

Author: dpavlis
Date: 2007-01-29 18:14:43 +0100 (Mon, 29 Jan 2007)
New Revision: 2392

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java
Log:
UPDATE:updated getSizeSerialized() method

Modified: trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-29 17:06:19 UTC (rev 2391)
+++ trunk/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-29 17:14:43 UTC (rev 2392)
@@ -585,16 +585,13 @@
 	 */
 	public int getSizeSerialized() {
         int size=0;
-        int inNull=0;
-        if (metadata.isNullable()){
+        if (HANDLE_NULLABLE && metadata.isNullable()){
             for (int i = 0; i < fields.length;i++){
-                if (fields[i].isNull()){
-                    inNull++;
-                }else{
+                if (!fields[i].isNull()){
                     size+=fields[i].getSizeSerialized(); 
                 }
             }
-            size+=BitArray.bitsLength2Bytes(fields.length);
+            size+=BitArray.bitsLength2Bytes(metadata.getNumNullableFields());
         }else{
             for (int i = 0; i < fields.length; size+=fields[i++].getSizeSerialized());
         }



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 10:28:48 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 10:28:48 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2393 -
	trunk/cloveretl.sequence/src/org/jetel/sequence
Message-ID: <200701300928.l0U9SmN3007769@sheep.berlios.de>

Author: otasanek
Date: 2007-01-30 10:28:48 +0100 (Tue, 30 Jan 2007)
New Revision: 2393

Modified:
   trunk/cloveretl.sequence/src/org/jetel/sequence/SimpleSequence.java
Log:
UPDATE: removes local isInitialized variable.

Modified: trunk/cloveretl.sequence/src/org/jetel/sequence/SimpleSequence.java
===================================================================
--- trunk/cloveretl.sequence/src/org/jetel/sequence/SimpleSequence.java	2007-01-29 17:14:43 UTC (rev 2392)
+++ trunk/cloveretl.sequence/src/org/jetel/sequence/SimpleSequence.java	2007-01-30 09:28:48 UTC (rev 2393)
@@ -77,7 +77,6 @@
     int step;
     int start;
     int numCachedValues;
-    boolean isInitialized;
   
     int counter;
     FileChannel io;
@@ -109,7 +108,6 @@
         this.step=step;
         this.counter=0;
         this.numCachedValues=numCachedValues;
-        this.isInitialized = false;
     }
     
     public long currentValueLong(){
@@ -194,10 +192,9 @@
                 sequenceValue = buffer.getLong();
             }
         } catch(IOException ex) {
-            isInitialized = false;
+            free();
             throw new ComponentNotReadyException(ex);
         }
-        isInitialized = true;
     }
     
     private final void flushValue(long value) {
@@ -261,10 +258,10 @@
 		return filename;
 	}
 
-    public boolean isInitialized() {
-        return isInitialized;
+    public void setFilename(String filename) {
+        this.filename = filename;
     }
-	
+
 	static public SimpleSequence fromXML(TransformationGraph graph, Element nodeXML) throws XMLConfigurationException {
 		ComponentXMLAttributes xattribs = new ComponentXMLAttributes(nodeXML, graph);
 



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 10:30:18 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 10:30:18 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2394 -
	trunk/cloveretl.engine/src/org/jetel/graph
Message-ID: <200701300930.l0U9UIR9008002@sheep.berlios.de>

Author: otasanek
Date: 2007-01-30 10:30:18 +0100 (Tue, 30 Jan 2007)
New Revision: 2394

Modified:
   trunk/cloveretl.engine/src/org/jetel/graph/Node.java
Log:
UPDATE: nodes send message when runResult is ERROR.

Modified: trunk/cloveretl.engine/src/org/jetel/graph/Node.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/Node.java	2007-01-30 09:28:48 UTC (rev 2393)
+++ trunk/cloveretl.engine/src/org/jetel/graph/Node.java	2007-01-30 09:30:18 UTC (rev 2394)
@@ -74,6 +74,7 @@
 
 	protected Result runResult;
     protected Throwable resultException;
+    protected String resultMessage;
 	
     protected Phase phase;
 
@@ -360,7 +361,12 @@
 	public void run() {
         runResult=Result.RUNNING; // set running result, so we know run() method was started
         try {
-            runResult = execute();
+            if((runResult = execute()) == Result.ERROR) {
+                Message msg = Message.createErrorMessage(this,
+                        new ErrorMsgBody(runResult.code(), 
+                                resultMessage != null ? resultMessage : runResult.message(), null));
+                getCloverRuntime().sendMessage(msg);
+            }
         } catch (IOException ex) {  // may be handled differently later
             runResult=Result.ERROR;
             resultException = ex;



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 11:38:32 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 11:38:32 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2395 -
	trunk/cloveretl.engine/src/org/jetel/interpreter
Message-ID: <200701301038.l0UAcWRe012121@sheep.berlios.de>

Author: dpavlis
Date: 2007-01-30 11:38:31 +0100 (Tue, 30 Jan 2007)
New Revision: 2395

Modified:
   trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
   trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangParser.jjt
Log:
UPDATE:added option to initialize variable to value at definition

Modified: trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-30 09:30:18 UTC (rev 2394)
+++ trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-30 10:38:31 UTC (rev 2395)
@@ -1503,6 +1503,43 @@
         }
         stack.storeVar(node.localVar, node.varSlot, value);
         
+        if (node.jjtGetNumChildren()>0){
+            node.jjtGetChild(0).jjtAccept(this, data);
+            Object initValue=stack.pop();
+            
+            try {
+                if (value instanceof Numeric) {
+                        ((Numeric) value).setValue((Numeric) initValue);
+                } else if (value instanceof StringBuilder) {
+                    StringBuilder var = (StringBuilder) value;
+                    var.setLength(0);
+                    StringUtils.strBuffAppend(var,(CharSequence) initValue);
+                } else if (value instanceof Boolean) {
+                    stack.storeVar(node.localVar,node.varSlot, (Boolean)initValue); // boolean is not updatable - we replace the reference
+                    // stack.put(varName,((Boolean)value).booleanValue() ?
+                    // Stack.TRUE_VAL : Stack.FALSE_VAL);
+                } else if (value instanceof Date) {
+                    ((Date) value).setTime(((Date) initValue).getTime());
+                } else {
+                    throw new TransformLangExecutorRuntimeException(node,
+                            "unknown variable \"" + node.name + "\"");
+                }
+            } catch (ClassCastException ex) {
+                throw new TransformLangExecutorRuntimeException(node,
+                        "invalid assignment of \"" + initValue + "\" to variable \""
+                                + node.name + "\" - incompatible data types");
+            } catch (NumberFormatException ex){
+                throw new TransformLangExecutorRuntimeException(node,
+                        "invalid assignment of number \"" + initValue + "\" to variable \"" + node.name + "\" : "+ex.getMessage());    
+            } catch (TransformLangExecutorRuntimeException ex){
+                throw ex;
+            } catch (Exception ex){
+                throw new TransformLangExecutorRuntimeException(node,
+                        "invalid assignment of \"" + value + "\" to variable \"" + node.name + "\" : "+ex.getMessage());  
+            }
+            
+        }
+        
         return data;
     }
 

Modified: trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangParser.jjt
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangParser.jjt	2007-01-30 09:30:18 UTC (rev 2394)
+++ trunk/cloveretl.engine/src/org/jetel/interpreter/TransformLangParser.jjt	2007-01-30 10:38:31 UTC (rev 2395)
@@ -405,6 +405,9 @@
     t = <IDENTIFIER>{
      if (!parserHelper.addVariable(t.image)){
        throw new ParseException(t, "variable ["+t.image+"] already declared");
       }
      else {
        // is it local variable declaration ?
 
		if (parserHelper.inFunctionDeclaration){
          jjtThis.setVarSlot(parserHelper.getLocalVariableSlot(t.image));
          jjtThis.setLocalVariale(true);
        }
        else {
          jjtThis.setVarSlot(parserHelper.getGlobalVariableSlot(t.image));
          jjtThis.setLocalVariale(false);
        }
        jjtThis.setName(t.image);
      }
    }
+    
+    ["=" ConditionalOrExpression()]
+    
  }catch (ParseException e){
    parseExceptions.add(e);
//following code causes parser to cough     
 //do {
//      t = getNextToken();
//    }
//    while (t.kind != SEMICOLON);
  }
}
 
@@ -436,7 +439,7 @@
   	)
   	<MAPPING> 
   	
-  	ConditionalOrExpression() (":" ConditionalOrExpression())* {jjtThis.setArity(jjtree.nodeArity());}
+  	ConditionalOrExpression() (":" ConditionalOrExpression())*
 }
 
 /* Other nonterminals and their productions */



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 11:42:02 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 11:42:02 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2396 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701301042.l0UAg2th012630@sheep.berlios.de>

Author: agad
Date: 2007-01-30 11:42:01 +0100 (Tue, 30 Jan 2007)
New Revision: 2396

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java
Log:
UPDATE:trim attribute introduced

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java	2007-01-30 10:38:31 UTC (rev 2395)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java	2007-01-30 10:42:01 UTC (rev 2396)
@@ -38,6 +38,7 @@
 import org.jetel.exception.PolicyType;
 import org.jetel.metadata.DataFieldMetadata;
 import org.jetel.metadata.DataRecordMetadata;
+import org.jetel.util.StringUtils;
 
 /**
  * Parsing plain text data.
@@ -54,6 +55,12 @@
  * @revision $Revision: 1.9 $
  */
 public class DataParser implements Parser {
+	
+	public enum BoolExt{
+		TRUE,
+		FALSE,
+		NOT_SET;
+	}
 
 	private IParserExceptionHandler exceptionHandler;
 
@@ -87,6 +94,8 @@
 	
 	private boolean treatMultipleDelimitersAsOne = false;
 	
+	private BoolExt trim = BoolExt.NOT_SET; 
+	
 	public DataParser() {
 		decoder = Charset.forName(Defaults.DataParser.DEFAULT_CHARSET_DECODER).newDecoder();
 		reader = null;
@@ -300,9 +309,12 @@
 								return parsingErrorFound("Unexpected record delimiter", record, fieldCounter);
 							}
 						}
-						//fieldDelimiter update
-						fieldBuffer.append((char) character);
-
+						if (trim == BoolExt.FALSE
+								|| (trim == BoolExt.NOT_SET && !metadata
+										.getField(fieldCounter).isTrim())
+								|| !Character.isWhitespace(character)) {
+							fieldBuffer.append((char) character);
+						}						
 						//test field delimiter
 						if (!inQuote) {
 							if(delimiterSearcher.isPattern(fieldCounter)) {
@@ -328,22 +340,23 @@
 
 						//skip leading blanks
 						if(skipBlanks) 
-							if(character == ' ') continue; 
+							if(Character.isWhitespace(character)) continue; 
 							else skipBlanks = false;
 
-						//keep track of trailing blanks
-						if(character != ' ') {
-							mark = i;
-						} 
-
-						fieldBuffer.append((char) character);
+						if (trim == BoolExt.FALSE
+								|| (trim == BoolExt.NOT_SET && !metadata
+										.getField(fieldCounter).isTrim())
+								|| !Character.isWhitespace(character)) {
+							fieldBuffer.append((char) character);
+						}						
 					}
-					if(fieldBuffer.length() > 0) fieldBuffer.setLength(fieldBuffer.length() - (fieldLengths[fieldCounter] - mark - 1));
+					if(fieldBuffer.length() > 0) {
+						fieldBuffer.setLength(fieldBuffer.length() - (fieldLengths[fieldCounter] - mark - 1));
+					}
 				} catch (Exception ex) {
 					throw new RuntimeException(getErrorMessage(ex.getMessage(),	null, fieldCounter));
 				}
 			}
-
 			// did we have EOF situation ?
 			if (character == -1) {
 				try {
@@ -473,7 +486,8 @@
 			record.getField(fieldNum).fromString(data);
 		} catch(BadDataFormatException bdfe) {
             if(exceptionHandler != null) {
-                exceptionHandler.populateHandler(bdfe.getMessage(), record, recordCounter, fieldNum, data, bdfe);
+                exceptionHandler.populateHandler(bdfe.getMessage(), record,
+						recordCounter, fieldNum, data, bdfe);
             } else {
                 bdfe.setRecordNumber(recordCounter);
                 bdfe.setFieldNumber(fieldNum);
@@ -696,6 +710,26 @@
         }
         return null;
     }
+
+	public String getTrim() {
+		return trim.toString();
+	}
+
+	public void setTrim(String trim) {
+		switch (trim.charAt(0)) {
+		case 't':
+		case 'T':
+			this.trim = BoolExt.TRUE;
+			break;
+		case 'f':
+		case 'F':
+			this.trim = BoolExt.FALSE;
+			break;
+		default:
+			this.trim = BoolExt.NOT_SET;
+			break;
+		}
+	}
 }
 /*
 Default hodnoty jsou nyni definovany na urovni metadat a prirazovany do polozek pres



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 11:43:13 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 11:43:13 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2397 -
	trunk/cloveretl.engine/src/org/jetel/data
Message-ID: <200701301043.l0UAhDLL012688@sheep.berlios.de>

Author: agad
Date: 2007-01-30 11:43:12 +0100 (Tue, 30 Jan 2007)
New Revision: 2397

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/StringDataField.java
Log:
FIX:StringDataField - in method setValue(DataField) argument can be null

Modified: trunk/cloveretl.engine/src/org/jetel/data/StringDataField.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/StringDataField.java	2007-01-30 10:42:01 UTC (rev 2396)
+++ trunk/cloveretl.engine/src/org/jetel/data/StringDataField.java	2007-01-30 10:43:12 UTC (rev 2397)
@@ -163,7 +163,11 @@
 
 	@Override
 	public void setValue(DataField _value) {
-    	setValue(_value.toString());
+		if (_value != null) {
+			setValue(_value.toString());
+		}else{
+			setNull(true);
+		}
 	}
 	
 	/**



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 11:43:38 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 11:43:38 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2398 -
	trunk/cloveretl.engine/src/org/jetel/exception
Message-ID: <200701301043.l0UAhcKf012757@sheep.berlios.de>

Author: agad
Date: 2007-01-30 11:43:37 +0100 (Tue, 30 Jan 2007)
New Revision: 2398

Modified:
   trunk/cloveretl.engine/src/org/jetel/exception/BadDataFormatException.java
Log:
UPDATE:better error message

Modified: trunk/cloveretl.engine/src/org/jetel/exception/BadDataFormatException.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/exception/BadDataFormatException.java	2007-01-30 10:43:12 UTC (rev 2397)
+++ trunk/cloveretl.engine/src/org/jetel/exception/BadDataFormatException.java	2007-01-30 10:43:37 UTC (rev 2398)
@@ -20,6 +20,8 @@
 
 package org.jetel.exception;
 
+import org.jetel.util.StringUtils;
+
 /**
  * @author Martin Zatopek, Javlin Consulting (www.javlinconsulting.cz)
  *
@@ -68,7 +70,7 @@
         ret.append(super.getMessage());
         if(offendingValue != null && offendingValue.length() > 0) {
             ret.append(" : ");
-            ret.append(offendingValue);
+            ret.append(StringUtils.quote(StringUtils.specCharToString(offendingValue)));
         }
         if(recordNumber >= 0) {
             ret.append(" in record # ");



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 11:43:59 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 11:43:59 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2399 -
	trunk/cloveretl.engine/src/org/jetel/metadata
Message-ID: <200701301043.l0UAhxNR012869@sheep.berlios.de>

Author: agad
Date: 2007-01-30 11:43:59 +0100 (Tue, 30 Jan 2007)
New Revision: 2399

Modified:
   trunk/cloveretl.engine/src/org/jetel/metadata/DataFieldMetadata.java
Log:
UPDATE:trim attribute introduced

Modified: trunk/cloveretl.engine/src/org/jetel/metadata/DataFieldMetadata.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/metadata/DataFieldMetadata.java	2007-01-30 10:43:37 UTC (rev 2398)
+++ trunk/cloveretl.engine/src/org/jetel/metadata/DataFieldMetadata.java	2007-01-30 10:43:59 UTC (rev 2399)
@@ -72,6 +72,11 @@
 	private short shift = 0;
 
 	private char fieldType = ' ';
+	
+	/**
+	 * Indicates if when reading from file try to trim string value to obtain value
+	 */
+	private boolean trim = false;
 
 	/**
 	 *  Fields can assume null value by default.
@@ -161,9 +166,11 @@
 		this.name = _name;
 		this.delimiter = _delimiter;
 		this.fieldType = _type;
-		this.shift = shift;
 		this.fieldProperties = null;
 		this.localeStr=null;
+		if (isNumeric() || fieldType == DATE_FIELD || fieldType == DATETIME_FIELD){
+			trim = true;
+		}
 	}
 
 
@@ -181,7 +188,6 @@
 		}
 		this.name = _name;
 		this.delimiter = _delimiter;
-		this.shift = shift;
 		this.fieldType = STRING_FIELD;
 		this.fieldProperties = null;
 		this.localeStr=null;
@@ -202,7 +208,6 @@
 		}
 		this.name = _name;
 		this.size = size;
-		this.shift = shift;
 		this.fieldType = STRING_FIELD;
 		this.fieldProperties = null;
 		this.localeStr=null;
@@ -223,10 +228,12 @@
 		}
 		this.name = _name;
 		this.size = size;
-		this.shift = shift;
 		this.fieldType = _type;
 		this.fieldProperties = null;
 		this.localeStr=null;
+		if (isNumeric() || fieldType == DATE_FIELD || fieldType == DATETIME_FIELD){
+			trim = true;
+		}
 	}
 
 	private DataFieldMetadata() {
@@ -810,6 +817,16 @@
 		return false;
 	}
 
+
+	public boolean isTrim() {
+		return trim;
+	}
+
+
+	public void setTrim(boolean trim) {
+		this.trim = trim;
+	}
+
 }
 /*
  *  end class DataFieldMetadata



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 11:44:32 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 11:44:32 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2400 -
	trunk/cloveretl.engine/src/org/jetel/util
Message-ID: <200701301044.l0UAiWeA012931@sheep.berlios.de>

Author: agad
Date: 2007-01-30 11:44:32 +0100 (Tue, 30 Jan 2007)
New Revision: 2400

Modified:
   trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java
Log:
added method quote(CharSequence)

Modified: trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java	2007-01-30 10:43:59 UTC (rev 2399)
+++ trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java	2007-01-30 10:44:32 UTC (rev 2400)
@@ -272,6 +272,10 @@
 		return str;
 	}
 	
+	public static String quote(CharSequence str){
+		return "\"".concat(str.toString()).concat("\"");
+	}
+	
 	/**
 	 * Modifies buffer scope so that the leading whitespace is ignored.
 	 * @param buf



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 11:49:05 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 11:49:05 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2401 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701301049.l0UAn5YZ014137@sheep.berlios.de>

Author: agad
Date: 2007-01-30 11:49:05 +0100 (Tue, 30 Jan 2007)
New Revision: 2401

Modified:
   trunk/cloveretl.component/src/org/jetel/component/DataReader.java
Log:
UPDATE:trim attribute introduced

Modified: trunk/cloveretl.component/src/org/jetel/component/DataReader.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/DataReader.java	2007-01-30 10:44:32 UTC (rev 2400)
+++ trunk/cloveretl.component/src/org/jetel/component/DataReader.java	2007-01-30 10:49:05 UTC (rev 2401)
@@ -103,6 +103,7 @@
 
 	/** XML attribute names */
 	private static final String XML_SKIPLEADINGBLANKS_ATTRIBUTE = "skipLeadingBlanks";
+	private static final String XML_TRIM_ATTRIBUTE = "trim";
 	private static final String XML_SKIPFIRSTLINE_ATTRIBUTE = "skipFirstLine";
 	private static final String XML_SKIPROWS_ATTRIBUTE = "skipRows";
 	private static final String XML_NUMRECORDS_ATTRIBUTE = "numRecords";
@@ -268,6 +269,7 @@
 			xmlElement.setAttribute(XML_CHARSET_ATTRIBUTE, charSet);
 		}
 		xmlElement.setAttribute(XML_DATAPOLICY_ATTRIBUTE, policyType.toString());
+		xmlElement.setAttribute(XML_TRIM_ATTRIBUTE, parser.getTrim());
 		
 	}
 
@@ -297,6 +299,9 @@
 			if (xattribs.exists(XML_SKIPLEADINGBLANKS_ATTRIBUTE)){
 				aDataReader.parser.setSkipLeadingBlanks(xattribs.getBoolean(XML_SKIPLEADINGBLANKS_ATTRIBUTE));
 			}
+			if (xattribs.exists(XML_TRIM_ATTRIBUTE)){
+				aDataReader.parser.setTrim(xattribs.getString(XML_TRIM_ATTRIBUTE));
+			}
 			if (xattribs.exists(XML_SKIPFIRSTLINE_ATTRIBUTE)){
 				aDataReader.setSkipFirstLine(xattribs.getBoolean(XML_SKIPFIRSTLINE_ATTRIBUTE));
 			}



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 14:38:07 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 14:38:07 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2402 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701301338.l0UDc7wL001267@sheep.berlios.de>

Author: agad
Date: 2007-01-30 14:38:06 +0100 (Tue, 30 Jan 2007)
New Revision: 2402

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
Log:
UPDATE:trim attribute introduced

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-30 10:49:05 UTC (rev 2401)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-30 13:38:06 UTC (rev 2402)
@@ -35,6 +35,7 @@
 import org.apache.commons.logging.LogFactory;
 import org.jetel.data.DataRecord;
 import org.jetel.data.Defaults;
+import org.jetel.data.parser.DataParser.BoolExt;
 import org.jetel.exception.BadDataFormatException;
 import org.jetel.exception.ComponentNotReadyException;
 import org.jetel.exception.IParserExceptionHandler;
@@ -77,6 +78,7 @@
 	private char[][] delimiters;
 	private char[] fieldTypes;
 	private boolean isEof;
+	private BoolExt trim = BoolExt.NOT_SET;
 
 	// Attributes
 	// maximum length of delimiter
@@ -431,6 +433,11 @@
 			// are we skipping this row/field ?
 			if (record != null){
 			    fieldStringBuffer.flip();
+			    if (trim == BoolExt.TRUE || 
+			    		(trim == BoolExt.NOT_SET && metadata.getField(
+								fieldCounter).isTrim())) {
+			    	StringUtils.trim(fieldStringBuffer);
+			    }
 			    populateField(record, fieldCounter, fieldStringBuffer);
 			}
 			fieldCounter++;
@@ -554,7 +561,27 @@
 		}
 		return skipped;
 	}
-		
+	
+	public String getTrim() {
+		return trim.toString();
+	}
+
+	public void setTrim(String trim) {
+		switch (trim.charAt(0)) {
+		case 't':
+		case 'T':
+			this.trim = BoolExt.TRUE;
+			break;
+		case 'f':
+		case 'F':
+			this.trim = BoolExt.FALSE;
+			break;
+		default:
+			this.trim = BoolExt.NOT_SET;
+			break;
+		}
+	}
+	
 }	
 /*
  *  end class DelimitedDataParser



From cloveretl-svn-commits at lists.berlios.de  Tue Jan 30 14:42:14 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Tue, 30 Jan 2007 14:42:14 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2403 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701301342.l0UDgE8T002061@sheep.berlios.de>

Author: agad
Date: 2007-01-30 14:42:10 +0100 (Tue, 30 Jan 2007)
New Revision: 2403

Modified:
   trunk/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java
Log:
UPDATE:trim attribute introduced

Modified: trunk/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java	2007-01-30 13:38:06 UTC (rev 2402)
+++ trunk/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java	2007-01-30 13:42:10 UTC (rev 2403)
@@ -95,6 +95,7 @@
     private static final String XML_SKIP_ROWS_ATTRIBUTE = "skipRows";
     private static final String XML_SKIPFIRSTLINE_ATTRIBUTE = "skipFirstLine";
     private static final String XML_NUMRECORDS_ATTRIBUTE = "numRecords";
+	private static final String XML_TRIM_ATTRIBUTE = "trim";
 	
 	private final static int OUTPUT_PORT = 0;
 	private String fileURL;
@@ -198,6 +199,7 @@
 			xmlElement.setAttribute(XML_CHARSET_ATTRIBUTE, charSet);
 		}
 		xmlElement.setAttribute(XML_DATAPOLICY_ATTRIBUTE, policyType.toString());
+		xmlElement.setAttribute(XML_TRIM_ATTRIBUTE, parser.getTrim());
 		
 	}
 
@@ -232,6 +234,9 @@
             if (xattribs.exists(XML_NUMRECORDS_ATTRIBUTE)){
                 aDelimitedDataReaderNIO.setNumRecords(xattribs.getInteger(XML_NUMRECORDS_ATTRIBUTE));
             }
+			if (xattribs.exists(XML_TRIM_ATTRIBUTE)){
+				aDelimitedDataReaderNIO.parser.setTrim(xattribs.getString(XML_TRIM_ATTRIBUTE));
+			}
 		} catch (Exception ex) {
 	           throw new XMLConfigurationException(COMPONENT_TYPE + ":" + xattribs.getString(XML_ID_ATTRIBUTE," unknown ID ") + ":" + ex.getMessage(),ex);
 		}



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 10:05:45 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 10:05:45 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2404 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701310905.l0V95jbP012186@sheep.berlios.de>

Author: otasanek
Date: 2007-01-31 10:05:43 +0100 (Wed, 31 Jan 2007)
New Revision: 2404

Modified:
   trunk/cloveretl.component/src/org/jetel/component/JmsReader.java
   trunk/cloveretl.component/src/org/jetel/component/JmsWriter.java
Log:
UPDATE: removes implementation in checkConfig method of JmsReader and JmsWriter components.

Modified: trunk/cloveretl.component/src/org/jetel/component/JmsReader.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/JmsReader.java	2007-01-30 13:42:10 UTC (rev 2403)
+++ trunk/cloveretl.component/src/org/jetel/component/JmsReader.java	2007-01-31 09:05:43 UTC (rev 2404)
@@ -354,34 +354,34 @@
         checkInputPorts(status, 0, 0);
         checkOutputPorts(status, 1, Integer.MAX_VALUE);
 
-        try {
+//        try {
         	
-    		if (psorClass == null && psorCode == null) {
-    			throw new ComponentNotReadyException("Message processor not specified");
-    		}
-    		IConnection c = getGraph().getConnection(conId);
-    		if (c == null || !(c instanceof JmsConnection)) {
-    			throw new ComponentNotReadyException("Specified connection '" + conId + "' doesn't seem to be a JMS connection");
-    		}
-
-    		connection = (JmsConnection)c;
-    		try {
-    			connection.init();
-    			consumer = connection.createConsumer(selector);
-    		} catch (Exception e) {
-    			throw new ComponentNotReadyException("Unable to initialize JMS consumer: " + e.getMessage());
-    		}
+//    		if (psorClass == null && psorCode == null) {
+//    			throw new ComponentNotReadyException("Message processor not specified");
+//    		}
+//    		IConnection c = getGraph().getConnection(conId);
+//    		if (c == null || !(c instanceof JmsConnection)) {
+//    			throw new ComponentNotReadyException("Specified connection '" + conId + "' doesn't seem to be a JMS connection");
+//    		}
+//
+//    		connection = (JmsConnection)c;
+//    		try {
+//    			connection.init();
+//    			consumer = connection.createConsumer(selector);
+//    		} catch (Exception e) {
+//    			throw new ComponentNotReadyException("Unable to initialize JMS consumer: " + e.getMessage());
+//    		}
         	
         	
 //            init();
 //            free();
-        } catch (ComponentNotReadyException e) {
-            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
-            if(!StringUtils.isEmpty(e.getAttributeName())) {
-                problem.setAttributeName(e.getAttributeName());
-            }
-            status.add(problem);
-        }
+//        } catch (ComponentNotReadyException e) {
+//            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
+//            if(!StringUtils.isEmpty(e.getAttributeName())) {
+//                problem.setAttributeName(e.getAttributeName());
+//            }
+//            status.add(problem);
+//        }
         
         return status;
 	}

Modified: trunk/cloveretl.component/src/org/jetel/component/JmsWriter.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/JmsWriter.java	2007-01-30 13:42:10 UTC (rev 2403)
+++ trunk/cloveretl.component/src/org/jetel/component/JmsWriter.java	2007-01-31 09:05:43 UTC (rev 2404)
@@ -312,35 +312,35 @@
 		checkInputPorts(status, 1, 1);
         checkOutputPorts(status, 0, 0);
 
-        try {
+//        try {
         	
-    		if (psor == null && psorClass == null && psorCode == null) {
-    			throw new ComponentNotReadyException("Message processor not specified");
-    		}
-    		IConnection c = getGraph().getConnection(conId);
-    		if (c == null || !(c instanceof JmsConnection)) {
-    			throw new ComponentNotReadyException("Specified connection '" + conId + "' doesn't seem to be a JMS connection");
-    		}
-
-    		connection = (JmsConnection)c;
-    		inPort = getInputPort(0);
-     		try {
-    			connection.init();
-    			producer = connection.createProducer();
-    		} catch (Exception e) {
-    			throw new ComponentNotReadyException("Unable to initialize JMS consumer: " + e.getMessage());
-    		}
+//    		if (psor == null && psorClass == null && psorCode == null) {
+//    			throw new ComponentNotReadyException("Message processor not specified");
+//    		}
+//    		IConnection c = getGraph().getConnection(conId);
+//    		if (c == null || !(c instanceof JmsConnection)) {
+//    			throw new ComponentNotReadyException("Specified connection '" + conId + "' doesn't seem to be a JMS connection");
+//    		}
+//
+//    		connection = (JmsConnection)c;
+//    		inPort = getInputPort(0);
+//     		try {
+//    			connection.init();
+//    			producer = connection.createProducer();
+//    		} catch (Exception e) {
+//    			throw new ComponentNotReadyException("Unable to initialize JMS consumer: " + e.getMessage());
+//    		}
         	
         	
 //            init();
 //            free();
-        } catch (ComponentNotReadyException e) {
-            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
-            if(!StringUtils.isEmpty(e.getAttributeName())) {
-                problem.setAttributeName(e.getAttributeName());
-            }
-            status.add(problem);
-        }
+//        } catch (ComponentNotReadyException e) {
+//            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
+//            if(!StringUtils.isEmpty(e.getAttributeName())) {
+//                problem.setAttributeName(e.getAttributeName());
+//            }
+//            status.add(problem);
+//        }
         
         return status;
 	}



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 10:49:26 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 10:49:26 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2405 - in trunk:
	cloveretl.component/src/org/jetel/component
	cloveretl.engine/src/org/jetel/graph
Message-ID: <200701310949.l0V9nQLP015253@sheep.berlios.de>

Author: otasanek
Date: 2007-01-31 10:49:24 +0100 (Wed, 31 Jan 2007)
New Revision: 2405

Modified:
   trunk/cloveretl.component/src/org/jetel/component/SystemExecute.java
   trunk/cloveretl.engine/src/org/jetel/graph/DirectEdge.java
   trunk/cloveretl.engine/src/org/jetel/graph/Edge.java
   trunk/cloveretl.engine/src/org/jetel/graph/EdgeBase.java
   trunk/cloveretl.engine/src/org/jetel/graph/Node.java
   trunk/cloveretl.engine/src/org/jetel/graph/OutputPort.java
Log:
UPDATE: Port.close() method throws InterruptedException.

Modified: trunk/cloveretl.component/src/org/jetel/component/SystemExecute.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/SystemExecute.java	2007-01-31 09:05:43 UTC (rev 2404)
+++ trunk/cloveretl.component/src/org/jetel/component/SystemExecute.java	2007-01-31 09:49:24 UTC (rev 2405)
@@ -715,7 +715,11 @@
 				waitKill(parentThread,KILL_PROCESS_WAIT_TIME);
 			}finally{
 //				parser.close();
-				outPort.close();
+				try {
+                    outPort.close();
+                } catch (InterruptedException e) {
+                    resultCode = Result.ABORTED;
+                }
 			}
 			if (resultCode == Result.RUNNING)
 				if (runIt) {

Modified: trunk/cloveretl.engine/src/org/jetel/graph/DirectEdge.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/DirectEdge.java	2007-01-31 09:05:43 UTC (rev 2404)
+++ trunk/cloveretl.engine/src/org/jetel/graph/DirectEdge.java	2007-01-31 09:49:24 UTC (rev 2405)
@@ -321,20 +321,17 @@
 
 	/**
 	 *  Description of the Method
+	 * @throws InterruptedException 
 	 *
 	 * @since    April 2, 2002
 	 */
-	public synchronized void close() {
-	    try{
-	        if (writeBuffer.remaining()<SIZEOF_INT){
-	            flushWriteBuffer();
-	        }
-            writeBuffer.putInt(EOF); // send EOF
+	public synchronized void close() throws InterruptedException {
+        if (writeBuffer.remaining()<SIZEOF_INT){
             flushWriteBuffer();
-            
-	    }catch(InterruptedException ex){
-	        throw new RuntimeException("Interrupted "+ex.getClass().getName()+":"+ex.getMessage());
-	    }
+        }
+        writeBuffer.putInt(EOF); // send EOF
+        
+        flushWriteBuffer();
 	}
 
 	public boolean hasData(){

Modified: trunk/cloveretl.engine/src/org/jetel/graph/Edge.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/Edge.java	2007-01-31 09:05:43 UTC (rev 2404)
+++ trunk/cloveretl.engine/src/org/jetel/graph/Edge.java	2007-01-31 09:49:24 UTC (rev 2405)
@@ -357,7 +357,7 @@
 	 *
 	 * @since    April 2, 2002
 	 */
-	public void close() {
+	public void close() throws InterruptedException {
 		edge.close();
         if(edgeDebuger != null) edgeDebuger.close();
 	}

Modified: trunk/cloveretl.engine/src/org/jetel/graph/EdgeBase.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/EdgeBase.java	2007-01-31 09:05:43 UTC (rev 2404)
+++ trunk/cloveretl.engine/src/org/jetel/graph/EdgeBase.java	2007-01-31 09:49:24 UTC (rev 2405)
@@ -157,7 +157,7 @@
 	 *
 	 *@since    April 2, 2002
 	 */
-	public abstract void close();
+	public abstract void close() throws InterruptedException;
 	
 	
 	public abstract boolean hasData();

Modified: trunk/cloveretl.engine/src/org/jetel/graph/Node.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/Node.java	2007-01-31 09:05:43 UTC (rev 2404)
+++ trunk/cloveretl.engine/src/org/jetel/graph/Node.java	2007-01-31 09:49:24 UTC (rev 2405)
@@ -140,7 +140,7 @@
 	 *@param  portNum  The new EOF value
 	 *@since           April 18, 2002
 	 */
-	public void setEOF(int portNum) {
+	public void setEOF(int portNum) throws InterruptedException {
 		try {
 			((OutputPort) outPorts.get(new Integer(portNum))).close();
 		} catch (IndexOutOfBoundsException ex) {
@@ -758,7 +758,7 @@
 	 *
 	 *@since    April 11, 2002
 	 */
-	public void closeAllOutputPorts() {
+	public void closeAllOutputPorts() throws InterruptedException {
 		Iterator iterator = getOutPorts().iterator();
 		OutputPort port;
 
@@ -774,7 +774,7 @@
 	 *
 	 *@since    April 18, 2002
 	 */
-	public void broadcastEOF() {
+	public void broadcastEOF() throws InterruptedException{
 		closeAllOutputPorts();
 	}
 
@@ -785,7 +785,7 @@
 	 *@param  portNum  Which port to close
 	 *@since           April 11, 2002
 	 */
-	public void closeOutputPort(int portNum) {
+	public void closeOutputPort(int portNum) throws InterruptedException {
         OutputPort port = (OutputPort) outPorts.get(new Integer(portNum));
         if (port == null) {
             throw new RuntimeException(this.getId()+" - can't close output port \"" + portNum

Modified: trunk/cloveretl.engine/src/org/jetel/graph/OutputPort.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/OutputPort.java	2007-01-31 09:05:43 UTC (rev 2404)
+++ trunk/cloveretl.engine/src/org/jetel/graph/OutputPort.java	2007-01-31 09:49:24 UTC (rev 2405)
@@ -64,7 +64,7 @@
 	 *
 	 * @since    April 2, 2002
 	 */
-	public void close();
+	public void close() throws InterruptedException;
 
 	/**
 	 * An operation that opens the port indicating that data will be available



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 10:50:47 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 10:50:47 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2406 -
	trunk/cloveretl.engine/src/org/jetel/metadata
Message-ID: <200701310950.l0V9olVS015374@sheep.berlios.de>

Author: otasanek
Date: 2007-01-31 10:50:46 +0100 (Wed, 31 Jan 2007)
New Revision: 2406

Modified:
   trunk/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadataStub.java
Log:
BUGFIX: DataRecordMetadataStub.createMetadata() now initialize used connection.

Modified: trunk/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadataStub.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadataStub.java	2007-01-31 09:49:24 UTC (rev 2405)
+++ trunk/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadataStub.java	2007-01-31 09:50:46 UTC (rev 2406)
@@ -52,6 +52,7 @@
 	}
     
     public DataRecordMetadata createMetadata() throws Exception {
+        connection.init();
         return connection.createMetadata(parameters);
     }
 }



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 11:01:39 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 11:01:39 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2407 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701311001.l0VA1dn1016691@sheep.berlios.de>

Author: agad
Date: 2007-01-31 11:01:39 +0100 (Wed, 31 Jan 2007)
New Revision: 2407

Modified:
   trunk/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java
Log:
UPDATE:DelimitedDataReader;trim attribute is now of type Boolean

Modified: trunk/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java	2007-01-31 09:50:46 UTC (rev 2406)
+++ trunk/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java	2007-01-31 10:01:39 UTC (rev 2407)
@@ -199,7 +199,9 @@
 			xmlElement.setAttribute(XML_CHARSET_ATTRIBUTE, charSet);
 		}
 		xmlElement.setAttribute(XML_DATAPOLICY_ATTRIBUTE, policyType.toString());
-		xmlElement.setAttribute(XML_TRIM_ATTRIBUTE, parser.getTrim());
+		if (parser.getTrim() != null) {
+			xmlElement.setAttribute(XML_TRIM_ATTRIBUTE, String.valueOf(parser.getTrim()));
+		}		
 		
 	}
 
@@ -235,7 +237,7 @@
                 aDelimitedDataReaderNIO.setNumRecords(xattribs.getInteger(XML_NUMRECORDS_ATTRIBUTE));
             }
 			if (xattribs.exists(XML_TRIM_ATTRIBUTE)){
-				aDelimitedDataReaderNIO.parser.setTrim(xattribs.getString(XML_TRIM_ATTRIBUTE));
+				aDelimitedDataReaderNIO.parser.setTrim(xattribs.getBoolean(XML_TRIM_ATTRIBUTE));
 			}
 		} catch (Exception ex) {
 	           throw new XMLConfigurationException(COMPONENT_TYPE + ":" + xattribs.getString(XML_ID_ATTRIBUTE," unknown ID ") + ":" + ex.getMessage(),ex);



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 11:04:18 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 11:04:18 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2408 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701311004.l0VA4Isp017150@sheep.berlios.de>

Author: agad
Date: 2007-01-31 11:04:18 +0100 (Wed, 31 Jan 2007)
New Revision: 2408

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
Log:
UPDATE:DelimitedDataReader;trim attribute is now of type Boolean

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-31 10:01:39 UTC (rev 2407)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-31 10:04:18 UTC (rev 2408)
@@ -78,7 +78,7 @@
 	private char[][] delimiters;
 	private char[] fieldTypes;
 	private boolean isEof;
-	private BoolExt trim = BoolExt.NOT_SET;
+	private Boolean trim = null;
 
 	// Attributes
 	// maximum length of delimiter
@@ -433,9 +433,8 @@
 			// are we skipping this row/field ?
 			if (record != null){
 			    fieldStringBuffer.flip();
-			    if (trim == BoolExt.TRUE || 
-			    		(trim == BoolExt.NOT_SET && metadata.getField(
-								fieldCounter).isTrim())) {
+			    if (trim == Boolean.TRUE || 
+			    		(trim == null && metadata.getField(fieldCounter).isTrim())) {
 			    	StringUtils.trim(fieldStringBuffer);
 			    }
 			    populateField(record, fieldCounter, fieldStringBuffer);
@@ -562,24 +561,12 @@
 		return skipped;
 	}
 	
-	public String getTrim() {
-		return trim.toString();
+	public Boolean getTrim() {
+		return trim;
 	}
 
-	public void setTrim(String trim) {
-		switch (trim.charAt(0)) {
-		case 't':
-		case 'T':
-			this.trim = BoolExt.TRUE;
-			break;
-		case 'f':
-		case 'F':
-			this.trim = BoolExt.FALSE;
-			break;
-		default:
-			this.trim = BoolExt.NOT_SET;
-			break;
-		}
+	public void setTrim(Boolean trim) {
+		this.trim = trim;
 	}
 	
 }	



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 11:52:48 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 11:52:48 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2409 -
	branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util
Message-ID: <200701311052.l0VAqmAb023177@sheep.berlios.de>

Author: otasanek
Date: 2007-01-31 11:52:47 +0100 (Wed, 31 Jan 2007)
New Revision: 2409

Modified:
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java
Log:
SVN: merge for 2.0.4 (1).

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java	2007-01-31 10:04:18 UTC (rev 2408)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java	2007-01-31 10:52:47 UTC (rev 2409)
@@ -44,8 +44,8 @@
 public final class ByteBufferUtils {
 	
 	/**
-	 * This method flushes the buffer to the Channel and prepares it for next
-	 *  reading
+	 * This method flushes the buffer (data from the begging of buffer to position) 
+	 * 	to the Channel and prepares it for next reading
 	 * 
 	 * @param buffer
 	 * @param writer
@@ -54,17 +54,21 @@
 	 */
 	public static int flush(ByteBuffer buffer, WritableByteChannel writer)
 			throws IOException {
-		int write;
-		if (buffer.position() != 0) {
+		int write = 0;
+//		if (buffer.position() != 0) {
 			buffer.flip();
-		}
+//		}
 		write = writer.write(buffer);
 		buffer.clear();
 		return write;
 	}
 	
 	/**
-	 * This method reads new data to the buffer 
+	 * This method reads new data to the buffer. The bytes between the buffer's 
+	 * current position and its limit are copied to the beginning of the buffer 
+	 * and new bytes are read after them. Upon return the buffer's position will 
+	 * be equal to p + n, where p is number of compacted bytes an n - number of 
+	 * read bytes; its limit will be set to capacity. 
 	 * 
 	 * @param buffer
 	 * @param reader
@@ -77,7 +81,7 @@
 			buffer.compact();
 		}
 		read = reader.read(buffer);
-		buffer.flip();
+//		buffer.flip();
 		return read;
 	}
 



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 12:05:38 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 12:05:38 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2410 -
	branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/util
Message-ID: <200701311105.l0VB5cf4025810@sheep.berlios.de>

Author: otasanek
Date: 2007-01-31 12:05:38 +0100 (Wed, 31 Jan 2007)
New Revision: 2410

Modified:
   branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java
Log:
SVN: merge for 2.0.4 (2).

Modified: branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java
===================================================================
--- branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java	2007-01-31 10:52:47 UTC (rev 2409)
+++ branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java	2007-01-31 11:05:38 UTC (rev 2410)
@@ -44,8 +44,8 @@
 public class ByteBufferUtils {
 	
 	/**
-	 * This method flushes the buffer to the Channel and prepares it for next
-	 *  reading
+	 * This method flushes the buffer (data from the begging of buffer to position) 
+	 * 	to the Channel and prepares it for next reading
 	 * 
 	 * @param buffer
 	 * @param writer
@@ -54,17 +54,21 @@
 	 */
 	public static int flush(ByteBuffer buffer, WritableByteChannel writer)
 			throws IOException {
-		int write;
-		if (buffer.position() != 0) {
+		int write = 0;
+//		if (buffer.position() != 0) {
 			buffer.flip();
-		}
+//		}
 		write = writer.write(buffer);
 		buffer.clear();
 		return write;
 	}
 	
 	/**
-	 * This method reads new data to the buffer 
+	 * This method reads new data to the buffer. The bytes between the buffer's 
+	 * current position and its limit are copied to the beginning of the buffer 
+	 * and new bytes are read after them. Upon return the buffer's position will 
+	 * be equal to p + n, where p is number of compacted bytes an n - number of 
+	 * read bytes; its limit will be set to capacity. 
 	 * 
 	 * @param buffer
 	 * @param reader
@@ -77,7 +81,7 @@
 			buffer.compact();
 		}
 		read = reader.read(buffer);
-		buffer.flip();
+//		buffer.flip();
 		return read;
 	}
 



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 13:21:57 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 13:21:57 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2411 -
	branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/formatter
Message-ID: <200701311221.l0VCLvaI007753@sheep.berlios.de>

Author: agad
Date: 2007-01-31 13:21:57 +0100 (Wed, 31 Jan 2007)
New Revision: 2411

Modified:
   branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/formatter/CloverDataFormatter.java
Log:
BUGFIX#35419:CloverDataWriter - don't flush empty buffer to file

Modified: branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/formatter/CloverDataFormatter.java
===================================================================
--- branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/formatter/CloverDataFormatter.java	2007-01-31 11:05:38 UTC (rev 2410)
+++ branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/formatter/CloverDataFormatter.java	2007-01-31 12:21:57 UTC (rev 2411)
@@ -139,9 +139,8 @@
 					ByteBufferUtils.flush(idxBuffer,idxWriter);
 					idxWriter.close();
 					ByteBufferUtils.reload(idxBuffer,idxReader);
-				}else{
-					idxBuffer.flip();
 				}
+				idxBuffer.flip();
 				long startValue = 0;//first index
 				int position;
 				if (out instanceof ZipOutputStream) {
@@ -221,6 +220,7 @@
 		while (buffer.remaining() >= LONG_SIZE_BYTES){
 			if (idxBuffer.remaining() < SHORT_SIZE_BYTES ){//end of idxBuffer, reload it
 				ByteBufferUtils.reload(idxBuffer,idxReader);
+				idxBuffer.flip();
 			}
 			if (idxBuffer.remaining() < SHORT_SIZE_BYTES ){//there is no more sizes to working up
 				break;



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 13:22:13 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 13:22:13 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2412 -
	branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701311222.l0VCMDmb007806@sheep.berlios.de>

Author: agad
Date: 2007-01-31 13:22:13 +0100 (Wed, 31 Jan 2007)
New Revision: 2412

Modified:
   branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/parser/CloverDataParser.java
Log:
BUGFIX#35419:CloverDataWriter - don't flush empty buffer to file

Modified: branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/parser/CloverDataParser.java
===================================================================
--- branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/parser/CloverDataParser.java	2007-01-31 12:21:57 UTC (rev 2411)
+++ branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/data/parser/CloverDataParser.java	2007-01-31 12:22:13 UTC (rev 2412)
@@ -169,8 +169,9 @@
 			//skip idx bytes from record file
 			int i=0;
 			do {
-				ByteBufferUtils.reload(recordBuffer,recordFile);
-				i++;
+               ByteBufferUtils.reload(recordBuffer,recordFile);
+                recordBuffer.flip();
+                i++;
 			}while (i*Defaults.DEFAULT_INTERNAL_IO_BUFFER_SIZE < idx);
 			recordBuffer.position((int)idx%Defaults.DEFAULT_INTERNAL_IO_BUFFER_SIZE);
 		} catch (IOException ex) {
@@ -197,6 +198,7 @@
 		if (recordBuffer.remaining() < LEN_SIZE_SPECIFIER) {
 			try {
 				ByteBufferUtils.reload(recordBuffer,recordFile);
+				recordBuffer.flip();
 			} catch (IOException e) {
 				throw new JetelException(e.getLocalizedMessage());
 			}



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 14:08:44 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 14:08:44 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2413 -
	branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/interpreter
Message-ID: <200701311308.l0VD8irV015953@sheep.berlios.de>

Author: otasanek
Date: 2007-01-31 14:08:43 +0100 (Wed, 31 Jan 2007)
New Revision: 2413

Modified:
   branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
Log:
SVN: Merge 2.0.4.

Modified: branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
===================================================================
--- branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-31 12:22:13 UTC (rev 2412)
+++ branches/cloveretl.engine.rel-2-0-4/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-31 13:08:43 UTC (rev 2413)
@@ -1537,7 +1537,7 @@
     
     public Object visit(CLVFMapping node, Object data) {
         DataField field=outputRecords[node.recordNo].getField(node.fieldNo);
-        int arity=node.arity; // how many children we have defined
+        int arity=node.jjtGetNumChildren(); // how many children we have defined
         Object value=null;
         try{
             // we try till success or no more options
@@ -1551,19 +1551,11 @@
                     }else{
                         field.setValue(value);
                     }
-                }catch(BadDataFormatException ex){
-                    if (i == arity)
-                        throw ex;
-                    else
-                        continue;
-                    
+                    break; // success during assignment, finish looping
                 }catch(Exception ex){
-                    if (i == arity)
+                    if (i == arity-1)
                         throw ex;
-                    else
-                        continue;
                 }
-                break; // success during assignment, finish looping
             }
             
         }catch(BadDataFormatException ex){



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 14:16:13 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 14:16:13 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2414 - in trunk:
	cloveretl.component/src/org/jetel/component
	cloveretl.engine/src/org/jetel/data/formatter
	cloveretl.engine/src/org/jetel/main
Message-ID: <200701311316.l0VDGDsV016628@sheep.berlios.de>

Author: otasanek
Date: 2007-01-31 14:16:10 +0100 (Wed, 31 Jan 2007)
New Revision: 2414

Added:
   trunk/cloveretl.component/src/org/jetel/component/TextWriter.java
   trunk/cloveretl.engine/src/org/jetel/data/formatter/TextTableFormatter.java
   trunk/cloveretl.engine/src/org/jetel/main/DataComponentViewer.java
Modified:
   trunk/cloveretl.component/src/org/jetel/component/DataWriter.java
   trunk/cloveretl.component/src/org/jetel/component/StructureWriter.java
Log:
INIT: component viewer, (fix: StructureWriter, DataWriter)

Modified: trunk/cloveretl.component/src/org/jetel/component/DataWriter.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/DataWriter.java	2007-01-31 13:08:43 UTC (rev 2413)
+++ trunk/cloveretl.component/src/org/jetel/component/DataWriter.java	2007-01-31 13:16:10 UTC (rev 2414)
@@ -19,6 +19,9 @@
 */
 
 package org.jetel.component;
+import java.nio.channels.Channels;
+import java.nio.channels.WritableByteChannel;
+
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jetel.data.DataRecord;
@@ -32,6 +35,7 @@
 import org.jetel.graph.Node;
 import org.jetel.graph.Result;
 import org.jetel.graph.TransformationGraph;
+import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.util.ComponentXMLAttributes;
 import org.jetel.util.MultiFileWriter;
 import org.jetel.util.StringUtils;
@@ -95,6 +99,10 @@
     private boolean outputFieldNames;
 	private int bytesPerFile;
 	private int recordsPerFile;
+	private WritableByteChannel channelWriter;
+	private String delimiter;
+	private long recordFrom = -1;
+	private long recordCount = -1;
 
 	static Log logger = LogFactory.getLog(DataWriter.class);
 
@@ -121,19 +129,28 @@
 	public Result execute() throws Exception {
 		InputPort inPort = getInputPort(READ_FROM_PORT);
 		DataRecord record = new DataRecord(inPort.getMetadata());
+		long iRec = 0;
+		long recordTo = recordCount < 0 ? Long.MAX_VALUE : (recordFrom < 0 ? recordCount+1 : recordFrom + recordCount);
 		record.init();
 		try {
 			while (record != null && runIt) {
+				iRec++;
 				record = inPort.readRecord(record);
+				if (recordFrom > iRec || recordTo <= iRec) continue;
 				if (record != null) {
-					writer.write(record);
+					if (channelWriter != null) {
+						formatter.write(record);
+					} else {
+						writer.write(record);
+					}
 				}
 				SynchronizeUtils.cloverYield();
 			}
+			if (channelWriter != null) formatter.flush();
 		} catch (Exception e) {
 			throw e;
 		}finally{		
-			writer.close();
+			if (writer != null) writer.close();
 		}
         return runIt ? Result.FINISHED_OK : Result.ABORTED;
 	}
@@ -148,16 +165,29 @@
 	public void init() throws ComponentNotReadyException {
 		super.init();
 
-        // initialize multifile writer based on prepared formatter
-        writer = new MultiFileWriter(formatter, getGraph().getProjectURL(), fileURL);
-        writer.setLogger(logger);
-        writer.setBytesPerFile(bytesPerFile);
-        writer.setRecordsPerFile(recordsPerFile);
-        writer.setAppendData(appendData);
-        if(outputFieldNames) {
-            writer.setHeader(getInputPort(READ_FROM_PORT).getMetadata().getFieldNamesHeader());
-        }
-        writer.init(getInputPort(READ_FROM_PORT).getMetadata());
+		if (fileURL != null) {
+	        // initialize multifile writer based on prepared formatter
+	        writer = new MultiFileWriter(formatter, getGraph().getProjectURL(), fileURL);
+	        writer.setLogger(logger);
+	        writer.setBytesPerFile(bytesPerFile);
+	        writer.setRecordsPerFile(recordsPerFile);
+	        writer.setAppendData(appendData);
+	        if(outputFieldNames) {
+	            writer.setHeader(getInputPort(READ_FROM_PORT).getMetadata().getFieldNamesHeader());
+	        }
+	        writer.init(getInputPort(READ_FROM_PORT).getMetadata());
+		} else {
+			channelWriter = Channels.newChannel(System.out);
+			formatter.setDataTarget(channelWriter);
+			DataRecordMetadata metadata = getInputPort(READ_FROM_PORT).getMetadata();
+			if (delimiter != null) {
+				for(int i=0; i<metadata.getNumFields()-1; i++) {
+					metadata.getField(i).setDelimiter(delimiter);
+				}
+				//metadata.getField(metadata.getNumFields()-1).setDelimiter("\n");
+			}
+			formatter.init(metadata);
+		}
 	}
 	
 	/**
@@ -268,5 +298,17 @@
     public void setOutputFieldNames(boolean outputFieldNames) {
         this.outputFieldNames = outputFieldNames;
     }
+    
+    public void setDataDelimiter(String delimiter) {
+    	this.delimiter = delimiter;
+    }
+    
+	public void setRecordFrom(long recordFrom) {
+		this.recordFrom = recordFrom;
+	}
 
+	public void setRecordCount(long recordCount) {
+		this.recordCount = recordCount;
+	}
+
 }

Modified: trunk/cloveretl.component/src/org/jetel/component/StructureWriter.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/StructureWriter.java	2007-01-31 13:08:43 UTC (rev 2413)
+++ trunk/cloveretl.component/src/org/jetel/component/StructureWriter.java	2007-01-31 13:16:10 UTC (rev 2414)
@@ -23,6 +23,7 @@
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
+import java.nio.channels.Channels;
 import java.nio.channels.WritableByteChannel;
 
 import org.jetel.data.DataRecord;
@@ -112,6 +113,8 @@
 	public static final String XML_MASK_ATTRIBUTE = "mask";
 	public static final String XML_HEADER_ATTRIBUTE = "header";
 	public static final String XML_FOOTER_ATTRIBUTE = "footer";
+	public static final String XML_RECORD_FROM_ATTRIBUTE = "recordFrom";
+	public static final String XML_RECORD_COUNT_ATTRIBUTE = "recordCount";
 
 	private String fileURL;
 	private boolean appendData;
@@ -121,6 +124,8 @@
 	private WritableByteChannel writer;
 	private ByteBuffer buffer;
 	private String charset;
+	private long recordFrom = -1;
+	private long recordCount = -1;
 
 	public final static String COMPONENT_TYPE = "STRUCTURE_WRITER";
 	private final static int READ_FROM_PORT = 0;
@@ -162,11 +167,15 @@
 		}
 		InputPort inPort = getInputPort(READ_FROM_PORT);
 		DataRecord record = new DataRecord(inPort.getMetadata());
+		long iRec = 0;
+		long recordTo = recordCount < 0 ? Long.MAX_VALUE : (recordFrom < 0 ? recordCount+1 : recordFrom + recordCount);
 		record.init();
 		//write records
 		try {
 			while (record != null && runIt) {
+				iRec++;
 				record = inPort.readRecord(record);
+				if (recordFrom > iRec || recordTo <= iRec) continue;
 				if (record != null) {
 					formatter.write(record);
 				}
@@ -225,7 +234,7 @@
 		super.init();
 		// based on file mask, create/open output file
 		try {
-			writer = FileUtils.getWritableChannel(getGraph().getProjectURL(), fileURL, appendData);
+			writer = fileURL == null ? Channels.newChannel(System.out) : FileUtils.getWritableChannel(getGraph().getProjectURL(), fileURL, appendData);
 			buffer = ByteBuffer.allocateDirect(StringUtils.getMaxLength(header,footer));
 			formatter.init(getInputPort(READ_FROM_PORT).getMetadata());
             formatter.setDataTarget(writer);
@@ -253,6 +262,12 @@
 			if (xattribs.exists(XML_FOOTER_ATTRIBUTE)){
 				aDataWriter.setFooter(xattribs.getString(XML_FOOTER_ATTRIBUTE));
 			}
+			if (xattribs.exists(XML_RECORD_FROM_ATTRIBUTE)){
+				aDataWriter.setRecordFrom(Long.parseLong(xattribs.getString(XML_RECORD_FROM_ATTRIBUTE)));
+			}
+			if (xattribs.exists(XML_RECORD_COUNT_ATTRIBUTE)){
+				aDataWriter.setRecordCount(Long.parseLong(xattribs.getString(XML_RECORD_COUNT_ATTRIBUTE)));
+			}
 		}catch(Exception ex){
 			System.err.println(COMPONENT_TYPE + ":" + xattribs.getString(Node.XML_ID_ATTRIBUTE,"unknown ID") + ":" + ex.getMessage());
 			return null;
@@ -278,6 +293,12 @@
 		if (footer != null){
 			xmlElement.setAttribute(XML_FOOTER_ATTRIBUTE,footer);
 		}
+		if (recordFrom != -1){
+			xmlElement.setAttribute(XML_RECORD_FROM_ATTRIBUTE, String.valueOf(recordFrom));
+		}
+		if (recordCount != -1){
+			xmlElement.setAttribute(XML_RECORD_COUNT_ATTRIBUTE,String.valueOf(recordCount));
+		}
 	}
 	
 	public void setFooter(String footer) {
@@ -287,5 +308,13 @@
 	public void setHeader(String header) {
 		this.header = header;
 	}
-	
+
+	public void setRecordFrom(long recordFrom) {
+		this.recordFrom = recordFrom;
+	}
+
+	public void setRecordCount(long recordCount) {
+		this.recordCount = recordCount;
+	}
+
 }

Added: trunk/cloveretl.component/src/org/jetel/component/TextWriter.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/TextWriter.java	2007-01-31 13:08:43 UTC (rev 2413)
+++ trunk/cloveretl.component/src/org/jetel/component/TextWriter.java	2007-01-31 13:16:10 UTC (rev 2414)
@@ -0,0 +1,297 @@
+
+/*
+*    jETeL/Clover - Java based ETL application framework.
+*    Copyright (C) 2005-06  Javlin Consulting <info at javlinconsulting.cz>
+*    
+*    This library is free software; you can redistribute it and/or
+*    modify it under the terms of the GNU Lesser General Public
+*    License as published by the Free Software Foundation; either
+*    version 2.1 of the License, or (at your option) any later version.
+*    
+*    This library is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+*    Lesser General Public License for more details.
+*    
+*    You should have received a copy of the GNU Lesser General Public
+*    License along with this library; if not, write to the Free Software
+*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*
+*/
+
+package org.jetel.component;
+
+import java.io.IOException;
+import java.nio.ByteBuffer;
+import java.nio.channels.Channels;
+import java.nio.channels.WritableByteChannel;
+
+import org.jetel.data.DataRecord;
+import org.jetel.data.Defaults;
+import org.jetel.data.formatter.TextTableFormatter;
+import org.jetel.exception.ComponentNotReadyException;
+import org.jetel.exception.ConfigurationProblem;
+import org.jetel.exception.ConfigurationStatus;
+import org.jetel.graph.InputPort;
+import org.jetel.graph.Node;
+import org.jetel.graph.Result;
+import org.jetel.graph.TransformationGraph;
+import org.jetel.util.ByteBufferUtils;
+import org.jetel.util.ComponentXMLAttributes;
+import org.jetel.util.FileUtils;
+import org.jetel.util.StringUtils;
+import org.jetel.util.SynchronizeUtils;
+import org.w3c.dom.Element;
+
+/**
+ *  <h3>StructureWriter Component</h3>
+ *
+ * <!-- All records from input port [0] are formatted due to given mask and written to specified file -->
+ * 
+ * <table border="1">
+ *  <th>Component:</th>
+ * <tr><td><h4><i>Name:</i></h4></td>
+ * <td>StructureWriter</td></tr>
+ * <tr><td><h4><i>Category:</i></h4></td>
+ * <td></td></tr>
+ * <tr><td><h4><i>Description:</i></h4></td>
+ * <td>All records from input port [0] are formatted due to given mask and written to specified file.
+ * Records can be preceded by some text (header) or be trailed by a text (footer)</td></tr>
+ * <tr><td><h4><i>Inputs:</i></h4></td>
+ * <td>[0]- input records</td></tr>
+ * <tr><td><h4><i>Outputs:</i></h4></td>
+ * <td></td></tr>
+ * <tr><td><h4><i>Comment:</i></h4></td>
+ * <td>This component uses java.nio.* classes.</td></tr>
+ * </table>
+ *  <br>  
+ *  <table border="1">
+ *  <th>XML attributes:</th>
+ *  <tr><td><b>type</b></td><td>"STRUCTURE_WRITER"</td></tr>
+ *  <tr><td><b>id</b></td><td>component identification</td>
+ *  <tr><td><b>fileURL</b></td><td>Output files mask.
+ *  Use wildcard '#' to specify where to insert sequential number of file. Number of consecutive wildcards specifies
+ *  minimal length of the number. Name without wildcard specifies only one file.</td>
+ *  <tr><td><b>charset</b></td><td>character encoding of the output file (if not specified, then ISO-8859-1 is used)</td>
+ *  <tr><td><b>append</b></td><td>whether to append data at the end if output file exists or replace it (values: true/false)</td>
+ *  <tr><td><b>mask</b></td><td>template for formating records. Every occurrence 
+ *  of $fieldName will be replaced by value of the fieldName. The rest of text will
+ *  be unchanged. If not given there is used default mask:
+ *  &lt; recordName field1=$field1 field2=$field2 ... fieldn=$fieldn /&gt;
+ *  where field1 ,.., fieldn are record's fields from metadata</td>
+ *  <tr><td><b>header</b></td><td>text to write before records</td>
+ *  <tr><td><b>footer</b></td><td>text to write after records</td>
+ *  </tr>
+ *  </table>  
+ *
+ * <h4>Example:</h4>
+ * <pre>&lt;Node append="true" fileURL="${WORKSPACE}/output/structured_customers.txt"
+ *  id="STRUCTURE_WRITER0" type="STRUCTURE_WRITER"&gt;
+ * &lt;attr name="header"&gt;dir = ${WORKSPACE}&lt;/attr&gt;
+ * &lt;attr name="mask"&gt;
+ * &lt;Customer id=$customer_id&gt;
+ * 	&lt;last name = $lname&gt;
+ *	&lt;first name = $fname&gt;
+ * &lt;/Customer&gt;
+ * &lt;/attr&gt;
+ * &lt;attr name="footer"&gt;end of file&lt;/attr&gt;
+ * &lt;/Node&gt;
+ * 
+ * 
+ * @author avackova (agata.vackova at javlinconsulting.cz) ; 
+ * (c) JavlinConsulting s.r.o.
+ *  www.javlinconsulting.cz
+ *
+ * @since Oct 30, 2006
+ *
+ */
+public class TextWriter extends Node {
+
+	public static final String XML_APPEND_ATTRIBUTE = "append";
+	public static final String XML_FILEURL_ATTRIBUTE = "fileURL";
+	public static final String XML_CHARSET_ATTRIBUTE = "charset";
+	public static final String XML_MASK_ATTRIBUTE = "mask";
+	public static final String XML_HEADER_ATTRIBUTE = "header";
+	public static final String XML_RECORD_FROM_ATTRIBUTE = "recordFrom";
+	public static final String XML_RECORD_COUNT_ATTRIBUTE = "recordCount";
+
+	private String fileURL;
+	private boolean appendData;
+	private TextTableFormatter formatter;
+	private boolean header = true;
+	private WritableByteChannel writer;
+	private String charset;
+	private long recordFrom = -1;
+	private long recordCount = -1;
+	
+	public final static String COMPONENT_TYPE = "STRUCTURE_WRITER";
+	private final static int READ_FROM_PORT = 0;
+
+	/**
+	 * Constructor
+	 * 
+	 * @param id
+	 * @param fileURL
+	 * @param charset
+	 * @param appendData
+	 * @param mask
+	 */
+	public TextWriter(String id, String fileURL, String charset, 
+			boolean appendData, String[] fields) {
+		super(id);
+		this.fileURL = fileURL;
+		this.appendData = appendData;
+		this.charset = charset != null ? charset : Defaults.DataFormatter.DEFAULT_CHARSET_ENCODER;
+		formatter = charset == null ? new TextTableFormatter() : 
+			new TextTableFormatter(charset);
+		formatter.setMask(fields);
+	}
+
+	/* (non-Javadoc)
+	 * @see org.jetel.graph.Node#getType()
+	 */
+	@Override
+	public String getType() {
+		return COMPONENT_TYPE;
+	}
+
+	@Override
+	public Result execute() throws Exception {
+		//write header
+		InputPort inPort = getInputPort(READ_FROM_PORT);
+		DataRecord record = new DataRecord(inPort.getMetadata());
+		long iRec = 0;
+		long recordTo = recordCount < 0 ? Long.MAX_VALUE : (recordFrom < 0 ? recordCount+1 : recordFrom + recordCount);
+		record.init();
+		//write records
+		try {
+			while (record != null && runIt) {
+				iRec++;
+				record = inPort.readRecord(record);
+				if (recordFrom > iRec || recordTo <= iRec) continue;
+				if (record != null) {
+					formatter.write(record);
+				}
+				SynchronizeUtils.cloverYield();
+			}
+			formatter.eof();
+		} catch (Exception e) {
+			throw e;
+		}finally{
+			//close output
+			writer.close();
+		}
+        return runIt ? Result.FINISHED_OK : Result.ABORTED;
+	}
+
+	@Override
+	public void free() {
+		super.free();
+		formatter.close();
+	}
+	/* (non-Javadoc)
+	 * @see org.jetel.graph.GraphElement#checkConfig()
+	 */
+    @Override
+    public ConfigurationStatus checkConfig(ConfigurationStatus status) {
+		super.checkConfig(status);
+		 
+		checkInputPorts(status, 1, 1);
+        checkOutputPorts(status, 0, 0);
+
+        try {
+            init();
+            free();
+        } catch (ComponentNotReadyException e) {
+            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
+            if(!StringUtils.isEmpty(e.getAttributeName())) {
+                problem.setAttributeName(e.getAttributeName());
+            }
+            status.add(problem);
+        }
+        
+        return status;
+    }
+	
+	/* (non-Javadoc)
+	 * @see org.jetel.graph.GraphElement#init()
+	 */
+	@Override
+	public void init() throws ComponentNotReadyException {
+		super.init();
+		// based on file mask, create/open output file
+		try {
+			writer = fileURL == null ? Channels.newChannel(System.out) : FileUtils.getWritableChannel(getGraph().getProjectURL(), fileURL, appendData);
+			formatter.init(getInputPort(READ_FROM_PORT).getMetadata());
+            formatter.setDataTarget(writer);
+            formatter.setHeader(header);
+		} catch (IOException ex) {
+			throw new ComponentNotReadyException(getId() + "IOError: " + ex.getMessage());
+		}
+	}
+
+	/* (non-Javadoc)
+	 * @see org.jetel.graph.Node#fromXML(org.jetel.graph.TransformationGraph, org.w3c.dom.Element)
+	 */
+	public static Node fromXML(TransformationGraph graph, Element nodeXML) {
+		ComponentXMLAttributes xattribs=new ComponentXMLAttributes(nodeXML, graph);
+		TextWriter aDataWriter = null;
+		
+		try{
+			String fields = xattribs.getString(XML_MASK_ATTRIBUTE,null);
+			String[] aFields = fields == null ? null : fields.split(";");
+			aDataWriter = new TextWriter(xattribs.getString(Node.XML_ID_ATTRIBUTE),
+									xattribs.getString(XML_FILEURL_ATTRIBUTE),
+									xattribs.getString(XML_CHARSET_ATTRIBUTE,null),
+									xattribs.getBoolean(XML_APPEND_ATTRIBUTE, false),
+									aFields);
+			if (xattribs.exists(XML_HEADER_ATTRIBUTE)){
+				aDataWriter.setHeader(Boolean.parseBoolean(xattribs.getString(XML_HEADER_ATTRIBUTE)));
+			}
+			if (xattribs.exists(XML_RECORD_FROM_ATTRIBUTE)){
+				aDataWriter.setRecordFrom(Long.parseLong(xattribs.getString(XML_RECORD_FROM_ATTRIBUTE)));
+			}
+			if (xattribs.exists(XML_RECORD_COUNT_ATTRIBUTE)){
+				aDataWriter.setRecordCount(Long.parseLong(xattribs.getString(XML_RECORD_COUNT_ATTRIBUTE)));
+			}
+		}catch(Exception ex){
+			System.err.println(COMPONENT_TYPE + ":" + xattribs.getString(Node.XML_ID_ATTRIBUTE,"unknown ID") + ":" + ex.getMessage());
+			return null;
+		}
+		
+		return aDataWriter;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.jetel.graph.Node#toXML(org.w3c.dom.Element)
+	 */
+	public void toXML(org.w3c.dom.Element xmlElement) {
+		super.toXML(xmlElement);
+		xmlElement.setAttribute(XML_FILEURL_ATTRIBUTE,this.fileURL);
+		String charSet = this.formatter.getCharsetName();
+		if (charSet != null) {
+			xmlElement.setAttribute(XML_CHARSET_ATTRIBUTE, this.formatter.getCharsetName());
+		}
+		xmlElement.setAttribute(XML_APPEND_ATTRIBUTE, String.valueOf(this.appendData));
+		xmlElement.setAttribute(XML_HEADER_ATTRIBUTE,String.valueOf(header));
+		if (recordFrom != -1){
+			xmlElement.setAttribute(XML_RECORD_FROM_ATTRIBUTE, String.valueOf(recordFrom));
+		}
+		if (recordCount != -1){
+			xmlElement.setAttribute(XML_RECORD_COUNT_ATTRIBUTE,String.valueOf(recordCount));
+		}
+	}
+	
+	public void setHeader(boolean header) {
+		this.header = header;
+	}
+
+	public void setRecordFrom(long recordFrom) {
+		this.recordFrom = recordFrom;
+	}
+
+	public void setRecordCount(long recordCount) {
+		this.recordCount = recordCount;
+	}
+
+}

Added: trunk/cloveretl.engine/src/org/jetel/data/formatter/TextTableFormatter.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/formatter/TextTableFormatter.java	2007-01-31 13:08:43 UTC (rev 2413)
+++ trunk/cloveretl.engine/src/org/jetel/data/formatter/TextTableFormatter.java	2007-01-31 13:16:10 UTC (rev 2414)
@@ -0,0 +1,391 @@
+
+/*
+*    jETeL/Clover - Java based ETL application framework.
+*    Copyright (C) 2005-06  Javlin Consulting <info at javlinconsulting.cz>
+*    
+*    This library is free software; you can redistribute it and/or
+*    modify it under the terms of the GNU Lesser General Public
+*    License as published by the Free Software Foundation; either
+*    version 2.1 of the License, or (at your option) any later version.
+*    
+*    This library is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+*    Lesser General Public License for more details.
+*    
+*    You should have received a copy of the GNU Lesser General Public
+*    License along with this library; if not, write to the Free Software
+*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*
+*/
+
+package org.jetel.data.formatter;
+
+import java.io.IOException;
+import java.nio.ByteBuffer;
+import java.nio.CharBuffer;
+import java.nio.channels.WritableByteChannel;
+import java.nio.charset.Charset;
+import java.nio.charset.CharsetEncoder;
+import java.util.HashMap;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+
+import org.jetel.data.DataRecord;
+import org.jetel.data.Defaults;
+import org.jetel.exception.ComponentNotReadyException;
+import org.jetel.metadata.DataFieldMetadata;
+import org.jetel.metadata.DataRecordMetadata;
+import org.jetel.util.ByteBufferUtils;
+
+/**
+ * Outputs data record in form coherent with given mask. 
+ * Handles encoding of characters. Uses WriteableChannel.
+ * 
+ * @author avackova (agata.vackova at javlinconsulting.cz) ; 
+ * (c) JavlinConsulting s.r.o.
+ *  www.javlinconsulting.cz
+ *
+ * @since Oct 27, 2006
+ *
+ */
+public class TextTableFormatter implements Formatter {
+	
+	private DataRecordMetadata metadata;
+	private WritableByteChannel writer;
+	private int[] maskIndex;
+	private int lastIndex;
+	private String fieldName;
+	private ByteBuffer fieldBuffer; 
+	private ByteBuffer dataBuffer;
+	private CharsetEncoder encoder;
+	private String charSet = null;
+	
+	private List<DataRecord> dataRecords;
+	private CharBuffer blank;
+	private CharBuffer horizontal;
+	private boolean header = true;
+	private int rowSize = 0;
+	private int leftBytes = 0;
+	private DataFieldParams[] maskAnalize;
+	private String[] mask;
+
+	private static final int MAX_COUNT_ANALYZED_COUNT = 20;
+	private static final int PADDING_SPACE = 3;
+
+	private static final byte[] TABLE_CORNER = new byte[] {('+')};
+	private static final byte[] TABLE_HORIZONTAL = new byte[] {('-')};
+	private static final byte[] TABLE_VERTICAL = new byte[] {('|')};
+	private static final byte[] NL = new byte[] {('\n')};
+	
+	/**
+	 * Constructor without parameters
+	 */
+	public TextTableFormatter(){
+		encoder = Charset.forName(Defaults.DataFormatter.DEFAULT_CHARSET_ENCODER).newEncoder();
+		encoder.reset();
+	}
+	
+	/**
+	 * Constructor
+	 * 
+	 * @param charEncoder charset for coding characters
+	 */
+	public TextTableFormatter(String charEncoder){
+		charSet = charEncoder;
+		encoder = Charset.forName(charEncoder).newEncoder();
+		encoder.reset();
+	}
+
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#init(org.jetel.metadata.DataRecordMetadata)
+	 */
+	public void init(DataRecordMetadata _metadata)
+			throws ComponentNotReadyException {
+		this.metadata = _metadata;
+
+		// create buffered output stream writer and buffers 
+		dataBuffer = ByteBuffer.allocateDirect(Defaults.DEFAULT_INTERNAL_IO_BUFFER_SIZE);
+		fieldBuffer = ByteBuffer.allocateDirect(Defaults.DataFormatter.FIELD_BUFFER_LENGTH);
+		//if mask is not given create default mask
+		if (mask == null) {
+			maskAnalize = new DataFieldParams[metadata.getNumFields()];
+			for (int i=0;i<metadata.getNumFields();i++){
+				maskAnalize[i] = new DataFieldParams(metadata.getField(i).getName(), i, 0);
+			}
+		} else {
+			Map<String, Integer> map = new HashMap<String, Integer>();
+			for (int i=0;i<metadata.getNumFields();i++){
+				map.put(metadata.getField(i).getName(), i);
+			}
+			maskAnalize = new DataFieldParams[mask.length];
+			for (int i=0;i<mask.length;i++){
+				maskAnalize[i] = new DataFieldParams(mask[i], map.get(mask[i]), 0);
+			}
+		}
+		dataRecords = new LinkedList<DataRecord>();
+		/*try {
+			maskBytes = mask.getBytes(charSet != null ? charSet
+					: Defaults.DataFormatter.DEFAULT_CHARSET_ENCODER);
+		} catch (UnsupportedEncodingException e) {
+			throw new ComponentNotReadyException(e);
+		}*/
+	}
+
+    /* (non-Javadoc)
+     * @see org.jetel.data.formatter.Formatter#setDataTarget(java.lang.Object)
+     */
+    public void setDataTarget(Object out) {
+        close();
+        writer = (WritableByteChannel) out;
+    }
+    
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#close()
+	 */
+	public void close() {
+        if (writer == null || !writer.isOpen()) {
+            return;
+        }
+		try{
+			flush();
+			writer.close();
+		}catch(IOException ex){
+			ex.printStackTrace();
+		}
+	}
+
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#write(org.jetel.data.DataRecord)
+	 */
+	public int writeRecord(DataRecord record) throws IOException {
+        int sentBytes=0;
+        int mark;
+        
+        sentBytes += writeString(TABLE_VERTICAL);
+        
+		//for each record field which is in mask change its name to value
+		for (int i=0;i<maskAnalize.length;i++){
+			if (dataBuffer.remaining() < fieldBuffer.limit()){
+				directFlush();
+			}
+			//change field value to bytes
+			fieldBuffer.clear();
+			record.getField(maskAnalize[i].index).toByteBuffer(fieldBuffer, encoder);
+			fieldBuffer.flip();
+            
+			blank.clear();
+			blank.limit(maskAnalize[i].length - (fieldBuffer.limit()));
+            mark=dataBuffer.position();
+
+			//put field value to data buffer
+			dataBuffer.put(fieldBuffer);
+			dataBuffer.put(encoder.encode(blank));
+            
+            sentBytes+=dataBuffer.position()-mark;
+
+            sentBytes += writeString(TABLE_VERTICAL);
+		}
+        sentBytes += writeString(NL);
+        return sentBytes;
+	}
+
+	private int writeHeader() throws IOException {
+        int sentBytes=0;
+        sentBytes += writeString(TABLE_CORNER);
+        for (int i=0; i<maskAnalize.length; i++) {
+        	sentBytes += writeString(horizontal, maskAnalize[i].length);
+            sentBytes += writeString(TABLE_CORNER);
+        }
+        sentBytes += writeString(NL);
+        
+		DataFieldMetadata[] fMetadata = metadata.getFields();
+		String fName;
+        sentBytes += writeString(TABLE_VERTICAL);
+        for (int i=0; i<maskAnalize.length; i++) {
+        	fName = fMetadata[maskAnalize[i].index].getName();
+        	sentBytes += writeString(fName.getBytes());
+        	sentBytes += writeString(blank, maskAnalize[i].length-fName.length());
+            sentBytes += writeString(TABLE_VERTICAL);
+        }
+        sentBytes += writeString(NL);
+        
+        sentBytes += writeString(TABLE_CORNER);
+        for (int i=0; i<maskAnalize.length; i++) {
+        	sentBytes += writeString(horizontal, maskAnalize[i].length);
+            sentBytes += writeString(TABLE_CORNER);
+        }
+        sentBytes += writeString(NL);
+
+		return sentBytes;
+	}
+	
+	private int writeFooter() throws IOException {
+        int sentBytes=0;
+        sentBytes += writeString(TABLE_CORNER);
+        for (int i=0; i<maskAnalize.length; i++) {
+        	sentBytes += writeString(horizontal, maskAnalize[i].length);
+            sentBytes += writeString(TABLE_CORNER);
+        }
+        sentBytes += writeString(NL);
+
+		return sentBytes;
+	}
+	
+	private int writeString(byte[] buffer) throws IOException {
+        int sentBytes=0;
+        int mark;
+		if (dataBuffer.remaining() < buffer.length){
+			directFlush();
+		}
+        mark=dataBuffer.position();
+        dataBuffer.put(buffer);
+        sentBytes+=dataBuffer.position()-mark;
+		
+		return sentBytes;
+	}
+	
+	private int writeString(CharBuffer buffer, int lenght) throws IOException {
+		if (lenght <= 0) return 0;
+        int sentBytes=0;
+        int mark;
+        buffer.clear();
+        buffer.limit(lenght);
+		if (dataBuffer.remaining() < buffer.limit()){
+			directFlush();
+		}
+        mark=dataBuffer.position();
+		dataBuffer.put(encoder.encode(buffer));
+        sentBytes+=dataBuffer.position()-mark;
+		
+		return sentBytes;
+	}
+	
+	/**
+	 * Writes record as 'write' function, but likewise can better format the rows.
+	 * 
+	 * @param record
+	 * @throws IOException 
+	 */
+	public int write(DataRecord record) throws IOException {
+		int size;
+		if (dataRecords != null) {
+			dataRecords.add(record.duplicate());
+			if (dataRecords.size() < MAX_COUNT_ANALYZED_COUNT) {
+				return 0;
+			}
+			analyzeRows(dataRecords, header);
+			size = header ? writeHeader() : 0;
+			for (DataRecord dataRecord : dataRecords) {
+				size += writeRecord(dataRecord);
+			}
+			dataRecords = null;
+			return size;
+		}
+		size = writeRecord(record);
+		if (leftBytes > 0) {
+			size += leftBytes;
+			leftBytes = 0;
+		}
+		return size;
+	}
+	
+	private void analyzeRows(List<DataRecord> dataRecords, boolean header) {
+		int lenght;
+		int max = 0;
+		for (DataRecord dataRecord : dataRecords) {
+			for (int i=0; i<maskAnalize.length; i++) {
+				lenght = dataRecord.getField(maskAnalize[i].index).getValue().toString().length(); //getSizeSerialized()
+				maskAnalize[i].length = maskAnalize[i].length < lenght ? lenght : maskAnalize[i].length;
+			}
+		}
+		if (header) {
+			DataFieldMetadata[] fMetadata = metadata.getFields();
+			for (int i=0; i<maskAnalize.length; i++) {
+				lenght = fMetadata[maskAnalize[i].index].getName().length();
+				maskAnalize[i].length = maskAnalize[i].length < lenght ? lenght : maskAnalize[i].length;
+			}
+		}
+		for (int i=0; i<maskAnalize.length; i++) {
+			maskAnalize[i].length += PADDING_SPACE;
+			rowSize += maskAnalize[i].length;
+		}
+		rowSize++;
+		
+		for (DataFieldParams dataFieldParams : maskAnalize) {
+			max = max > dataFieldParams.length ? max : dataFieldParams.length;
+		}
+		StringBuilder sb = new StringBuilder();
+		StringBuilder sb2 = new StringBuilder();
+		for (int i = 0; i < max; i++) {
+			sb.append(' ');
+			sb2.append('-');
+		}
+		blank = CharBuffer.wrap(sb.toString());
+		horizontal = CharBuffer.wrap(sb2.toString());
+	}
+	
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#flush()
+	 */
+	public void flush() throws IOException {
+		if (dataRecords != null) {
+			analyzeRows(dataRecords, header);
+			leftBytes = header ? writeHeader() : 0;
+			for (DataRecord dataRecord : dataRecords) {
+				leftBytes += writeRecord(dataRecord);
+			}
+			dataRecords = null;
+		}
+		ByteBufferUtils.flush(dataBuffer,writer);
+	}
+	
+	public void eof() throws IOException {
+		flush();
+		leftBytes += writeFooter();
+		directFlush();
+	}
+	
+	private void directFlush() throws IOException {
+		ByteBufferUtils.flush(dataBuffer,writer);
+	}
+
+	public int getLeftBytes() {
+		return leftBytes;
+	}
+	
+	public void setMask(String[] mask) {
+		this.mask = mask;
+	}
+	
+	/**
+	 * Returns name of charset which is used by this formatter
+	 * @return Name of charset or null if none was specified
+	 */
+	public String getCharsetName() {
+		return(this.charSet);
+	}
+
+	public void setHeader(boolean header) {
+		this.header = header;
+	}
+	
+	/**
+	 * Private class for storing data field name, its andex and lenght in mask
+	 */
+	class DataFieldParams {
+		
+		String name;
+		int index;
+		int length;
+		
+		DataFieldParams(String name,int index, int length){
+			this.name = name;
+			this.index = index;
+			this.length = length;
+		}
+	}
+
+}
+

Added: trunk/cloveretl.engine/src/org/jetel/main/DataComponentViewer.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/main/DataComponentViewer.java	2007-01-31 13:08:43 UTC (rev 2413)
+++ trunk/cloveretl.engine/src/org/jetel/main/DataComponentViewer.java	2007-01-31 13:16:10 UTC (rev 2414)
@@ -0,0 +1,500 @@
+/*
+ *  jETeL/Clover - Java based ETL application framework.
+ *  Copyright (C) 2002-03  David Pavlis
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License as published by the Free Software Foundation; either
+ *    version 2.1 of the License, or (at your option) any later version.
+ *    
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+ *    Lesser General Public License for more details.
+ *    
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ */
+package org.jetel.main;
+
+import java.io.BufferedInputStream;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
+import java.util.StringTokenizer;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.jetel.component.DataWriter;
+import org.jetel.component.ExtFilter;
+import org.jetel.component.StructureWriter;
+import org.jetel.component.TextWriter;
+import org.jetel.data.Defaults;
+import org.jetel.exception.ConfigurationStatus;
+import org.jetel.exception.GraphConfigurationException;
+import org.jetel.exception.XMLConfigurationException;
+import org.jetel.graph.Edge;
+import org.jetel.graph.Node;
+import org.jetel.graph.Phase;
+import org.jetel.graph.Result;
+import org.jetel.graph.TransformationGraph;
+import org.jetel.graph.TransformationGraphXMLReaderWriter;
+import org.jetel.metadata.DataRecordMetadata;
+import org.jetel.plugin.Plugins;
+import org.jetel.util.FileUtils;
+import org.jetel.util.JetelVersion;
+import org.jetel.util.crypto.Enigma;
+
+/**
+ *  class for executing transformations described in XML layout file<br><br>
+ *  The graph layout is read from specified XML file and the whole transformation is executed.<br>
+ *  <tt><pre>
+ *  Program parameters:
+ *  <table>
+ *  <tr><td nowrap>-v</td><td>be verbose - print even graph layout</td></tr>
+ *  <tr><td nowrap>-P:<i>properyName</i>=<i>propertyValue</i></td><td>add definition of property to global graph's property list</td></tr>
+ *  <tr><td nowrap>-cfg <i>filename</i></td><td>load definitions of properties from specified file</td></tr>
+ *  <tr><td nowrap>-tracking <i>seconds</i></td><td>how frequently output the processing status</td></tr>
+ *  <tr><td nowrap>-info</td><td>print info about Clover library version</td></tr>
+ *  <tr><td nowrap>-plugins <i>filename</i></td><td>directory where to look for plugins/components</td></tr>
+ *  <tr><td nowrap>-pass <i>password</i></td><td>password for decrypting of hidden connections passwords</td></tr>
+ *  <tr><td nowrap>-stdin</td><td>load graph layout from STDIN</td></tr>
+ *  <tr><td nowrap><b>filename</b></td><td>filename or URL of the file (even remote) containing graph's layout in XML (this must be the last parameter passed)</td></tr>
+ *  </table>
+ *  </pre></tt>
+ * @author      dpavlis
+ * @since	2003/09/09
+ * @revision    $Revision: 2080 $
+ */
+public class DataComponentViewer {
+    private static Log logger = LogFactory.getLog(DataComponentViewer.class);
+
+    //TODO change run graph version
+	private final static String RUN_GRAPH_VERSION = "2.0";
+	public final static String VERBOSE_SWITCH = "-v";
+	public final static String PROPERTY_FILE_SWITCH = "-cfg";
+	public final static String PROPERTY_DEFINITION_SWITCH = "-P:";
+	public final static String INFO_SWITCH = "-info";
+    public final static String PLUGINS_SWITCH = "-plugins";
+    public final static String PASSWORD_SWITCH = "-pass";
+    public final static String VIEW_MODE = "-mode";
+    public final static String DELIMITER = "-delimiter";
+    public final static String OUT_FILE = "-file";
+	public final static String FILTER_EXPRESSION = "-expFilter";
+	public final static String RECORD_FROM = "-recFrom";
+	public final static String RECORD_COUNT = "-recCount";
+	public final static String FIELDS = "-fields";
+
+	
+    /**
+     * Clover.ETL engine initialization. Should be called only once.
+     * @param pluginsRootDirectory directory path, where plugins specification is located 
+     *        (can be null, then is used constant from Defaults.DEFAULT_PLUGINS_DIRECTORY)
+     * @param password password for encrypting some hidden part of graphs
+     *        <br>i.e. connections passwordss can be encrypted
+     */
+    public static void initEngine(String pluginsRootDirectory, String password) {
+        
+        //init password decryptor
+        if(password != null) {
+            Enigma.getInstance().init(password);
+        }
+        
+        //init framework constants
+        Defaults.init();
+
+        //init clover plugins system
+        Plugins.init(pluginsRootDirectory);
+      
+    }
+    
+    
+    /**
+     * Instantiates transformation graph from a given input stream and presets a given properties.
+     * @param inStream
+     * @param properties
+     * @return
+     * @throws XMLConfigurationException
+     * @throws GraphConfigurationException
+     */
+    public static TransformationGraph loadGraph(InputStream inStream, Properties properties) throws XMLConfigurationException, GraphConfigurationException {
+        TransformationGraph graph = new TransformationGraph();
+        TransformationGraphXMLReaderWriter graphReader = new TransformationGraphXMLReaderWriter(graph);
+        if(properties != null) {
+            graph.loadGraphProperties(properties);
+        }
+
+        graphReader.read(inStream);
+        
+        if(!graph.init()) {
+            throw new GraphConfigurationException("Graph initialization failed.");
+        }
+        
+        return graph;
+    }
+    
+	/**
+	 *  Description of the Method
+	 *
+	 * @param  args  Description of the Parameter
+	 */
+	public static void main(String args[]) {
+		boolean verbose = false;
+		Properties properties = new Properties();
+		String pluginsRootDirectory = null;
+        String password = null;
+        Mode viewMode = Mode.TEXT;
+        String delimiter = null;
+        String fileUrl = null;
+        String filterExpression = null;
+        long recordFrom = -1;
+        long recordCount = -1;
+        String fields = null;
+		
+		ExtFilter extFilter = null;
+        
+		System.out.println("***  CloverETL graph component tester ver "+RUN_GRAPH_VERSION+", (c) 2002-06 D.Pavlis, released under GNU Lesser General Public License  ***");
+		System.out.println(" Running with framework version: "+JetelVersion.MAJOR_VERSION+"."+JetelVersion.MINOR_VERSION+" build#"+JetelVersion.BUILD_NUMBER+" compiled "+JetelVersion.LIBRARY_BUILD_DATETIME);
+		System.out.println();
+        
+		if (args.length < 1) {
+			printHelp();
+			System.exit(-1);
+		}
+        
+		// process command line arguments
+		for (int i = 0; i < args.length; i++) {
+			if (args[i].startsWith(VERBOSE_SWITCH)) {
+				verbose = true;
+			}else if (args[i].startsWith(PROPERTY_FILE_SWITCH)){
+				i++;
+				try {
+					InputStream inStream = new BufferedInputStream(new FileInputStream(args[i]));
+					properties.load(inStream);
+				} catch (IOException ex) {
+					logger.error(ex.getMessage(), ex);
+					System.exit(-1);
+				}
+			}else if (args[i].startsWith(PROPERTY_DEFINITION_SWITCH)){
+			   	//String[] nameValue=args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,"").split("=");
+				//properties.setProperty(nameValue[0],nameValue[1]);
+		    	String tmp =  args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,"");
+        	    properties.setProperty(tmp.substring(0,tmp.indexOf("=")),tmp.substring(tmp.indexOf("=") +1)); 
+			}else if (args[i].startsWith(INFO_SWITCH)){
+			    printInfo();
+			    System.exit(0);
+            }else if (args[i].startsWith(PLUGINS_SWITCH)){
+                i++;
+                pluginsRootDirectory = args[i];
+            }else if (args[i].startsWith(PASSWORD_SWITCH)){
+                i++;
+                password = args[i]; 
+            }else if (args[i].startsWith(VIEW_MODE)){
+                i++;
+                viewMode = Mode.valueModeOf(args[i]);
+                if (viewMode == null) {
+    				System.err.println("Unknown mode option: "+args[i]);
+    				System.exit(-1);
+                }
+            }else if (args[i].startsWith(DELIMITER)){
+            	delimiter = args[i].substring(args[i].indexOf("=") + 1);
+            }else if (args[i].startsWith(OUT_FILE)){
+            	fileUrl = args[i].substring(args[i].indexOf("=") + 1);
+            }else if (args[i].startsWith(FILTER_EXPRESSION)){
+            	filterExpression = args[i].substring(args[i].indexOf("=") + 1);
+            }else if (args[i].startsWith(RECORD_FROM)){
+            	recordFrom = Long.parseLong(args[i].substring(args[i].indexOf("=") + 1));
+            }else if (args[i].startsWith(RECORD_COUNT)){
+            	recordCount = Long.parseLong(args[i].substring(args[i].indexOf("=") + 1));
+            }else if (args[i].startsWith(FIELDS)){
+            	fields = args[i].substring(args[i].indexOf("=") + 1);
+            }else if (args[i].startsWith("-")) {
+				System.err.println("Unknown option: "+args[i]);
+				System.exit(-1);
+			}
+		}
+		
+        //engine initialization - should be called only once
+        DataComponentViewer.initEngine(pluginsRootDirectory, password);
+        
+		//prapere input stream with XML graph definition
+        InputStream in = null;
+        System.out.println("Graph definition file: " + args[args.length - 2]);
+        URL fileURL = null;
+		try {
+			fileURL = FileUtils.getFileURL(null, args[args.length - 2]);
+		} catch (MalformedURLException e1) {
+            System.err.println("Error - graph definition file can't be read.");
+            System.exit(-1);
+		}
+        if(fileURL == null) {
+            System.err.println("Error - graph definition file can't be read.");
+            System.exit(-1);
+        }
+        try{
+            in=fileURL.openStream();
+        } catch (IOException e) {
+            System.err.println("Error - graph definition file can't be read: " + e.getMessage());
+            System.exit(-1);
+        }
+        
+        System.out.println("Component id: " + args[args.length - 1]);
+        String componentID = args[args.length - 1];
+        int pos;
+        int port = 0;
+        if ((pos = componentID.indexOf(':')) != -1) {
+        	port = Integer.parseInt(componentID.substring(pos+1));
+        	componentID = componentID.substring(0, pos);
+        }
+        
+        //loading graph from the input stream
+        TransformationGraph graph = null;
+        try {
+            graph = DataComponentViewer.loadGraph(in, properties);
+
+            if (verbose) {
+                //this can be called only after graph.init()
+                graph.dumpGraphConfiguration();
+            }
+        }catch(XMLConfigurationException ex){
+            logger.error("Error in reading graph from XML !", ex);
+            if (verbose) {
+                ex.printStackTrace(System.err);
+            }
+            System.exit(-1);
+        }catch(GraphConfigurationException ex){
+            logger.error("Error - graph's configuration invalid !", ex);
+            if (verbose) {
+                ex.printStackTrace(System.err);
+            }
+            System.exit(-1);
+        } catch (RuntimeException ex) {
+            logger.error("Error during graph initialization !", ex);
+            if (verbose) {
+                ex.printStackTrace(System.err);
+            }
+            System.exit(-1);
+        }
+        
+        //check graph elements configuration
+        ConfigurationStatus status = graph.checkConfig(null);
+        status.log();
+        
+		Map map = graph.getNodes();
+		Node node = (Node) map.get(componentID);
+		if (node == null) {
+			//map = graph.getEdges();
+			//Edge edge = (Edge) map.get(componentID);
+			//if (edge == null) {
+				// error
+				System.err.println("Error");
+				return;
+			//}
+		}
+		if (!node.isRoot()) {
+			// not implemented
+			System.err.println("Execution is implemented for root node (has only output ports connected to id)!");
+			return;
+		}
+
+		// create new graph
+	    TransformationGraph viewGraph = new TransformationGraph();
+		Phase _PHASE_1 = new Phase(1);
+
+	    // add writer component
+		DataRecordMetadata dataRecordMetadata = (DataRecordMetadata) node.getOutMetadata().toArray()[port];
+		Edge edge0 = new Edge("EDGE0", dataRecordMetadata);
+		Edge edge1 = null;
+		if (filterExpression != null) {
+			edge1 = new Edge("EDGE1", dataRecordMetadata);
+		}
+		Node writer = getWriter(viewMode, dataRecordMetadata, fileUrl, delimiter, recordFrom, recordCount, fields);
+		
+		// add Edges & Nodes & Phases to graph
+		try {
+			viewGraph.addPhase(_PHASE_1);
+			viewGraph.addEdge(edge0);
+			_PHASE_1.addNode(node);
+			_PHASE_1.addNode(writer);
+			
+			if (filterExpression != null) {
+				viewGraph.addEdge(edge1);
+				extFilter = new ExtFilter("ExtFilter0");
+				extFilter.setFilterExpression(filterExpression);
+				_PHASE_1.addNode(extFilter);
+			}
+		} catch (GraphConfigurationException e) {
+			e.printStackTrace();
+		}
+
+		// assign ports (input & output)
+		node.addOutputPort(0,edge0);
+		if (filterExpression != null) {
+			extFilter.addInputPort(0,edge0);
+			extFilter.addOutputPort(0,edge1);
+			writer.addInputPort(0,edge1); 
+		} else {
+			writer.addInputPort(0,edge0);
+		}
+
+		if(!viewGraph.init()){
+			System.err.println("Graph initialization failed !");
+			return;
+		}
+	    
+		//	start all Nodes (each node is one thread)
+		Result result=Result.N_A;
+		try {
+            result = viewGraph.run();
+		} catch (RuntimeException ex) {
+			System.err.println("Fatal error during graph run !");
+			System.err.println(ex.getCause().getMessage());
+			if (verbose) {
+				ex.printStackTrace();
+			}
+			System.exit(-1);
+		}
+		if (result==Result.FINISHED_OK) {
+			// everything O.K.
+			System.out.println("Execution of graph successful !");
+			System.exit(0);
+		} else {
+			// something FAILED !!
+			System.err.println("Execution of graph failed !");
+			System.exit(result.code());
+		}
+
+	}
+    
+	private static Node getWriter(Mode mode, DataRecordMetadata dataRecordMetadata, String fileUrl, String delimiter, long recordFrom, long recordCount, String fields) {
+		if (mode == null) return null;
+		Node writer = null;
+		String[] aFiealds = fields == null ? null : fields.split(";");
+		
+		if (mode.equals(Mode.HTML)) {
+			StringBuilder maskBuilder = new StringBuilder();
+			if (aFiealds == null) {
+				maskBuilder.append("<tr>");
+				for (int i=0;i<dataRecordMetadata.getNumFields();i++){
+					maskBuilder.append("<td>$");
+					maskBuilder.append(dataRecordMetadata.getField(i).getName());
+					maskBuilder.append("</td>");
+				}
+				maskBuilder.append("</tr>\n");
+			} else if (aFiealds.length > 0) {
+				maskBuilder.append("<tr>");
+				for (String sfield: aFiealds){
+					if (dataRecordMetadata.getField(sfield) == null) {
+						System.err.println("Field name '"+ sfield + "' not found.");
+						System.exit(-1);
+					}
+					maskBuilder.append("<td>$");
+					maskBuilder.append(sfield);
+					maskBuilder.append("</td>");
+				}
+				maskBuilder.append("</tr>\n");
+			} else {
+				System.err.println("No field found.");
+				System.exit(-1);
+			}
+			
+			StructureWriter structureWriter = new StructureWriter("STRUCTURE_WRITER0", fileUrl, null, false, maskBuilder.toString());
+			structureWriter.setRecordFrom(recordFrom);
+			structureWriter.setRecordCount(recordCount);
+			StringBuilder sb = new StringBuilder();
+			
+			sb.append("<table name=\"" + dataRecordMetadata.getName() + "\" border=1>\n");
+			sb.append("<tr>");
+			if (aFiealds == null ) {
+				for (int i=0;i<dataRecordMetadata.getNumFields();i++){
+					sb.append("<th>");
+					sb.append(dataRecordMetadata.getField(i).getName());
+					sb.append("</th>");
+				}
+			} else {
+				for (String sfield: aFiealds){
+					sb.append("<th>");
+					sb.append(dataRecordMetadata.getField(sfield).getName());
+					sb.append("</th>");
+				}
+			}
+			sb.append("</tr>\n");
+			structureWriter.setHeader(sb.toString());
+			
+			sb = new StringBuilder();
+			sb.append("</table>\n");
+			structureWriter.setFooter(sb.toString());
+			
+			writer = structureWriter;
+			
+		} else if (mode.equals(Mode.TEXT)) {
+			DataWriter dataWriter = new DataWriter("DATA_WRITER0", fileUrl, dataRecordMetadata.getLocaleStr(), false);
+			//TODO agata dodelat selekci na fieldy
+			dataWriter.setRecordFrom(recordFrom);
+			dataWriter.setRecordCount(recordCount);
+			if (delimiter != null) dataWriter.setDataDelimiter(delimiter);
+			writer = dataWriter;
+			
+		} else if (mode.equals(Mode.DELIMITER_TEXT)) {
+			TextWriter dataWriter = new TextWriter("TEXT_TABLE_WRITER0", fileUrl, null, false, aFiealds);
+			dataWriter.setRecordFrom(recordFrom);
+			dataWriter.setRecordCount(recordCount);
+			dataWriter.setHeader(true);
+			
+			writer = dataWriter;
+			/*   +--+--+
+				 |  |  |
+			     +--+--+
+			*/
+		}
+		return writer;
+	}
+	
+	private static void printHelp() {
+		System.out.println("Usage: runGraph [-(v|cfg|P:|info|plugins|pass)] <graph definition file> <component id>");
+		System.out.println("Options:");
+		System.out.println("-v\t\t\tbe verbose - print even graph layout");
+		System.out.println("-P:<key>=<value>\tadd definition of property to global graph's property list");
+		System.out.println("-cfg <filename>\t\tload definitions of properties from specified file");
+		System.out.println("-info\t\t\tprint info about Clover library version");
+        System.out.println("-plugins\t\tdirectory where to look for plugins/components");
+        System.out.println("-pass\t\tpassword for decrypting of hidden connections passwords");
+        System.out.println();
+        System.out.println("Note: <graph definition file> can be either local filename or URL of local/remote file");
+	}
+
+	private static void printInfo(){
+	    System.out.println("CloverETL library version "+JetelVersion.MAJOR_VERSION+"."+JetelVersion.MINOR_VERSION+" build#"+JetelVersion.BUILD_NUMBER+" compiled "+JetelVersion.LIBRARY_BUILD_DATETIME);
+	}
+	
+	public enum Mode {
+	    
+	    TEXT,
+	    HTML,
+	    DELIMITER_TEXT;
+
+	    public static Mode valueModeOf(String value){
+	    	if (value.equalsIgnoreCase(TEXT.name())) {
+	    		return TEXT;
+	    	}
+	    	if (value.equalsIgnoreCase(HTML.name())) {
+	    		return HTML;
+	    	}
+	    	if (value.equalsIgnoreCase(DELIMITER_TEXT.name())) {
+	    		return DELIMITER_TEXT;
+	    	}
+	    	return null;
+	    }
+	    
+	}
+	
+}
+



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 14:48:01 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 14:48:01 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2415 -
	trunk/cloveretl.component/src/org/jetel/component
Message-ID: <200701311348.l0VDm1Cr019834@sheep.berlios.de>

Author: agad
Date: 2007-01-31 14:48:01 +0100 (Wed, 31 Jan 2007)
New Revision: 2415

Modified:
   trunk/cloveretl.component/src/org/jetel/component/DataReader.java
Log:
UPDATE:DelimitedDataReader;trim attribute is now of type Boolean

Modified: trunk/cloveretl.component/src/org/jetel/component/DataReader.java
===================================================================
--- trunk/cloveretl.component/src/org/jetel/component/DataReader.java	2007-01-31 13:16:10 UTC (rev 2414)
+++ trunk/cloveretl.component/src/org/jetel/component/DataReader.java	2007-01-31 13:48:01 UTC (rev 2415)
@@ -269,7 +269,9 @@
 			xmlElement.setAttribute(XML_CHARSET_ATTRIBUTE, charSet);
 		}
 		xmlElement.setAttribute(XML_DATAPOLICY_ATTRIBUTE, policyType.toString());
-		xmlElement.setAttribute(XML_TRIM_ATTRIBUTE, parser.getTrim());
+		if (parser.getTrim() != null) {
+			xmlElement.setAttribute(XML_TRIM_ATTRIBUTE, String.valueOf(parser.getTrim()));
+		}		
 		
 	}
 
@@ -300,7 +302,7 @@
 				aDataReader.parser.setSkipLeadingBlanks(xattribs.getBoolean(XML_SKIPLEADINGBLANKS_ATTRIBUTE));
 			}
 			if (xattribs.exists(XML_TRIM_ATTRIBUTE)){
-				aDataReader.parser.setTrim(xattribs.getString(XML_TRIM_ATTRIBUTE));
+				aDataReader.parser.setTrim(xattribs.getBoolean(XML_TRIM_ATTRIBUTE));
 			}
 			if (xattribs.exists(XML_SKIPFIRSTLINE_ATTRIBUTE)){
 				aDataReader.setSkipFirstLine(xattribs.getBoolean(XML_SKIPFIRSTLINE_ATTRIBUTE));



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 14:50:32 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 14:50:32 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2416 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701311350.l0VDoWFP020032@sheep.berlios.de>

Author: agad
Date: 2007-01-31 14:50:31 +0100 (Wed, 31 Jan 2007)
New Revision: 2416

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java
Log:
UPDATE:DelimitedDataReader;trim attribute is now of type Boolean

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java	2007-01-31 13:48:01 UTC (rev 2415)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java	2007-01-31 13:50:31 UTC (rev 2416)
@@ -94,7 +94,7 @@
 	
 	private boolean treatMultipleDelimitersAsOne = false;
 	
-	private BoolExt trim = BoolExt.NOT_SET; 
+	private Boolean trim = null; 
 	
 	public DataParser() {
 		decoder = Charset.forName(Defaults.DataParser.DEFAULT_CHARSET_DECODER).newDecoder();
@@ -264,11 +264,14 @@
 		int mark;
 		long size = 0;
 		boolean inQuote;
-		boolean skipBlanks = skipLeadingBlanks;
+		boolean skipBlanks;
 		
 		recordCounter++;
 		recordBuffer.clear();
 		for (fieldCounter = 0; fieldCounter < metadata.getNumFields(); fieldCounter++) {
+			skipBlanks = skipLeadingBlanks
+					|| trim == Boolean.TRUE
+					|| (trim == null && metadata.getField(fieldCounter).isTrim());
 			if (metadata.getField(fieldCounter).isDelimited()) { //delimited data field
 				// field
 				// read data till we reach field delimiter, record delimiter,
@@ -285,6 +288,11 @@
 						//delimiter update
 						delimiterSearcher.update((char) character);
 						
+						//skip leading blanks
+						if (skipBlanks) 
+							if(Character.isWhitespace(character)) continue; 
+							else skipBlanks = false;
+
 						//quotedStrings
 						if (quotedStrings 
 								&& metadata.getField(fieldCounter).getType() == DataFieldMetadata.STRING_FIELD) {
@@ -309,16 +317,18 @@
 								return parsingErrorFound("Unexpected record delimiter", record, fieldCounter);
 							}
 						}
-						if (trim == BoolExt.FALSE
-								|| (trim == BoolExt.NOT_SET && !metadata
-										.getField(fieldCounter).isTrim())
-								|| !Character.isWhitespace(character)) {
-							fieldBuffer.append((char) character);
-						}						
+						//fieldDelimiter update
+						fieldBuffer.append((char) character);
+
 						//test field delimiter
 						if (!inQuote) {
 							if(delimiterSearcher.isPattern(fieldCounter)) {
-								fieldBuffer.setLength(fieldBuffer.length() - delimiterSearcher.getMatchLength());
+									fieldBuffer.setLength(fieldBuffer.length()
+										- delimiterSearcher.getMatchLength());
+									if ((trim == Boolean.TRUE || (trim == null 
+											&& metadata.getField(fieldCounter).isTrim()))) {
+										StringUtils.trimTrailing(fieldBuffer);
+									}
 								if(treatMultipleDelimitersAsOne)
 									while(followFieldDelimiter(fieldCounter));
 								break;
@@ -329,8 +339,8 @@
 					throw new RuntimeException(getErrorMessage(ex.getMessage(),	null, fieldCounter));
 				}
 			} else { //fixlen data field
+				mark = 0;
 				fieldBuffer.setLength(0);
-				mark = 0;
 				try {
 					for(int i = 0; i < fieldLengths[fieldCounter]; i++) {
 						//end of file
@@ -339,24 +349,26 @@
 						}
 
 						//skip leading blanks
-						if(skipBlanks) 
+						if (skipBlanks) 
 							if(Character.isWhitespace(character)) continue; 
 							else skipBlanks = false;
 
-						if (trim == BoolExt.FALSE
-								|| (trim == BoolExt.NOT_SET && !metadata
-										.getField(fieldCounter).isTrim())
-								|| !Character.isWhitespace(character)) {
-							fieldBuffer.append((char) character);
-						}						
+						//keep track of trailing blanks
+						if(!Character.isWhitespace(character)) {
+							mark = i;
+						} 
+
+						fieldBuffer.append((char) character);
 					}
 					if(fieldBuffer.length() > 0) {
-						fieldBuffer.setLength(fieldBuffer.length() - (fieldLengths[fieldCounter] - mark - 1));
+						fieldBuffer.setLength(fieldBuffer.length() - 
+								(fieldLengths[fieldCounter] - mark - 1));
 					}
 				} catch (Exception ex) {
 					throw new RuntimeException(getErrorMessage(ex.getMessage(),	null, fieldCounter));
 				}
 			}
+
 			// did we have EOF situation ?
 			if (character == -1) {
 				try {
@@ -711,24 +723,12 @@
         return null;
     }
 
-	public String getTrim() {
-		return trim.toString();
+	public Boolean getTrim() {
+		return trim;
 	}
 
-	public void setTrim(String trim) {
-		switch (trim.charAt(0)) {
-		case 't':
-		case 'T':
-			this.trim = BoolExt.TRUE;
-			break;
-		case 'f':
-		case 'F':
-			this.trim = BoolExt.FALSE;
-			break;
-		default:
-			this.trim = BoolExt.NOT_SET;
-			break;
-		}
+	public void setTrim(Boolean trim) {
+		this.trim = trim;
 	}
 }
 /*



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 14:51:18 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 14:51:18 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2417 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701311351.l0VDpIfO020075@sheep.berlios.de>

Author: agad
Date: 2007-01-31 14:51:16 +0100 (Wed, 31 Jan 2007)
New Revision: 2417

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
Log:
UPDATE:better error message

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-31 13:50:31 UTC (rev 2416)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-31 13:51:16 UTC (rev 2417)
@@ -462,11 +462,11 @@
 			if(exceptionHandler != null ) {  //use handler only if configured
                 exceptionHandler.populateHandler(getErrorMessage(bdfe
 						.getMessage(), data, recordCounter, fieldNum), record,
-						-1, fieldNum, "\"" + StringUtils.specCharToString(strData) + "\"", bdfe);
+						-1, fieldNum, strData, bdfe);
 			} else {
                 bdfe.setRecordNumber(recordCounter);
                 bdfe.setFieldNumber(fieldNum);
-                bdfe.setOffendingValue("\"" + StringUtils.specCharToString(strData) + "\"");
+                bdfe.setOffendingValue(strData);
                 throw bdfe;
 			}
 		} catch (Exception ex) {



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 14:53:21 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 14:53:21 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2418 -
	trunk/cloveretl.engine/src/org/jetel/util
Message-ID: <200701311353.l0VDrLTZ020212@sheep.berlios.de>

Author: agad
Date: 2007-01-31 14:53:18 +0100 (Wed, 31 Jan 2007)
New Revision: 2418

Modified:
   trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java
Log:
UPDATE:StringUtils: added methos trimLeading(StringBuilder) and trimTrailing(StringBuilder)

Modified: trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java	2007-01-31 13:51:16 UTC (rev 2417)
+++ trunk/cloveretl.engine/src/org/jetel/util/StringUtils.java	2007-01-31 13:53:18 UTC (rev 2418)
@@ -291,6 +291,17 @@
 		return buf;
 	}
 	
+	public static StringBuilder trimLeading(StringBuilder str){
+		char[] chars = new char[str.length()];
+		str.getChars(0, chars.length, chars, 0);
+		int pos = 0;
+		while (pos < chars.length && Character.isWhitespace(chars[pos])) {
+			pos++;
+		}
+		str.delete(0, pos);
+		return str;
+	}
+	
 	/**
 	 * Modifies buffer scope so that the trailing whitespace is ignored.
 	 * @param buf
@@ -306,6 +317,17 @@
 		return buf;
 	}
 	
+	public static StringBuilder trimTrailing(StringBuilder str){
+		char[] chars = new char[str.length()];
+		str.getChars(0, chars.length, chars, 0);
+		int pos = chars.length - 1;
+		while (pos > 0 && Character.isWhitespace(chars[pos])) {
+			pos--;
+		}
+		str.setLength(pos+1);
+		return str;
+	}
+
 	/**
 	 * Modifies buffer scope so that the leading and trailing whitespace is ignored.
 	 * @param buf



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 15:08:54 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 15:08:54 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2419 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701311408.l0VE8ssx023880@sheep.berlios.de>

Author: agad
Date: 2007-01-31 15:08:49 +0100 (Wed, 31 Jan 2007)
New Revision: 2419

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/FixLenCharDataParser.java
Log:
UPDATE:trim attribute introduced

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/FixLenCharDataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/FixLenCharDataParser.java	2007-01-31 13:53:18 UTC (rev 2418)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/FixLenCharDataParser.java	2007-01-31 14:08:49 UTC (rev 2419)
@@ -62,6 +62,8 @@
 	 */
 	private boolean skipTrailingBlanks = true;
 	
+	private Boolean trim = null;
+	
 	/**
 	 * Specifies whether incomplete records are allowed.
 	 */
@@ -135,10 +137,15 @@
 		if (rawRec == null) {
 			return null;	// end of input
 		}
-
+		boolean skipLBlanks;
+		boolean skipTBlanks;
 		int recStart = rawRec.position();
 		int recEnd = rawRec.limit();
 		for (fieldIdx = 0; fieldIdx < fieldCnt; fieldIdx++) {
+			skipLBlanks = skipLeadingBlanks || trim
+					|| (trim == null && metadata.getField(fieldIdx).isTrim());
+			skipTBlanks = skipTrailingBlanks || trim
+					|| (trim == null && metadata.getField(fieldIdx).isTrim());
 			try {
 				if (recStart + fieldStart[fieldIdx] >= recEnd) {	// there are no data available for this field
 					record.getField(fieldIdx).setToDefaultValue();
@@ -157,10 +164,10 @@
                     break;
 				}
                 
-				if (skipLeadingBlanks) {
+				if (skipLBlanks) {
 					StringUtils.trimLeading(rawRec);
 				}
-				if (skipTrailingBlanks) {
+				if (skipTBlanks) {
 					StringUtils.trimTrailing(rawRec);
 				}
 				record.getField(fieldIdx).fromString(rawRec);
@@ -367,5 +374,13 @@
 		}
 		return skipped;
 	}
+
+	public Boolean getTrim() {
+		return trim;
+	}
+
+	public void setTrim(Boolean trim) {
+		this.trim = trim;
+	}
 		
 }



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 15:40:33 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 15:40:33 +0100
Subject: [Cloveretl-svn-commits] CloverETL repos r2421 -
	trunk/cloveretl.engine/src/org/jetel/data/parser
Message-ID: <200701311440.l0VEeX2q027473@sheep.berlios.de>

Author: agad
Date: 2007-01-31 15:40:33 +0100 (Wed, 31 Jan 2007)
New Revision: 2421

Modified:
   trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java
   trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
Log:
FIX:Data parser: fixed error message

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java	2007-01-31 14:29:53 UTC (rev 2420)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DataParser.java	2007-01-31 14:40:33 UTC (rev 2421)
@@ -499,7 +499,7 @@
 		} catch(BadDataFormatException bdfe) {
             if(exceptionHandler != null) {
                 exceptionHandler.populateHandler(bdfe.getMessage(), record,
-						recordCounter, fieldNum, data, bdfe);
+						recordCounter, fieldNum, data.toString(), bdfe);
             } else {
                 bdfe.setRecordNumber(recordCounter);
                 bdfe.setFieldNumber(fieldNum);

Modified: trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-31 14:29:53 UTC (rev 2420)
+++ trunk/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-31 14:40:33 UTC (rev 2421)
@@ -462,7 +462,7 @@
 			if(exceptionHandler != null ) {  //use handler only if configured
                 exceptionHandler.populateHandler(getErrorMessage(bdfe
 						.getMessage(), data, recordCounter, fieldNum), record,
-						-1, fieldNum, strData, bdfe);
+						-1, fieldNum, strData.toString(), bdfe);
 			} else {
                 bdfe.setRecordNumber(recordCounter);
                 bdfe.setFieldNumber(fieldNum);



From cloveretl-svn-commits at lists.berlios.de  Wed Jan 31 15:31:21 2007
From: cloveretl-svn-commits at lists.berlios.de (cloveretl-svn-commits at lists.berlios.de)
Date: Wed, 31 Jan 2007 14:31:21 -0000
Subject: [Cloveretl-svn-commits] CloverETL repos r2420 - in
 branches/cloveretl.engine.rel-2-1-0:
 cloveretl.component/src/org/jetel/component cloveretl.connection
 cloveretl.connection/src/org/jetel/connection cloveretl.engine/data/in/bad
 cloveretl.engine/docs cloveretl.engine/examples
 cloveretl.engine/examples/data cloveretl.engine/examples/metadata
 cloveretl.engine/src/org/jetel/component
 cloveretl.engine/src/org/jetel/data
 cloveretl.engine/src/org/jetel/data/formatter
 cloveretl.engine/src/org/jetel/data/lookup
 cloveretl.engine/src/org/jetel/data/parser
 cloveretl.engine/src/org/jetel/data/sequence
 cloveretl.engine/src/org/jetel/database
 cloveretl.engine/src/org/jetel/graph
 cloveretl.engine/src/org/jetel/graph/runtime
 cloveretl.engine/src/org/jetel/interpreter
 cloveretl.engine/src/org/jetel/main cloveretl.engine/src/org/jetel/metadata
 cloveretl.engine/src/org/jetel/plugin cloveretl.engine/src/org/jetel/util
 cloveretl.engine/test/org/jetel/data
 cloveretl.engine/test/org/jetel/data/primitive cloveretl!
 .engine/test/org/jetel/exception cloveretl.engine/test/org/jetel/graph
 cloveretl.engine/test/org/jetel/interpreter
 cloveretl.engine/test/org/jetel/metadata
 cloveretl.engine/test/org/jetel/util
 cloveretl.sequence/src/org/jetel/sequence
Message-ID: <200701311429.l0VETwk5025551@sheep.berlios.de>

Author: otasanek
Date: 2007-01-31 15:29:53 +0100 (Wed, 31 Jan 2007)
New Revision: 2420

Added:
   branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/test/
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/customizedTransformExample.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/data/orders2.dat
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/data/orders2.xls
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMXMBean.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/graph/EdgeTest.java
Removed:
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/OneRecordPerLinePolicyTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/SQLDataParserTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_SQLDataParser_Test.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/graph/DirectEdgeTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/ClassBuilderTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CodeParserTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CreateJavaObjectTest.java
Modified:
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/AproxMergeJoin.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/CloverDataWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBExecute.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBInputTable.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBJoin.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBOutputTable.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataGenerator.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataIntersection.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataReader.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DelimitedDataWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Denormalizer.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/FixLenDataReader.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/FixLenDataWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/HashJoin.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/JmsReader.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/JmsWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/LookupJoin.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/MergeJoin.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/MultiLevelReader.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Normalizer.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Partition.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Reformat.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/SequenceChecker.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/StructureWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Trash.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/XLSReader.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/XLSWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/src/org/jetel/connection/DBConnection.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/src/org/jetel/connection/JmsConnection.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/data/in/bad/FL28_NL_nulls.txt
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/docs/BUGS.txt
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/docs/HISTORY.txt
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphAproximativeJoin.grf
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphCloverData.grf
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphDBLoad5.grf
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphExtFilter.grf
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphIntersectData.grf
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphJoinMergeInline.grf
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/metadata/employees.fmt
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/component/RecordTransformFactory.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/ByteDataField.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/DataRecord.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/DateDataField.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/IntegerDataField.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/NumericDataField.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/CloverDataFormatter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/JExcelXLSDataFormatter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/XLSDataFormatter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/XLSFormatter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/lookup/LookupTable.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/CloverDataParser.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/JExcelXLSDataParser.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/XLSDataParser.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/XLSParser.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/sequence/Sequence.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/database/IConnection.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/DirectEdge.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/Node.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/Phase.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/TransformationGraph.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/TransformationGraphXMLReaderWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/NodeTrackingDetail.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/TrackingDetail.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/WatchDog.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/interpreter/TransformLangParser.jjt
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/main/runGraph.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataFieldMetadata.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadata.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadataXMLReaderWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/MetadataFactory.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/plugin/PluginClassLoader.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/plugin/PluginDescriptor.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/BitArray.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/Compiler.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/DynamicJavaCode.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/FileUtils.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/MultiFileReader.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/MultiFileWriter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/StringUtils.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/DataTestSuite.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/DateDataFieldTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/IntegerDataFieldTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/NumericDataFieldTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/primitive/DecimalNumericTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_DelimitedDataParserNIO_Test.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_FixLenDataParser2_Test.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/ExceptionTestSuite.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/interpreter/TestInterpreter.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/metadata/DataRecordMetadataTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/metadata/DataRecordMetadataXMLReaderWriterTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CompileTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/FifoTest.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/UtilTestSuite.java
   branches/cloveretl.engine.rel-2-1-0/cloveretl.sequence/src/org/jetel/sequence/SimpleSequence.java
Log:
SVN: merge for 2.1.0.

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/AproxMergeJoin.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/AproxMergeJoin.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/AproxMergeJoin.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -573,7 +573,7 @@
 		} else {
 			transformation = RecordTransformFactory.createTransform(
 					transformSource, transformClassName, this, inMetadata,
-					outMetadata, transformationParameters);
+					outMetadata, transformationParameters, this.getClass().getClassLoader());
 		}
 		outMetadata = new DataRecordMetadata[] { getOutputPort(SUSPICIOUS_OUT).getMetadata() };
 		if (transformationForSuspicious != null) {
@@ -582,7 +582,7 @@
 		} else {
 			transformationForSuspicious = RecordTransformFactory.createTransform(
 					transformSourceForSuspicious, transformClassNameForSuspicious, 
-					this, inMetadata, outMetadata, transformationParametersForSuspicious);
+					this, inMetadata, outMetadata, transformationParametersForSuspicious, this.getClass().getClassLoader());
 		}
 		// initializing join parameters
 		joinKeys = new String[joinParameters.length];

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/CloverDataWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/CloverDataWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/CloverDataWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -191,6 +191,16 @@
         return runIt ? Result.FINISHED_OK : Result.ABORTED;
 	}
 	
+	@Override
+	public synchronized void free() {
+		super.free();
+		formatter.close();
+		try {
+			out.close();
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+	}
 	/* (non-Javadoc)
 	 * @see org.jetel.graph.GraphElement#checkConfig()
 	 */

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBExecute.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBExecute.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBExecute.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -190,9 +190,11 @@
                 throw new ComponentNotReadyException("Connection with ID: " + dbConnectionName + " isn't instance of the DBConnection class.");
             }
             dbConnection = (DBConnection) conn;
-            dbConnection.init();
 	    }
-        if (dbSQL==null){
+		if (!dbConnection.isInitialized()) {
+			dbConnection.init();
+		}        
+		if (dbSQL==null){
             String delimiter = sqlStatementDelimiter !=null ? sqlStatementDelimiter : DEFAULT_SQL_STATEMENT_DELIMITER;
             dbSQL=sqlQuery.split(delimiter);
         }
@@ -347,7 +349,7 @@
                 query = xattribs.getString(XML_DBSQL_ATTRIBUTE);
             } else if (xattribs.exists(XML_URL_ATTRIBUTE)) {
                 query = xattribs
-                        .resolveReferences(FileUtils.getStringFromURL(xattribs
+                        .resolveReferences(FileUtils.getStringFromURL(graph.getProjectURL(), xattribs
                                 .getString(XML_URL_ATTRIBUTE)));
             } else if (xattribs.exists(XML_SQLCODE_ELEMENT)) {
                 query = xattribs.getString(XML_SQLCODE_ELEMENT);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBInputTable.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBInputTable.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBInputTable.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -101,7 +101,7 @@
  * @see         org.jetel.database.AnalyzeDB
  */
 public class DBInputTable extends Node {
-	private static final String XML_DATAPOLICY_ATTRIBUTE = "DataPolicy";
+	private static final String XML_DATAPOLICY_ATTRIBUTE = "dataPolicy";
 	private static final String XML_DBCONNECTION_ATTRIBUTE = "dbConnection";
 	private static final String XML_SQLQUERY_ATTRIBUTE = "sqlQuery";
 	private static final String XML_URL_ATTRIBUTE = "url";
@@ -230,7 +230,7 @@
                 String query = null;
                 if (xattribs.exists(XML_URL_ATTRIBUTE))
                 {
-                   query=xattribs.resolveReferences(FileUtils.getStringFromURL(xattribs.getString(XML_URL_ATTRIBUTE)));
+                   query=xattribs.resolveReferences(FileUtils.getStringFromURL(graph.getProjectURL(), xattribs.getString(XML_URL_ATTRIBUTE)));
                 }else if (xattribs.exists(XML_SQLQUERY_ATTRIBUTE)){
                     query = xattribs.getString(XML_SQLQUERY_ATTRIBUTE);
                 }else if (xattribs.exists(XML_SQLCODE_ELEMENT)){

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBJoin.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBJoin.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBJoin.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -306,7 +306,7 @@
 			if (transformSource != null || transformClassName != null) {
 				transformation = RecordTransformFactory.createTransform(
 						transformSource, transformClassName, this, inMetadata,
-						outMetadata, transformationParameters);
+						outMetadata, transformationParameters, this.getClass().getClassLoader());
 			}			
 		} catch (Exception e) {
 			throw new ComponentNotReadyException(this, e);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBOutputTable.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBOutputTable.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DBOutputTable.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -609,7 +609,7 @@
 			}else if(xattribs.exists(XML_URL_ATTRIBUTE)){
 				outputTable = new DBOutputTable(xattribs.getString(XML_ID_ATTRIBUTE),
 						xattribs.getString(XML_DBCONNECTION_ATTRIBUTE),
-						xattribs.resolveReferences(FileUtils.getStringFromURL(xattribs.getString(XML_URL_ATTRIBUTE))),	
+						xattribs.resolveReferences(FileUtils.getStringFromURL(graph.getProjectURL(), xattribs.getString(XML_URL_ATTRIBUTE))),	
 						null);
 			    
 			}else if(xattribs.exists(XML_DBTABLE_ATTRIBUTE)){

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataGenerator.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataGenerator.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataGenerator.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -149,7 +149,7 @@
 	private final int MOVE = 3;
 
 	private String pattern;
-	private DataRecord patternRecord;
+	private DataRecord patternRecord = null;
 	private Parser parser;
 	private DataRecordMetadata metadata;
 	private DataRecord record;
@@ -300,8 +300,12 @@
         		sequenceIndex = StringUtils.findString(metadata.getField(i).getName(), 
         				sequenceFields);
         		if (sequenceIndex > -1){//field found among sequence fields
-            		cutMetadata.delField(metadata.getField(i).getName());
-            		if (sequenceIDs[sequenceIndex] == null){//not given sequence id
+					if (cutMetadata.getNumFields() > 1) {
+						cutMetadata.delField(metadata.getField(i).getName());
+					}else{
+						cutMetadata = null;
+					}
+					if (sequenceIDs[sequenceIndex] == null){//not given sequence id
             			//find any sequence in graph
             			specialValue[i][0]  = getGraph().getSequences().hasNext() ? (String)getGraph().getSequences().next() : null;
 						if (specialValue[i][0] == null) {
@@ -320,30 +324,34 @@
 		}else{
 			random = new Random();
 		}
-		//prepare approperiate data parser
-        switch (metadata.getRecType()) {
-		case DataRecordMetadata.DELIMITED_RECORD:
-			parser = new DelimitedDataParser(Defaults.DataParser.DEFAULT_CHARSET_DECODER);
-			break;
-		case DataRecordMetadata.FIXEDLEN_RECORD:
-			parser = new FixLenCharDataParser(Defaults.DataParser.DEFAULT_CHARSET_DECODER);
-			break;
-		default:
-			parser = new DataParser(Defaults.DataParser.DEFAULT_CHARSET_DECODER);
-			break;
-		}
-		parser.init(cutMetadata);
-		try {
-			parser.setDataSource(new ByteArrayInputStream(pattern.getBytes(
-					Defaults.DataParser.DEFAULT_CHARSET_DECODER)));
-		} catch (UnsupportedEncodingException e1) {
-		}
-		try {
-			patternRecord = parser.getNext();
-		} catch (JetelException e) {
-			throw new ComponentNotReadyException(this,e);
-		}
-		parser.close();
+		if (cutMetadata != null) {
+			//prepare approperiate data parser
+			switch (metadata.getRecType()) {
+			case DataRecordMetadata.DELIMITED_RECORD:
+				parser = new DelimitedDataParser(
+						Defaults.DataParser.DEFAULT_CHARSET_DECODER);
+				break;
+			case DataRecordMetadata.FIXEDLEN_RECORD:
+				parser = new FixLenCharDataParser(
+						Defaults.DataParser.DEFAULT_CHARSET_DECODER);
+				break;
+			default:
+				parser = new DataParser(
+						Defaults.DataParser.DEFAULT_CHARSET_DECODER);
+				break;
+			}
+			parser.init(cutMetadata);
+			try {
+				parser.setDataSource(new ByteArrayInputStream(pattern.getBytes(Defaults.DataParser.DEFAULT_CHARSET_DECODER)));
+			} catch (UnsupportedEncodingException e1) {
+			}
+			try {
+				patternRecord = parser.getNext();
+			} catch (JetelException e) {
+				throw new ComponentNotReadyException(this, e);
+			}
+			parser.close();
+		}		
 	}
 	
 
@@ -495,7 +503,7 @@
 
 		try {
 			dataGenerator = new DataGenerator(xattribs.getString(XML_ID_ATTRIBUTE), 
-					xattribs.getString(XML_PATTERN_ATTRIBUTE), 
+					xattribs.getString(XML_PATTERN_ATTRIBUTE,""), 
 					xattribs.getInteger(XML_RECORDS_NUMBER_ATTRIBUTE));
 			if (xattribs.exists(XML_RANDOM_FIELDS_ATTRIBUTE)){
 				dataGenerator.setRandomFields(xattribs.getString(XML_RANDOM_FIELDS_ATTRIBUTE));

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataIntersection.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataIntersection.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataIntersection.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -384,7 +384,7 @@
         	transformation.init(transformationParameters, inMetadata, outMetadata);
         }else{
             transformation = RecordTransformFactory.createTransform(
-            		transformSource, transformClassName, this, inMetadata, outMetadata, transformationParameters);
+            		transformSource, transformClassName, this, inMetadata, outMetadata, transformationParameters, this.getClass().getClassLoader());
         }
 	}
 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataReader.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataReader.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataReader.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -239,7 +239,7 @@
         super.init();
         
 		// initialize multifile reader based on prepared parser
-        reader = new MultiFileReader(parser, fileURL);
+        reader = new MultiFileReader(parser, getGraph().getProjectURL(), fileURL);
         reader.setLogger(logger);
         reader.setFileSkip(skipFirstLine ? 1 : 0);
         reader.setSkip(skipRows);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DataWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -149,7 +149,7 @@
 		super.init();
 
         // initialize multifile writer based on prepared formatter
-        writer = new MultiFileWriter(formatter, fileURL);
+        writer = new MultiFileWriter(formatter, getGraph().getProjectURL(), fileURL);
         writer.setLogger(logger);
         writer.setBytesPerFile(bytesPerFile);
         writer.setRecordsPerFile(recordsPerFile);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DelimitedDataReader.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -174,7 +174,7 @@
 		super.init();
 
         // initialize multifile reader based on prepared parser
-        reader = new MultiFileReader(parser, fileURL);
+        reader = new MultiFileReader(parser, getGraph().getProjectURL(), fileURL);
         reader.setLogger(logger);
         reader.setFileSkip(skipFirstLine ? 1 : 0);
         reader.setSkip(skipRows);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DelimitedDataWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DelimitedDataWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/DelimitedDataWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -163,7 +163,7 @@
 		}
         
         // initialize multifile writer based on prepared formatter
-        writer = new MultiFileWriter(formatter, fileURL);
+        writer = new MultiFileWriter(formatter, getGraph().getProjectURL(), fileURL);
         writer.setLogger(logger);
         writer.setBytesPerFile(bytesPerFile);
         writer.setRecordsPerFile(recordsPerFile);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Denormalizer.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Denormalizer.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Denormalizer.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -30,6 +30,7 @@
 import org.jetel.component.denormalize.RecordDenormalize;
 import org.jetel.component.denormalize.RecordDenormalizeTL;
 import org.jetel.data.DataRecord;
+import org.jetel.data.Defaults;
 import org.jetel.data.RecordKey;
 import org.jetel.exception.ComponentNotReadyException;
 import org.jetel.exception.ConfigurationStatus;
@@ -75,7 +76,7 @@
  *  <tr><td><b>id</b></td><td>component identification</td>
  *  <tr><td><b>denormalizeClass</b></td><td>name of the class to be used for normalizing data.</td></tr>
  *  <tr><td><b>denormalize</b></td><td>contains definition of transformation in Java or TransformLang.</td></tr>
- *  <tr><td><b>key</b></td><td>comma-separated list of key fields used to identify input record groups.
+ *  <tr><td><b>key</b></td><td>list of key fields used to identify input record groups.
  *  Each group is < sequence of input records with identical key field values.</td></tr>
  *  </tr>
  *  <tr><td><b>order</b></td><td>Describe expected order of input records. "asc" for ascending, "desc" for descending,
@@ -178,7 +179,7 @@
 	 * @throws ComponentNotReadyException
 	 */
 	private RecordDenormalize createDenormalizerDynamic(String denormCode) throws ComponentNotReadyException {
-		DynamicJavaCode dynCode = new DynamicJavaCode(denormCode);
+		DynamicJavaCode dynCode = new DynamicJavaCode(denormCode, this.getClass().getClassLoader());
         dynCode.setCaptureCompilerOutput(true);
         logger.info(" (compiling dynamic source) ");
         // use DynamicJavaCode to instantiate transformation class
@@ -352,7 +353,7 @@
 	}
 
 	private static String[] parseKeyList(String keyList) {
-		return keyList == null ? new String[]{} : keyList.split(",");
+		return keyList == null ? new String[]{} : keyList.split(Defaults.Component.KEY_FIELDS_DELIMITER_REGEX);
 	}
 	
 	/**

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/FixLenDataReader.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/FixLenDataReader.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/FixLenDataReader.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -210,7 +210,7 @@
 		super.init();
         
         // initialize multifile reader based on prepared parser
-        reader = new MultiFileReader(parser, fileURL);
+        reader = new MultiFileReader(parser, getGraph().getProjectURL(), fileURL);
         reader.setLogger(logger);
         reader.setFileSkip(skipFirstLine ? 1 : 0);
         reader.setSkip(skipRows);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/FixLenDataWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/FixLenDataWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/FixLenDataWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -157,7 +157,7 @@
 	public void init() throws ComponentNotReadyException {
 		super.init();
         // initialize multifile writer based on prepared formatter
-        writer = new MultiFileWriter(formatter, fileURL);
+        writer = new MultiFileWriter(formatter, getGraph().getProjectURL(), fileURL);
         writer.setLogger(logger);
         writer.setBytesPerFile(bytesPerFile);
         writer.setRecordsPerFile(recordsPerFile);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/HashJoin.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/HashJoin.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/HashJoin.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -159,8 +159,8 @@
  * @since       March 09, 2004
  * @revision    $Revision$
  * @created     09. March 2004
- */
-/**
+ *
+ *
  * @author Jan Hadrava, Javlin Consulting (www.javlinconsulting.cz)
  *
  */
@@ -344,7 +344,7 @@
 			transformation.init(transformationParameters, inMetadata, outMetadata);
 		}else{
 			transformation = RecordTransformFactory.createTransform(
-					transformSource, transformClassName, this, inMetadata, outMetadata, transformationParameters);
+					transformSource, transformClassName, this, inMetadata, outMetadata, transformationParameters, this.getClass().getClassLoader());
 		}
 	}
 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/JmsReader.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/JmsReader.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/JmsReader.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -195,7 +195,7 @@
 	 * @throws ComponentNotReadyException
 	 */
 	private static JmsMsg2DataRecord createProcessorDynamic(String psorCode) throws ComponentNotReadyException {
-		DynamicJavaCode dynCode = new DynamicJavaCode(psorCode);
+		DynamicJavaCode dynCode = new DynamicJavaCode(psorCode, JmsReader.class.getClassLoader());
         dynCode.setCaptureCompilerOutput(true);
         logger.info(" (compiling dynamic source) ");
         // use DynamicJavaCode to instantiate transformation class

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/JmsWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/JmsWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/JmsWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -180,7 +180,7 @@
 	 * @throws ComponentNotReadyException
 	 */
 	private static DataRecord2JmsMsg createProcessorDynamic(String psorCode) throws ComponentNotReadyException {
-		DynamicJavaCode dynCode = new DynamicJavaCode(psorCode);
+		DynamicJavaCode dynCode = new DynamicJavaCode(psorCode, JmsWriter.class.getClassLoader());
         dynCode.setCaptureCompilerOutput(true);
         logger.info(" (compiling dynamic source) ");
         // use DynamicJavaCode to instantiate transformation class

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/LookupJoin.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/LookupJoin.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/LookupJoin.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -301,42 +301,17 @@
         checkInputPorts(status, 1, 1);
         checkOutputPorts(status, 1, 1);
 
-        try {
-        	
-    		lookupTable = getGraph().getLookupTable(lookupTableName);
-    		if (lookupTable == null) {
-    			throw new ComponentNotReadyException("Lookup table \""
-    					+ lookupTableName + "\" not found.");
-    		}
-    		if (!lookupTable.isInitialized()) {
-    			lookupTable.init();
-    		}
-    		lookupMetadata = lookupTable.getMetadata();
-    		DataRecordMetadata inMetadata[] = {
-    				getInputPort(READ_FROM_PORT).getMetadata(), lookupMetadata };
-    		DataRecordMetadata outMetadata[] = { getOutputPort(WRITE_TO_PORT)
-    				.getMetadata() };
-    		try {
-    			recordKey = new RecordKey(joinKey, inMetadata[0]);
-    			recordKey.init();
-    			lookupTable.setLookupKey(recordKey);
-    		} catch (Exception e) {
-    			throw new ComponentNotReadyException(this, e);
-    		}
-        	
-        	
-    		if (freeLookupTable) {
-    			lookupTable.free();
-    		}
-//            init();
-//            free();
-        } catch (ComponentNotReadyException e) {
-            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
-            if(!StringUtils.isEmpty(e.getAttributeName())) {
-                problem.setAttributeName(e.getAttributeName());
-            }
-            status.add(problem);
-        }
+ 
+//        try {
+////            init();
+////            free();
+//        } catch (ComponentNotReadyException e) {
+//            ConfigurationProblem problem = new ConfigurationProblem(e.getMessage(), ConfigurationStatus.Severity.ERROR, this, ConfigurationStatus.Priority.NORMAL);
+//            if(!StringUtils.isEmpty(e.getAttributeName())) {
+//                problem.setAttributeName(e.getAttributeName());
+//            }
+//            status.add(problem);
+//        }
         
         return status;
 	}
@@ -371,7 +346,7 @@
 			}else{
 				transformation = RecordTransformFactory.createTransform(
 						transformSource, transformClassName, this, inMetadata,
-						outMetadata, transformationParameters);
+						outMetadata, transformationParameters, this.getClass().getClassLoader());
 			}
 		} catch (Exception e) {
 			throw new ComponentNotReadyException(this, e);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/MergeJoin.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/MergeJoin.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/MergeJoin.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -140,8 +140,7 @@
  * @since       April 4, 2002
  * @revision    $Revision$
  * @created     4. June 2003
- */
-/**
+ *
  * @author Jan Hadrava, Javlin Consulting (www.javlinconsulting.cz)
  *
  */
@@ -385,7 +384,7 @@
 			transformation.init(transformationParameters, inMetadata, outMetadata);
 		}else{
             transformation = RecordTransformFactory.createTransform(
-            		transformSource, transformClassName, this, inMetadata, outMetadata, transformationParameters);
+            		transformSource, transformClassName, this, inMetadata, outMetadata, transformationParameters, this.getClass().getClassLoader());
         }
 	}
 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/MultiLevelReader.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/MultiLevelReader.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/MultiLevelReader.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -220,7 +220,7 @@
 	 * @throws ComponentNotReadyException
 	 */
 	private TypeSelector createSelectorDynamic(String seltorCode) throws ComponentNotReadyException {
-		DynamicJavaCode dynCode = new DynamicJavaCode(seltorCode);
+		DynamicJavaCode dynCode = new DynamicJavaCode(seltorCode, this.getClass().getClassLoader());
         dynCode.setCaptureCompilerOutput(true);
         logger.info(" (compiling dynamic source) ");
         // use DynamicJavaCode to instantiate transformation class
@@ -256,7 +256,7 @@
         parser.setExceptionHandler(ParserExceptionHandlerFactory.getHandler(policyType));
 
         // initialize multifile reader based on prepared parser
-        reader = new MultiFileReader(parser, fileURL);
+        reader = new MultiFileReader(parser, getGraph().getProjectURL(), fileURL);
         reader.setLogger(logger);
         reader.setFileSkip(skipFirstLine ? 1 : 0);
         reader.setSkip(skipRows);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Normalizer.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Normalizer.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Normalizer.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -157,7 +157,7 @@
 	 * @throws ComponentNotReadyException
 	 */
 	private RecordNormalize createNormalizerDynamic(String normCode) throws ComponentNotReadyException {
-		DynamicJavaCode dynCode = new DynamicJavaCode(normCode);
+		DynamicJavaCode dynCode = new DynamicJavaCode(normCode, this.getClass().getClassLoader());
         dynCode.setCaptureCompilerOutput(true);
         logger.info(" (compiling dynamic source) ");
         // use DynamicJavaCode to instantiate transformation class

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Partition.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Partition.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Partition.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -257,7 +257,7 @@
 			function.setGraph(getGraph());
 			return function;
 		}else{//get partition function form java code
-			DynamicJavaCode dynCode = new DynamicJavaCode(psorCode);
+			DynamicJavaCode dynCode = new DynamicJavaCode(psorCode, this.getClass().getClassLoader());
 	        dynCode.setCaptureCompilerOutput(true);
 	        logger.info(" (compiling dynamic source) ");
 	        // use DynamicJavaCode to instantiate transformation class

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Reformat.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Reformat.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Reformat.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -228,7 +228,7 @@
 		} else {
 		    transformation = RecordTransformFactory.createTransform(
 		            transform, transformClass, this, inMetadata,
-		            outMetadata, transformationParameters);
+		            outMetadata, transformationParameters, this.getClass().getClassLoader());
 		}
 	}
 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/SequenceChecker.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/SequenceChecker.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/SequenceChecker.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -35,8 +35,8 @@
 import org.jetel.graph.Result;
 import org.jetel.graph.TransformationGraph;
 import org.jetel.util.ComponentXMLAttributes;
+import org.jetel.util.MiscUtils;
 import org.jetel.util.StringUtils;
-import org.jetel.util.MiscUtils;
 import org.w3c.dom.Element;
 /**
  *  <h3>Sequence Checker Component</h3>
@@ -142,6 +142,7 @@
 		DataRecord[] records = {new DataRecord(inPort.getMetadata()), new DataRecord(inPort.getMetadata())};
 		records[0].init();
 		records[1].init();
+		boolean error = false; 
 		
 		while ((records[current] = inPort.readRecord(records[current])) != null && runIt) {
 			if (isFirst) {
@@ -150,13 +151,18 @@
 				compareResult = recordComparator.compare(records[current], records[previous]);
 
 				if (compareResult == 0) {
-					if (uniqueKeys) 
-						return Result.ERROR;
+					if (uniqueKeys) {
+						error = true;
+						break;
+					}
 				} else if (compareResult > 0) {
-					if (!sortOrderAscending) 
-						return Result.ERROR;
+					if (!sortOrderAscending) {
+						error = true;
+						break;
+					}
 				} else if (sortOrderAscending) {
-					return Result.ERROR;
+					error = true;
+					break;
 				}
 			}
 			
@@ -167,7 +173,8 @@
 			previous = previous ^ 1;
 		}
 		if (isOutPort) broadcastEOF();
-        return runIt ? Result.FINISHED_OK : Result.ABORTED;
+		Result result = error ? Result.ERROR : Result.FINISHED_OK;
+        return runIt ? result : Result.ABORTED;
 	}
 
 	@Override

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/StructureWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/StructureWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/StructureWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -225,7 +225,7 @@
 		super.init();
 		// based on file mask, create/open output file
 		try {
-			writer = FileUtils.getWritableChannel(fileURL, appendData);
+			writer = FileUtils.getWritableChannel(getGraph().getProjectURL(), fileURL, appendData);
 			buffer = ByteBuffer.allocateDirect(StringUtils.getMaxLength(header,footer));
 			formatter.init(getInputPort(READ_FROM_PORT).getMetadata());
             formatter.setDataTarget(writer);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Trash.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Trash.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/Trash.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -22,8 +22,10 @@
 import java.io.BufferedOutputStream;
 import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
+import java.io.IOException;
 import java.io.PrintWriter;
 import java.nio.ByteBuffer;
+import java.nio.channels.Channels;
 
 import org.jetel.data.DataRecord;
 import org.jetel.data.Defaults;
@@ -37,6 +39,7 @@
 import org.jetel.graph.Result;
 import org.jetel.graph.TransformationGraph;
 import org.jetel.util.ComponentXMLAttributes;
+import org.jetel.util.FileUtils;
 import org.jetel.util.StringUtils;
 import org.jetel.util.SynchronizeUtils;
 import org.w3c.dom.Element;
@@ -189,8 +192,8 @@
 		if (debugPrint) {
             if(debugFilename != null) {
           		try {
-    				outStream = new PrintWriter(new BufferedOutputStream(new FileOutputStream(debugFilename)));
-    			} catch (FileNotFoundException ex) {
+    				outStream = new PrintWriter(Channels.newWriter(FileUtils.getWritableChannel(getGraph().getProjectURL(), debugFilename, false), Defaults.DataFormatter.DEFAULT_CHARSET_ENCODER));
+    			} catch (IOException ex) {
     				throw new ComponentNotReadyException(ex.getMessage());
     			}
             } else {

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/XLSReader.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/XLSReader.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/XLSReader.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -50,18 +50,19 @@
 /**
  *  <h3>XLS Reader Component</h3>
  *
- * <!-- Parses data from xls file and send the records to out ports. -->
+ * <!-- Parses data from xls file and send the records to output ports. -->
  *
  * <table border="1">
  *  <th>Component:</th>
  * <tr><td><h4><i>Name:</i></h4></td>
  * <td>XLSReader</td></tr>
  * <tr><td><h4><i>Category:</i></h4></td>
- * <td></td></tr>
+ * <td>Readers</td></tr>
  * <tr><td><h4><i>Description:</i></h4></td>
- * <td>Parses data from xls file and send the records to out ports.<br>Because 
+ * <td>Parses data from xls file and send the records to output ports.<br>Because 
  * POI currently uses a lot of memory for large sheets, it is impossible to read 
- * large data (over ~4.3MB in xls file - 2.1MB in flat file)</td></tr>
+ * large data (over ~4.3MB in xls file - 2.1MB in flat file). JExcel can handle 
+ * with bigger files (up to ~8.1MB in xls file - ~4.9MB in flat file)</td></tr>
  * <tr><td><h4><i>Inputs:</i></h4></td>
  * <td></td></tr>
  * <tr><td><h4><i>Outputs:</i></h4></td>
@@ -158,7 +159,7 @@
 	private int metadataRow = 0;
 	private String[][] fieldMap;
 	
-	private boolean usePOI = true;
+	public final static boolean usePOI = true;
 
 	/**
 	 * @param id
@@ -231,6 +232,11 @@
         return runIt ? Result.FINISHED_OK : Result.ABORTED;
 	}
 
+	@Override
+	public void free() {
+		super.free();
+		parser.close();
+	}
 	/*
 	 * (non-Javadoc)
 	 * 
@@ -412,6 +418,7 @@
 		if (metadataRow != 0){
 			parser.setMetadataRow(metadataRow-1);
 		}
+		//set proper mapping type beetwen clover and xls fields
 		if (fieldMap != null){
 			String[] cloverFields = new String[fieldMap.length];
 			String[] xlsFields = new String[fieldMap.length];

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/XLSWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/XLSWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.component/src/org/jetel/component/XLSWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -24,7 +24,6 @@
 import java.io.File;
 
 import org.jetel.data.DataRecord;
-import org.jetel.data.formatter.Formatter;
 import org.jetel.data.formatter.JExcelXLSDataFormatter;
 import org.jetel.data.formatter.XLSDataFormatter;
 import org.jetel.data.formatter.XLSFormatter;
@@ -56,7 +55,8 @@
  * <td>Reads data from input port and writes them to given xls sheet in xls file. If 
  *  in one graph you want to write to the same file but to different sheets each XLSWriter
  *  has to have another phase<br>Because POI currently uses a lot of memory for
- *   large sheets, it is impossible to save large data (over ~1.8MB) to xls file</td></tr>
+ *   large sheets, it is impossible to save large data (over ~1.8MB) to xls file.
+ *   JExcel can handle with bigger files (up to ~5.7MB in flat file)</td></tr>
  * <tr><td><h4><i>Inputs:</i></h4></td>
  * <td>one input port defined/connected.</td></tr>
  * <tr><td><h4><i>Outputs:</i></h4></td>
@@ -202,15 +202,8 @@
 	public void init() throws ComponentNotReadyException {
 		super.init();
 		File out = new File(fileURL);
-//		try {
-//			if (!out.exists()){
-//				out.createNewFile();
-//			}
-			formatter.init(getInputPort(READ_FROM_PORT).getMetadata());
-            formatter.setDataTarget(out);
-//		}catch(IOException ex){
-//			throw new ComponentNotReadyException(ex);
-//		}
+		formatter.init(getInputPort(READ_FROM_PORT).getMetadata());
+		formatter.setDataTarget(out);
 	}
 
 	public static Node fromXML(TransformationGraph graph, Element nodeXML) throws XMLConfigurationException {
@@ -248,7 +241,7 @@
 		xmlElement.setAttribute(XML_FIRSTCOLUMN_ATTRIBUTE,String.valueOf(formatter.getFirstColumn()));
 		xmlElement.setAttribute(XML_FIRSTDATAROW_ATTRIBUTE, String.valueOf(formatter.getFirstRow()+1));
 		xmlElement.setAttribute(XML_NAMESROW_ATTRIBUTE, String.valueOf(formatter.getNamesRow()+1));
-		if (formatter.getSheetName() != null) {//TODO can't we obtain it from parser?
+		if (formatter.getSheetName() != null) {
 			xmlElement.setAttribute(XML_SHEETNAME_ATTRIBUTE,formatter.getSheetName());
 		}
 	}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/src/org/jetel/connection/DBConnection.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/src/org/jetel/connection/DBConnection.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/src/org/jetel/connection/DBConnection.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -50,6 +50,7 @@
 import org.jetel.graph.TransformationGraph;
 import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.util.ComponentXMLAttributes;
+import org.jetel.util.FileUtils;
 import org.jetel.util.PropertyRefResolver;
 import org.jetel.util.StringUtils;
 import org.jetel.util.crypto.Enigma;
@@ -202,16 +203,20 @@
         if(!StringUtils.isEmpty(configFileName)) {
             try {
                 InputStream stream = null;
-                if (!new File(configFileName).exists()) {
-                    // config file not found on file system - try classpath
-                    stream = getClass().getClassLoader().getResourceAsStream(configFileName);
-                    if(stream == null) {
-                        throw new FileNotFoundException("Config file for db connection " + getId() + " not found (" + configFileName + ")");
-                    }
-                    stream = new BufferedInputStream(stream);
-                } else {
-                    stream = new BufferedInputStream(new FileInputStream(configFileName));
-                }
+                URL url = FileUtils.getFileURL(getGraph().getProjectURL(), configFileName);
+                stream = url.openStream();
+
+//old code - last usage in 2.0                 
+//                if (!new File(configFileName).exists()) {
+//                    // config file not found on file system - try classpath
+//                    stream = getClass().getClassLoader().getResourceAsStream(configFileName);
+//                    if(stream == null) {
+//                        throw new FileNotFoundException("Config file for db connection " + getId() + " not found (" + configFileName + ")");
+//                    }
+//                    stream = new BufferedInputStream(stream);
+//                } else {
+//                    stream = new BufferedInputStream(new FileInputStream(configFileName));
+//                }
                 
                 this.config.load(stream);
                 stream.close();
@@ -239,6 +244,9 @@
 	 * @see java.sql.Connection#setTransactionIsolation(int)
 	 */
 	private void connect() {
+        if(!isInitialized()) {
+            throw new RuntimeException("DBConnection (" + getId() +") is not initialized.");
+        }
 	    String dbDriverName;
 	    if (dbDriver==null){
 	        dbDriverName=config.getProperty(XML_DBDRIVER_ATTRIBUTE);
@@ -255,15 +263,10 @@
 	                	// try to create URL directly, if failed probably the protocol is missing, so use File.toURL
 	                    for(int i=0;i<libraryPaths.length;i++){
 	                    	try {
-	                    		// valid url
-	                    		myURLs[i]=new URL(libraryPaths[i]);
+                                // valid url
+                                myURLs[i] = FileUtils.getFileURL(getGraph() == null ? null : getGraph().getProjectURL(), libraryPaths[i]);
 	                    	} catch (MalformedURLException ex1) {
-	                    		try {
-	                    			// probably missing protocol prefix, try to load it as a file
-	                    			myURLs[i] = new File(libraryPaths[i]).toURI().toURL();
-	                    		} catch (MalformedURLException ex2) {
-	                    			throw new RuntimeException("Malformed URL: " + ex1.getMessage());
-	                    		}
+	                    	    throw new RuntimeException("Malformed URL: " + ex1.getMessage());
 	                    	}
 	                }
 	                

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/src/org/jetel/connection/JmsConnection.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/src/org/jetel/connection/JmsConnection.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/src/org/jetel/connection/JmsConnection.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -19,11 +19,8 @@
 */
 package org.jetel.connection;
 
-import java.io.BufferedInputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.InputStream;
+import java.net.URL;
 import java.util.Hashtable;
 import java.util.Properties;
 
@@ -45,6 +42,7 @@
 import org.jetel.graph.TransformationGraph;
 import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.util.ComponentXMLAttributes;
+import org.jetel.util.FileUtils;
 import org.w3c.dom.Element;
 
 /**
@@ -112,25 +110,28 @@
 		this.destId = destId;
 	}
 	
-	private static Properties readConfig(String cfgFile) {
+	private static Properties readConfig(URL contextURL, String cfgFile) {
 		Properties config = new Properties();
 		try {
             InputStream stream = null;
-            if (!new File(cfgFile).exists()) {
-                // config file not found on file system - try classpath
-                stream = JmsConnection.class.getClassLoader().getResourceAsStream(cfgFile);
-                if(stream == null) {
-                    throw new FileNotFoundException("Config file for JMS connection not found (" + cfgFile +")");
-                }
-                stream = new BufferedInputStream(stream);
-            } else {
-                stream = new BufferedInputStream(new FileInputStream(cfgFile));
-            }
+            URL url = FileUtils.getFileURL(contextURL, cfgFile);
+            stream = url.openStream();
             
+//            if (!new File(cfgFile).exists()) {
+//                // config file not found on file system - try classpath
+//                stream = JmsConnection.class.getClassLoader().getResourceAsStream(cfgFile);
+//                if(stream == null) {
+//                    throw new FileNotFoundException("Config file for JMS connection not found (" + cfgFile +")");
+//                }
+//                stream = new BufferedInputStream(stream);
+//            } else {
+//                stream = new BufferedInputStream(new FileInputStream(cfgFile));
+//            }
+            
 			config.load(stream);
 			stream.close();
 		} catch (Exception ex) {
-			throw new RuntimeException(ex);
+			throw new RuntimeException("Config file for JMS connection not found (" + cfgFile +")", ex);
 		}
 		return config;
 	}
@@ -220,7 +221,7 @@
 		JmsConnection con;
 		try {
 			if (xattribs.exists(XML_CONFIG_ATTRIBUTE)) {
-				Properties config = readConfig(xattribs.getString(XML_CONFIG_ATTRIBUTE));
+				Properties config = readConfig(graph.getProjectURL(), xattribs.getString(XML_CONFIG_ATTRIBUTE));
 				con = new JmsConnection(xattribs.getString(XML_ID_ATTRIBUTE),
 						config.getProperty(XML_INICTX_FACTORY_ATTRIBUTE, null),
 						config.getProperty(XML_PROVIDER_URL_ATTRIBUTE, null),

Copied: branches/cloveretl.engine.rel-2-1-0/cloveretl.connection/test (from rev 2346, trunk/cloveretl.connection/test)

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/data/in/bad/FL28_NL_nulls.txt
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/data/in/bad/FL28_NL_nulls.txt	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/data/in/bad/FL28_NL_nulls.txt	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,3 +1 @@
-  N/AStone          01/11/93
--15.5          112  11/03/02
- -0.7Bone Broo    99        
\ No newline at end of file
+  N/AStone          01/11/93-15.5          112  11/03/02 -0.7Bone Broo    99        
\ No newline at end of file

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/docs/BUGS.txt
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/docs/BUGS.txt	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/docs/BUGS.txt	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,3 +1,5 @@
 *******************************************************************************
                                  KNOWN BUGS
 *******************************************************************************
+
+- metadata defined by connection stub are not compatible with new checkConfig system
\ No newline at end of file

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/docs/HISTORY.txt
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/docs/HISTORY.txt	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/docs/HISTORY.txt	2007-01-31 14:29:53 UTC (rev 2420)
@@ -2,6 +2,34 @@
                           CLOVER ETL - HISTORY of RELEASES
 *******************************************************************************
 
+REL 2-1-0
+---------
+Changes/bug fixes:
++ Added new component "Data Generator" - generator of synthetic/random data
++ Added new component "Lookup Table Reader/Writer" - reader/writer of records from/to lookup table
++ Added new component "Lookup Join" - joins incoming data with selected lookup table
++ Added new component "JMS Reader" - receives JMS-messages
++ Added new component "JMS Writer" - sends JMS-messages
++ Added new component "Normalizer" - normalizes input records
++ Added new component "Denormalizer" - denormalizes input records
++ Added new component "Structure writer" - record mask formatter
++ Added new connection "JMS connection" - connection related with JSMReader and JMSWriter
++ developers can use new method for engine initialization - runGraph.initEngine()
++ new approach in DataField.setToDefaultValue() method;
+  in case the default value is not preset, engine tries to set the field value to null
++ DBConnection has new calling method order;
+  new DBConnection(), init(), getConnection()/getStatement(), free() 
+  (connect() method is now private - call init() method instead)
++ Extended LookupTable interface by put() and remove() methods
++ all GraphElement(s) should implement checkConfig() method; this method is used for
+  checking engine element configuration; related changes of transformation graph startup
+  are described in runGraph class comments
++ components (Node descendants) should not override direct run() method, instead 
+  for this purpose was introduced new execute() method
++ WatchDog thread has new wide logging and inter-component communication facilities
++ Added new data field type cbyte (compressed byte array)
++ All join components are ready to satisfy more slave input data streams
+
 REL 2-0-2
 ---------
 Release in particular repairing bugs from 2.0.1 version.

Copied: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/customizedTransformExample.java (from rev 2395, trunk/cloveretl.engine/examples/customizedTransformExample.java)

Copied: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/data/orders2.dat (from rev 2395, trunk/cloveretl.engine/examples/data/orders2.dat)

Copied: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/data/orders2.xls (from rev 2395, trunk/cloveretl.engine/examples/data/orders2.xls)

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphAproximativeJoin.grf
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphAproximativeJoin.grf	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphAproximativeJoin.grf	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,143 +1,139 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph created="Tue Oct 24 13:04:40 CEST 2006" description="This graph ilustrates usage of Aproximative Join component.&#10;This component requires prepared data: they have &#10;to have a key (component Key Generator creates it) &#10;and be sorted by this key." guiVersion="1.4" licenseType="Evaluation license" modified="Tue Oct 24 14:01:53 CEST 2006" name="graphFixedLengthData">
+<Graph created="Tue Oct 24 13:04:40 CEST 2006" description="This graph ilustrates usage of Aproximative Join component.&#10;This component requires prepared data: they have &#10;to have a key (component Key Generator creates it) &#10;and be sorted by this key." guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Fri Jan 26 09:29:45 CET 2007" name="graphFixedLengthData" revision="1.5">
 <Global>
 <Metadata id="Metadata4">
-<Record name="conforming_out" type="fixed">
-<Field name="lname" nullable="true" size="15" type="string"/>
-<Field name="fname" nullable="true" size="15" type="string"/>
-<Field name="last_name" nullable="true" size="15" type="string"/>
-<Field name="first_name" nullable="true" size="15" type="string"/>
-<Field name="_total_conformity_" nullable="true" size="8" type="numeric"/>
+<Record name="conforming_out" recordDelimiter="\n" recordSize="71" type="fixed">
+<Field name="no" nullable="true" shift="0" size="3" type="integer"/>
+<Field name="lname" nullable="true" shift="0" size="15" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="15" type="string"/>
+<Field name="last_name" nullable="true" shift="0" size="15" type="string"/>
+<Field name="first_name" nullable="true" shift="0" size="15" type="string"/>
+<Field name="_total_conformity_" nullable="true" shift="0" size="8" type="numeric"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata0">
-<Record name="customer" recordDelimiter="\n" type="fixed">
-<Field name="customer_id" nullable="true" size="4" type="integer"/>
-<Field name="account_num" nullable="true" size="11" type="long"/>
-<Field name="lname" nullable="true" size="10" type="string"/>
-<Field name="fname" nullable="true" size="10" type="string"/>
-<Field name="mi" nullable="true" size="4" type="string"/>
-<Field name="address1" nullable="true" size="30" type="string"/>
-<Field name="city" nullable="true" size="7" type="string"/>
-<Field name="state_province" nullable="true" size="6" type="string"/>
-<Field name="postal_code" nullable="true" size="5" type="string"/>
-<Field name="country" nullable="true" size="5" type="string"/>
-<Field name="customer_region_id" nullable="true" size="4" type="integer"/>
-<Field name="phone1" nullable="true" size="12" type="string"/>
-<Field name="phone2" nullable="true" size="12" type="string"/>
-<Field format="EEE MMM dd yyyy" name="birthdate" nullable="false" size="15" type="date"/>
-<Field name="marital_status" nullable="true" size="1" type="string"/>
-<Field name="yearly_income" nullable="true" size="13" type="string"/>
-<Field name="gender" nullable="true" size="1" type="string"/>
-<Field name="total_children" nullable="true" size="1" type="integer"/>
-<Field name="num_children_at_home" nullable="true" size="1" type="integer"/>
-<Field name="education" nullable="true" size="15" type="string"/>
-<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" size="15" type="date"/>
-<Field name="member_card" nullable="true" size="8" type="string"/>
-<Field name="occupation" nullable="true" size="20" type="string"/>
-<Field name="houseowner" nullable="true" size="1" type="string"/>
-<Field name="num_cars_owned" nullable="true" size="1" type="integer"/>
+<Record name="customer" recordDelimiter="&#10;" recordSize="212" type="fixed">
+<Field name="customer_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="account_num" nullable="true" shift="0" size="11" type="long"/>
+<Field name="lname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="mi" nullable="true" shift="0" size="4" type="string"/>
+<Field name="address1" nullable="true" shift="0" size="30" type="string"/>
+<Field name="city" nullable="true" shift="0" size="7" type="string"/>
+<Field name="state_province" nullable="true" shift="0" size="6" type="string"/>
+<Field name="postal_code" nullable="true" shift="0" size="5" type="string"/>
+<Field name="country" nullable="true" shift="0" size="5" type="string"/>
+<Field name="customer_region_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="phone1" nullable="true" shift="0" size="12" type="string"/>
+<Field name="phone2" nullable="true" shift="0" size="12" type="string"/>
+<Field format="EEE MMM dd yyyy" name="birthdate" nullable="false" shift="0" size="15" type="date"/>
+<Field name="marital_status" nullable="true" shift="0" size="1" type="string"/>
+<Field name="yearly_income" nullable="true" shift="0" size="13" type="string"/>
+<Field name="gender" nullable="true" shift="0" size="1" type="string"/>
+<Field name="total_children" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="num_children_at_home" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="education" nullable="true" shift="0" size="15" type="string"/>
+<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" shift="0" size="15" type="date"/>
+<Field name="member_card" nullable="true" shift="0" size="8" type="string"/>
+<Field name="occupation" nullable="true" shift="0" size="20" type="string"/>
+<Field name="houseowner" nullable="true" shift="0" size="1" type="string"/>
+<Field name="num_cars_owned" nullable="true" shift="0" size="1" type="integer"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata2">
-<Record name="customer_with_key" type="fixed">
-<Field name="customer_id" nullable="true" size="4" type="integer"/>
-<Field name="account_num" nullable="true" size="11" type="long"/>
-<Field name="lname" nullable="true" size="10" type="string"/>
-<Field name="fname" nullable="true" size="10" type="string"/>
-<Field name="mi" nullable="true" size="4" type="string"/>
-<Field name="address1" nullable="true" size="30" type="string"/>
-<Field name="city" nullable="true" size="6" type="string"/>
-<Field name="state_province" nullable="true" size="6" type="string"/>
-<Field name="postal_code" nullable="true" size="5" type="string"/>
-<Field name="country" nullable="true" size="5" type="string"/>
-<Field name="customer_region_id" nullable="true" size="4" type="integer"/>
-<Field name="phone1" nullable="true" size="12" type="string"/>
-<Field name="phone2" nullable="true" size="12" type="string"/>
-<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" size="28" type="date"/>
-<Field name="marital_status" nullable="true" size="1" type="string"/>
-<Field name="yearly_income" nullable="true" size="13" type="string"/>
-<Field name="gender" nullable="true" size="1" type="string"/>
-<Field name="total_children" nullable="true" size="1" type="integer"/>
-<Field name="num_children_at_home" nullable="true" size="1" type="integer"/>
-<Field name="education" nullable="true" size="10" type="string"/>
-<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" size="28" type="date"/>
-<Field name="member_card" nullable="true" size="8" type="string"/>
-<Field name="occupation" nullable="true" size="20" type="string"/>
-<Field name="houseowner" nullable="true" size="1" type="string"/>
-<Field name="num_cars_owned" nullable="true" size="1" type="integer"/>
-<Field locale="en.US" name="key" nullable="true" size="7" type="string"/>
+<Record name="customer_with_key" recordSize="239" type="fixed">
+<Field name="customer_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="account_num" nullable="true" shift="0" size="11" type="long"/>
+<Field name="lname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="mi" nullable="true" shift="0" size="4" type="string"/>
+<Field name="address1" nullable="true" shift="0" size="30" type="string"/>
+<Field name="city" nullable="true" shift="0" size="6" type="string"/>
+<Field name="state_province" nullable="true" shift="0" size="6" type="string"/>
+<Field name="postal_code" nullable="true" shift="0" size="5" type="string"/>
+<Field name="country" nullable="true" shift="0" size="5" type="string"/>
+<Field name="customer_region_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="phone1" nullable="true" shift="0" size="12" type="string"/>
+<Field name="phone2" nullable="true" shift="0" size="12" type="string"/>
+<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" shift="0" size="28" type="date"/>
+<Field name="marital_status" nullable="true" shift="0" size="1" type="string"/>
+<Field name="yearly_income" nullable="true" shift="0" size="13" type="string"/>
+<Field name="gender" nullable="true" shift="0" size="1" type="string"/>
+<Field name="total_children" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="num_children_at_home" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="education" nullable="true" shift="0" size="10" type="string"/>
+<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" shift="0" size="28" type="date"/>
+<Field name="member_card" nullable="true" shift="0" size="8" type="string"/>
+<Field name="occupation" nullable="true" shift="0" size="20" type="string"/>
+<Field name="houseowner" nullable="true" shift="0" size="1" type="string"/>
+<Field name="num_cars_owned" nullable="true" shift="0" size="1" type="integer"/>
+<Field locale="en.US" name="key" nullable="true" shift="0" size="7" type="string"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata1">
-<Record name="employee" type="delimited">
-<Field delimiter=";" name="employee_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="full_name" nullable="true" type="string"/>
-<Field delimiter=";" name="first_name" nullable="true" type="string"/>
-<Field delimiter=";" name="last_name" nullable="true" type="string"/>
-<Field delimiter=";" name="position_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="position_title" nullable="true" type="string"/>
-<Field delimiter=";" name="store_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="department_id" nullable="true" type="integer"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" type="date"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="hire_date" nullable="true" type="date"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="end_date" nullable="true" type="date"/>
-<Field delimiter=";" name="salary" nullable="true" type="numeric"/>
-<Field delimiter=";" name="supervisor_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="education_level" nullable="true" type="string"/>
-<Field delimiter=";" name="marital_status" nullable="true" type="string"/>
-<Field delimiter=";" name="gender" nullable="true" type="string"/>
-<Field delimiter="\n" name="management_role" nullable="true" type="string"/>
+<Record name="employee" recordSize="-1" type="delimited">
+<Field delimiter=";" name="employee_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="full_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="first_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="last_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="position_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="position_title" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="store_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="department_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="hire_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="end_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="salary" nullable="true" shift="0" type="numeric"/>
+<Field delimiter=";" name="supervisor_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="education_level" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="marital_status" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="gender" nullable="true" shift="0" type="string"/>
+<Field delimiter="\n" name="management_role" nullable="true" shift="0" type="string"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata3">
-<Record name="employee_with_key" type="delimited">
-<Field delimiter=";" name="employee_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="full_name" nullable="true" type="string"/>
-<Field delimiter=";" name="first_name" nullable="true" type="string"/>
-<Field delimiter=";" name="last_name" nullable="true" type="string"/>
-<Field delimiter=";" name="position_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="position_title" nullable="true" type="string"/>
-<Field delimiter=";" name="store_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="department_id" nullable="true" type="integer"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" type="date"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="hire_date" nullable="true" type="date"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="end_date" nullable="true" type="date"/>
-<Field delimiter=";" name="salary" nullable="true" type="numeric"/>
-<Field delimiter=";" name="supervisor_id" nullable="true" type="integer"/>
-<Field delimiter=";" name="education_level" nullable="true" type="string"/>
-<Field delimiter=";" name="marital_status" nullable="true" type="string"/>
-<Field delimiter=";" name="gender" nullable="true" type="string"/>
-<Field delimiter=";" name="management_role" nullable="true" type="string"/>
-<Field delimiter="\n" locale="en.US" name="key" nullable="true" type="string"/>
+<Record name="employee_with_key" recordSize="-1" type="delimited">
+<Field delimiter=";" name="employee_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="full_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="first_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="last_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="position_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="position_title" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="store_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="department_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="hire_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="end_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="salary" nullable="true" shift="0" type="numeric"/>
+<Field delimiter=";" name="supervisor_id" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" name="education_level" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="marital_status" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="gender" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="management_role" nullable="true" shift="0" type="string"/>
+<Field delimiter="\n" locale="en.US" name="key" nullable="true" shift="0" type="string"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata5">
-<Record name="suspicious" type="delimited">
-<Field delimiter=";" name="lname" nullable="true" type="string"/>
-<Field delimiter=";" name="fname" nullable="true" type="string"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="birthdate" nullable="true" type="date"/>
-<Field delimiter=";" name="gender" nullable="true" type="string"/>
-<Field delimiter=";" name="last_name" nullable="true" type="string"/>
-<Field delimiter=";" name="first_name" nullable="true" type="string"/>
-<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" type="date"/>
-<Field delimiter=";" name="gender1" nullable="true" type="string"/>
-<Field delimiter=";" length="8" name="_lname_conformity_" nullable="true" scale="2" type="numeric"/>
-<Field delimiter=";" length="8" name="_fname_conformity_" nullable="true" scale="2" type="numeric"/>
-<Field delimiter="\n" length="8" name="_total_conformity_" nullable="true" scale="2" type="numeric"/>
+<Record name="suspicious" recordSize="-1" type="delimited">
+<Field delimiter=";" name="lname" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="fname" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="birthdate" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="gender" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="last_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="first_name" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" format="EEE MMM dd yyyy" name="birth_date" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="gender1" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" length="8" name="_lname_conformity_" nullable="true" scale="2" shift="0" type="numeric"/>
+<Field delimiter=";" length="8" name="_fname_conformity_" nullable="true" scale="2" shift="0" type="numeric"/>
+<Field delimiter="\n" length="8" name="_total_conformity_" nullable="true" scale="2" shift="0" type="numeric"/>
 </Record>
 </Metadata>
 <Connection dbConfig="koule_postgre.cfg" id="DBConnection0" type="JDBC"/>
 <Property fileURL="workspace.prm" id="GraphParameter0"/>
+<Sequence cached="10" fileURL="id.seq" id="Sequence0" name="id" start="1" step="1" type="SIMPLE_SEQUENCE"/>
 </Global>
 <Phase number="0">
-<Node conformity="0.8" enabled="enabled" guiHeight="67" guiName="aproximative join" guiWidth="122" guiX="444" guiY="176" id="APROX_MERGE_JOIN1" joinKey="lname 4 0.5 true false false false;fname 3 0.5 true false false false" matchingKey="key" type="APROX_MERGE_JOIN">
-<attr name="transform">${out.0.lname} = ${in.0.lname};
-${out.0.fname} = ${in.0.fname};
-${out.0.last_name} = ${in.1.last_name};
-${out.0.first_name} = ${in.1.first_name};
-</attr>
-<attr name="slaveOverrideKey">last_name;first_name</attr>
+<Node conformity="0.8" enabled="enabled" guiHeight="67" guiName="aproximative join" guiWidth="122" guiX="444" guiY="176" id="APROX_MERGE_JOIN1" joinKey="lname 4 0.5 true false false false;fname 3 0.5 true false false false" matchingKey="key" slaveOverrideKey="last_name;first_name" transformClass="customizedTransformExample" type="APROX_MERGE_JOIN">
 <attr name="transformForSuspicious">${out.0.lname} = ${in.0.lname};
 ${out.0.fname} = ${in.0.fname};
 ${out.0.birthdate} = ${in.0.birthdate};
@@ -152,9 +148,15 @@
 <Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/employee.out" guiHeight="69" guiName="employee without pair" guiWidth="118" guiX="596" guiY="303" id="DELIMITED_DATA_WRITER_NIO1" type="DELIMITED_DATA_WRITER"/>
 <Node enabled="enabled" guiHeight="64" guiName="Ext Sort" guiWidth="95" guiX="296" guiY="92" id="EXT_SORT0" sortKey="key" type="EXT_SORT"/>
 <Node enabled="enabled" guiHeight="64" guiName="Ext Sort" guiWidth="111" guiX="296" guiY="259" id="EXT_SORT1" sortKey="key" type="EXT_SORT"/>
-<Node OneRecordPerLine="true" enabled="enabled" fileURL="${WORKSPACE}/data/customers.dat" guiHeight="72" guiName="customer" guiWidth="119" guiX="7" guiY="92" id="FIXLEN_DATA_READER_NIO0" type="FIXLEN_DATA_READER"/>
-<Node OneRecordPerLine="true" append="false" enabled="enabled" fileURL="${WORKSPACE}/output/conforming.txt" guiHeight="69" guiName="joined - similarity greater then 0.8" guiWidth="111" guiX="596" guiY="54" id="FIXLEN_DATA_WRITER_NIO0" type="FIXLEN_DATA_WRITER"/>
-<Node OneRecordPerLine="true" append="false" enabled="enabled" fileURL="${WORKSPACE}/output/customers.out" guiHeight="54" guiName="customer without pair" guiWidth="123" guiX="596" guiY="215" id="FIXLEN_DATA_WRITER_NIO1" type="FIXLEN_DATA_WRITER"/>
+<Node byteMode="false" enabled="enabled" fileURL="${WORKSPACE}/data/customers.dat" guiHeight="72" guiName="customer" guiWidth="119" guiX="7" guiY="92" id="FIXLEN_DATA_READER_NIO0" type="FIXLEN_DATA_READER">
+<attr name="OneRecordPerLine">true</attr>
+</Node>
+<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/conforming.txt" guiHeight="69" guiName="joined - similarity greater then 0.8" guiWidth="111" guiX="596" guiY="54" id="FIXLEN_DATA_WRITER_NIO0" type="FIXLEN_DATA_WRITER">
+<attr name="OneRecordPerLine">true</attr>
+</Node>
+<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/customers.out" guiHeight="54" guiName="customer without pair" guiWidth="123" guiX="596" guiY="215" id="FIXLEN_DATA_WRITER_NIO1" type="FIXLEN_DATA_WRITER">
+<attr name="OneRecordPerLine">true</attr>
+</Node>
 <Node enabled="enabled" guiHeight="70" guiName="Key generator" guiWidth="138" guiX="152" guiY="92" id="KEY_GEN0" keyExpression="lname 4;fname 3" type="KEY_GEN"/>
 <Node enabled="enabled" guiHeight="88" guiName="Key generator" guiWidth="145" guiX="152" guiY="259" id="KEY_GEN1" keyExpression="last_name 4;first_name 3" type="KEY_GEN"/>
 <Edge fromNode="APROX_MERGE_JOIN1:0" guiBendpoints="" id="Edge0" inPort="0 (joined - similarity greater then 0.8)" metadata="Metadata4" outPort="0 (aproximative join)" toNode="FIXLEN_DATA_WRITER_NIO0:0"/>

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphCloverData.grf
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphCloverData.grf	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphCloverData.grf	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,63 +1,63 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph created="Tue Oct 24 10:36:22 CEST 2006" guiVersion="1.5" licenseType="Evaluation license" modified="Tue Oct 31 09:00:37 CET 2006" name="graphCLOVERData" revision="1.27">
+<Graph created="Tue Oct 24 10:36:22 CEST 2006" guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Wed Jan 24 10:05:43 CET 2007" name="graphCLOVERData" revision="1.28">
 <Global>
 <Metadata id="Metadata0">
-<Record name="customer" recordDelimiter="\n" type="fixed">
-<Field name="customer_id" nullable="true" size="4" type="integer"/>
-<Field name="account_num" nullable="true" size="11" type="long"/>
-<Field name="lname" nullable="true" size="10" type="string"/>
-<Field name="fname" nullable="true" size="10" type="string"/>
-<Field name="mi" nullable="true" size="4" type="string"/>
-<Field name="address1" nullable="true" size="30" type="string"/>
-<Field name="city" nullable="true" size="7" type="string"/>
-<Field name="state_province" nullable="true" size="6" type="string"/>
-<Field name="postal_code" nullable="true" size="5" type="string"/>
-<Field name="country" nullable="true" size="5" type="string"/>
-<Field name="customer_region_id" nullable="true" size="4" type="integer"/>
-<Field name="phone1" nullable="true" size="12" type="string"/>
-<Field name="phone2" nullable="true" size="12" type="string"/>
-<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" size="15" type="date"/>
-<Field name="marital_status" nullable="true" size="1" type="string"/>
-<Field name="yearly_income" nullable="true" size="13" type="string"/>
-<Field name="gender" nullable="true" size="1" type="string"/>
-<Field name="total_children" nullable="true" size="1" type="integer"/>
-<Field name="num_children_at_home" nullable="true" size="1" type="integer"/>
-<Field name="education" nullable="true" size="15" type="string"/>
-<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" size="15" type="date"/>
-<Field name="member_card" nullable="true" size="8" type="string"/>
-<Field name="occupation" nullable="true" size="20" type="string"/>
-<Field name="houseowner" nullable="true" size="1" type="string"/>
-<Field name="num_cars_owned" nullable="true" size="1" type="integer"/>
+<Record name="customer" recordDelimiter="&#10;" recordSize="212" type="fixed">
+<Field name="customer_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="account_num" nullable="true" shift="0" size="11" type="long"/>
+<Field name="lname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="mi" nullable="true" shift="0" size="4" type="string"/>
+<Field name="address1" nullable="true" shift="0" size="30" type="string"/>
+<Field name="city" nullable="true" shift="0" size="7" type="string"/>
+<Field name="state_province" nullable="true" shift="0" size="6" type="string"/>
+<Field name="postal_code" nullable="true" shift="0" size="5" type="string"/>
+<Field name="country" nullable="true" shift="0" size="5" type="string"/>
+<Field name="customer_region_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="phone1" nullable="true" shift="0" size="12" type="string"/>
+<Field name="phone2" nullable="true" shift="0" size="12" type="string"/>
+<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" shift="0" size="15" type="date"/>
+<Field name="marital_status" nullable="true" shift="0" size="1" type="string"/>
+<Field name="yearly_income" nullable="true" shift="0" size="13" type="string"/>
+<Field name="gender" nullable="true" shift="0" size="1" type="string"/>
+<Field name="total_children" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="num_children_at_home" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="education" nullable="true" shift="0" size="15" type="string"/>
+<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" shift="0" size="15" type="date"/>
+<Field name="member_card" nullable="true" shift="0" size="8" type="string"/>
+<Field name="occupation" nullable="true" shift="0" size="20" type="string"/>
+<Field name="houseowner" nullable="true" shift="0" size="1" type="string"/>
+<Field name="num_cars_owned" nullable="true" shift="0" size="1" type="integer"/>
 </Record>
 </Metadata>
 <Metadata id="Metadata1">
-<Record name="customer1" type="fixed">
-<Field name="customer_id" nullable="true" size="4" type="integer"/>
-<Field name="account_num" nullable="true" size="11" type="long"/>
-<Field name="lname" nullable="true" size="10" type="string"/>
-<Field name="fname" nullable="true" size="10" type="string"/>
-<Field name="mi" nullable="true" size="4" type="string"/>
-<Field name="address1" nullable="true" size="30" type="string"/>
-<Field name="city" nullable="true" size="7" type="string"/>
-<Field name="state_province" nullable="true" size="6" type="string"/>
-<Field name="postal_code" nullable="true" size="5" type="string"/>
-<Field name="country" nullable="true" size="5" type="string"/>
-<Field name="customer_region_id" nullable="true" size="4" type="integer"/>
-<Field name="phone1" nullable="true" size="12" type="string"/>
-<Field name="phone2" nullable="true" size="12" type="string"/>
-<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" size="15" type="date"/>
-<Field name="marital_status" nullable="true" size="1" type="string"/>
-<Field name="yearly_income" nullable="true" size="13" type="string"/>
-<Field name="gender" nullable="true" size="1" type="string"/>
-<Field name="total_children" nullable="true" size="1" type="integer"/>
-<Field name="num_children_at_home" nullable="true" size="1" type="integer"/>
-<Field name="education" nullable="true" size="15" type="string"/>
-<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" size="15" type="date"/>
-<Field name="member_card" nullable="true" size="8" type="string"/>
-<Field name="occupation" nullable="true" size="20" type="string"/>
-<Field name="houseowner" nullable="true" size="1" type="string"/>
-<Field name="num_cars_owned" nullable="true" size="1" type="integer"/>
-<Field name="size" nullable="true" size="10" type="integer"/>
+<Record name="customer1" recordSize="222" type="fixed">
+<Field name="customer_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="account_num" nullable="true" shift="0" size="11" type="long"/>
+<Field name="lname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="fname" nullable="true" shift="0" size="10" type="string"/>
+<Field name="mi" nullable="true" shift="0" size="4" type="string"/>
+<Field name="address1" nullable="true" shift="0" size="30" type="string"/>
+<Field name="city" nullable="true" shift="0" size="7" type="string"/>
+<Field name="state_province" nullable="true" shift="0" size="6" type="string"/>
+<Field name="postal_code" nullable="true" shift="0" size="5" type="string"/>
+<Field name="country" nullable="true" shift="0" size="5" type="string"/>
+<Field name="customer_region_id" nullable="true" shift="0" size="4" type="integer"/>
+<Field name="phone1" nullable="true" shift="0" size="12" type="string"/>
+<Field name="phone2" nullable="true" shift="0" size="12" type="string"/>
+<Field format="EEE MMM dd yyyy" name="birthdate" nullable="true" shift="0" size="15" type="date"/>
+<Field name="marital_status" nullable="true" shift="0" size="1" type="string"/>
+<Field name="yearly_income" nullable="true" shift="0" size="13" type="string"/>
+<Field name="gender" nullable="true" shift="0" size="1" type="string"/>
+<Field name="total_children" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="num_children_at_home" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="education" nullable="true" shift="0" size="15" type="string"/>
+<Field format="EEE MMM dd yyyy" name="date_accnt_opened" nullable="true" shift="0" size="15" type="date"/>
+<Field name="member_card" nullable="true" shift="0" size="8" type="string"/>
+<Field name="occupation" nullable="true" shift="0" size="20" type="string"/>
+<Field name="houseowner" nullable="true" shift="0" size="1" type="string"/>
+<Field name="num_cars_owned" nullable="true" shift="0" size="1" type="integer"/>
+<Field name="size" nullable="true" shift="0" size="10" type="integer"/>
 </Record>
 </Metadata>
 <Property fileURL="workspace.prm" id="GraphParameter0"/>
@@ -65,22 +65,17 @@
 <Phase number="0">
 <Node enabled="enabled" fileURL="${WORKSPACE}/output/customers.clv.zip" guiHeight="0" guiName="CLOVER Data Writer" guiWidth="0" guiX="558" guiY="118" id="CLOVER_WRITER0" saveIndex="true" saveMetadata="true" type="CLOVER_WRITER"/>
 <Node enabled="enabled" guiHeight="0" guiName="Concatenate" guiWidth="0" guiX="328" guiY="118" id="CONCATENATE0" type="CONCATENATE"/>
-<Node enableIncomplete="true" enabled="enabled" fileURL="${WORKSPACE}/data/customers.???" guiHeight="66" guiName="customer from file" guiWidth="130" guiX="50" guiY="44" id="FIXLEN_DATA_READER0" type="FIXLEN_DATA_READER">
+<Node byteMode="false" enableIncomplete="true" enabled="enabled" fileURL="${WORKSPACE}/data/customers.???" guiHeight="66" guiName="customer from file" guiWidth="130" guiX="50" guiY="44" id="FIXLEN_DATA_READER0" type="FIXLEN_DATA_READER">
 <attr name="OneRecordPerLine">true</attr>
 </Node>
-<Node enableIncomplete="true" enabled="enabled" fileURL="zip:${WORKSPACE}/data/data.zip#customers.dat;" guiHeight="0" guiName="Fixed Length Data Reader" guiWidth="0" guiX="48" guiY="168" id="FIXLEN_DATA_READER1" type="FIXLEN_DATA_READER"/>
+<Node byteMode="false" enableIncomplete="true" enabled="enabled" fileURL="zip:${WORKSPACE}/data/data.zip#customers.dat;" guiHeight="0" guiName="Fixed Length Data Reader" guiWidth="0" guiX="48" guiY="168" id="FIXLEN_DATA_READER1" type="FIXLEN_DATA_READER"/>
 <Edge debugMode="false" fromNode="CONCATENATE0:0" guiBendpoints="" id="Edge2" inPort="0 (CLOVER Data Writer)" metadata="Metadata0" outPort="0 (Concatenate)" toNode="CLOVER_WRITER0:0"/>
 <Edge debugMode="false" fromNode="FIXLEN_DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="1 (Concatenate)" metadata="Metadata0" outPort="0 (customer from file)" toNode="CONCATENATE0:1"/>
 <Edge debugMode="false" fromNode="FIXLEN_DATA_READER1:0" guiBendpoints="" id="Edge8" inPort="0 (Concatenate)" metadata="Metadata0" outPort="0 (Fixed Length Data Reader)" toNode="CONCATENATE0:0"/>
 </Phase>
 <Phase number="1">
-<Node enabled="enabled" fileURL="${WORKSPACE}/output/customers.clv.zip" guiHeight="0" guiName="Clover Data Reader" guiWidth="0" guiX="55" guiY="296" id="CLOVER_READER0" startRecord="10000" type="CLOVER_READER"/>
-<Node enabled="enabled" fileURL="${WORKSPACE}/output/strucured_customers.txt" guiHeight="0" guiName="Structured Data Writer" guiWidth="0" guiX="559" guiY="296" id="STRUCTURE_WRITER0" type="STRUCTURE_WRITER">
-<attr name="mask">&lt;Customer id=$customer_id&gt;
-	&lt;last name = $lname&gt;
-	&lt;first name = $fname&gt;
-&lt;/Customer&gt;
-</attr>
+<Node enabled="enabled" fileURL="${WORKSPACE}/output/customers.clv.zip" guiHeight="0" guiName="Clover Data Reader" guiWidth="0" guiX="55" guiY="296" id="CLOVER_READER0" indexFileURL="Index file URL&#9;" startRecord="10" type="CLOVER_READER"/>
+<Node enabled="enabled" fileURL="${WORKSPACE}/output/strucured_customers.txt" guiHeight="0" guiName="Structured Data Writer" guiWidth="0" guiX="559" guiY="296" id="STRUCTURE_WRITER0" mask="&lt;Customer id=$customer_id&gt;&#10;&#9;&lt;last name = $lname&gt;&#10;&#9;&lt;first name = $fname&gt;&#10;&lt;/Customer&gt;&#10;" type="STRUCTURE_WRITER">
 <attr name="header">dir = ${WORKSPACE}
 </attr>
 <attr name="footer">

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphDBLoad5.grf
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphDBLoad5.grf	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphDBLoad5.grf	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph description="This graph illustrates usage of dbFields and cloverFields parameters of&#10;DB_OUTPUT_TABLE component.&#10;Parameter dbFields allows to specify that only certain fields of target DB table&#10;will be populated.&#10;Parameter cloverFields allows to specify which input/Clover fields are used&#10;for populating target fields.&#10;The final mapping is determined by the order in which Clover fields and DB fields appear&#10;in the parameters.&#10;Note: in this example, input field LAST_NAME is mapped onto FIRST_NAME in DB and&#10;input field FIRST_NAME onto LAST_NAME in DB.&#10;Note2: parameter batchMode allows for grouping of inserts into DB thus increasing throughput. It works&#10;only with DBs/JDBC drivers which support this feature (e.g. Oracle).&#10;" name="TestingDBOutputTable">
+<Graph created="Wed Jan 24 09:02:52 CET 2007" description="This graph illustrates usage of dbFields and cloverFields parameters of&#10;DB_OUTPUT_TABLE component.&#10;Parameter dbFields allows to specify that only certain fields of target DB table&#10;will be populated.&#10;Parameter cloverFields allows to specify which input/Clover fields are used&#10;for populating target fields.&#10;The final mapping is determined by the order in which Clover fields and DB fields appear&#10;in the parameters.&#10;Note: in this example, input field LAST_NAME is mapped onto FIRST_NAME in DB and&#10;input field FIRST_NAME onto LAST_NAME in DB.&#10;Note2: parameter batchMode allows for grouping of inserts into DB thus increasing throughput. It works&#10;only with DBs/JDBC drivers which support this feature (e.g. Oracle).&#10;" guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Wed Jan 24 10:55:54 CET 2007" name="TestingDBOutputTable" revision="1.0">
 <Global>
 <Metadata fileURL="metadata/employeeDB.fmt" id="InMetadata"/>
 <Connection dbConfig="koule_postgre.cfg" id="DBConnection0" type="JDBC"/>
@@ -7,7 +7,7 @@
 </Global>
 <Phase number="0">
 <Node enabled="enabled" fileURL="${WORKSPACE}/employees.list.dat" guiHeight="25" guiName="INPUT" guiWidth="50" guiX="20" guiY="20" id="INPUT" type="DELIMITED_DATA_READER"/>
-<Node batchMode="false" cloverFields="LAST_NAME;FIRST_NAME" commit="300" dbConnection="DBConnection0" dbFields="FIRST_NAME;LAST_NAME" dbTable="employee_tmp" enabled="enabled" guiHeight="25" guiName="OUTPUT" guiWidth="50" guiX="195" guiY="20" id="OUTPUT" type="DB_OUTPUT_TABLE"/>
+<Node batchMode="false" commit="300" dbConnection="DBConnection0" dbTable="employee_tmp" enabled="enabled" fieldMap="FIRST_NAME=first_name;LAST_NAME=last_name" guiHeight="25" guiName="OUTPUT" guiWidth="50" guiX="195" guiY="20" id="OUTPUT" type="DB_OUTPUT_TABLE"/>
 <Edge fromNode="INPUT:0" guiBendpoints="" id="INEDGE2" inPort="0 (OUTPUT)" metadata="InMetadata" outPort="0 (INPUT)" toNode="OUTPUT:0"/>
 </Phase>
 </Graph>

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphExtFilter.grf
===================================================================
(Binary files differ)

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphIntersectData.grf
===================================================================
(Binary files differ)

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphJoinMergeInline.grf
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphJoinMergeInline.grf	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/graphJoinMergeInline.grf	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,41 +1,20 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Graph description="This graph demonstrates how to use MERGE_JOIN component for 3way join." name="Testing Hash Joiner">
+<Graph created="Tue Jan 16 09:47:22 CET 2007" guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Wed Jan 24 09:27:14 CET 2007" name="test" revision="1.60">
 <Global>
-<Metadata fileURL="metadata/orders.fmt" id="InMetadata1"/>
-<Metadata fileURL="metadata/employees.fmt" id="InMetadata2"/>
-<Metadata fileURL="metadata/joinedOrders3way.fmt" id="OutMetadata"/>
+<Metadata fileURL="metadata/employees.fmt" id="Metadata0"/>
+<Metadata fileURL="metadata/joinedOrders3way.fmt" id="Metadata1"/>
+<Metadata fileURL="metadata/ordersFix.fmt" id="Metadata2"/>
 <Property fileURL="workspace.prm" id="GraphParameter0"/>
 </Global>
 <Phase number="0">
-<Node enabled="enabled" id="INPUT1" type="DELIMITED_DATA_READER"
-fileURL="${WORKSPACE}/data/orders.dat"
-/>
-<Node enabled="enabled" id="INPUT2" type="DELIMITED_DATA_READER"
-fileURL="${WORKSPACE}/data/employees.dat"
-/>
-<Node enabled="enabled" id="INPUT3" type="DELIMITED_DATA_READER"
-fileURL="${WORKSPACE}/data/employees.dat"
-/>
-
-<Node enabled="enabled" id="SORT1" type="SORT"
-sortKey="EmployeeID" 
-/>
-<Node enabled="enabled" id="SORT2" type="SORT"
-sortKey="EmployeeID" 
-/>
-<Node enabled="enabled" id="SORT3" type="SORT"
-sortKey="ReportsTo" 
-/>
-
-<Edge fromNode="INPUT1:0" id="INEDGE1s" metadata="InMetadata1"  toNode="SORT1:0"/>
-<Edge fromNode="INPUT2:0" id="INEDGE2s" metadata="InMetadata2"  toNode="SORT2:0"/>
-<Edge fromNode="INPUT3:0" id="INEDGE3s" metadata="InMetadata2"  toNode="SORT3:0"/>
-
-<Node enabled="enabled" id="JOIN" type="MERGE_JOIN"
-joinKey="EmployeeID=EmployeeID#EmployeeID=ReportsTo"
-joinType="leftOuter"
-slaveDuplicates="true"
-><attr name="transform">
+<Node enabled="enabled" fileURL="${WORKSPACE}/data/employees.dat" guiHeight="0" guiName="Universal Data Reader" guiWidth="0" guiX="47" guiY="276" id="DATA_READER0" type="DATA_READER"/>
+<Node enabled="enabled" fileURL="${WORKSPACE}/data/employees.dat" guiHeight="0" guiName="Delimited Data Reader" guiWidth="0" guiX="47" guiY="190" id="DELIMITED_DATA_READER0" type="DELIMITED_DATA_READER"/>
+<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/joined_data_hash.out" guiHeight="0" guiName="Delimited Data Writer" guiWidth="0" guiX="656" guiY="190" id="DELIMITED_DATA_WRITER0" type="DELIMITED_DATA_WRITER"/>
+<Node enabled="enabled" guiHeight="0" guiName="Ext Sort" guiWidth="0" guiX="275" guiY="83" id="EXT_SORT0" sortKey="EmployeeID" type="EXT_SORT"/>
+<Node enabled="enabled" guiHeight="0" guiName="Ext Sort" guiWidth="0" guiX="275" guiY="190" id="EXT_SORT1" sortKey="EmployeeID" type="EXT_SORT"/>
+<Node enabled="enabled" guiHeight="0" guiName="Ext Sort" guiWidth="0" guiX="275" guiY="276" id="EXT_SORT2" sortKey="ReportsTo" type="EXT_SORT"/>
+<Node enabled="enabled" guiHeight="0" guiName="Ext Merge Join" guiWidth="0" guiX="480" guiY="190" id="MERGE_JOIN1" joinKey="EmployeeID=EmployeeID#EmployeeID=ReportsTo" type="MERGE_JOIN">
+<attr name="transform">
 import org.jetel.component.DataRecordTransform;
 import org.jetel.data.*;
 
@@ -67,14 +46,13 @@
 
 </attr>
 </Node>
-
-<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/joined_data_hash.out" guiHeight="25" guiName="WRITER" guiWidth="50" guiX="370" guiY="20" id="WRITER" type="DELIMITED_DATA_WRITER"/>
-
-<Edge fromNode="SORT1:0" guiBendpoints="" id="INEDGE1" inPort="0 (JOIN)" metadata="InMetadata1" outPort="0 (INPUT1)" toNode="JOIN:0"/>
-<Edge fromNode="SORT2:0" guiBendpoints="" id="INEDGE2" inPort="1 (JOIN)" metadata="InMetadata2" outPort="0 (INPUT2)" toNode="JOIN:1"/>
-<Edge fromNode="SORT3:0" guiBendpoints="" id="INEDGE3" inPort="2 (JOIN)" metadata="InMetadata2" outPort="0 (INPUT3)" toNode="JOIN:2"/>
-
-<Edge fromNode="JOIN:0" guiBendpoints="" id="OUTEDGE" inPort="0 (WRITER)" metadata="OutMetadata" outPort="0 (JOIN)" toNode="WRITER:0"/>
-
+<Node enabled="enabled" fieldMap="OrderID=$A;CustomerID=$B;EmployeeID=$C;OrderDate=$D;RequiredDate=$E;ShippedDate=$F;ShipVia=$G;Freight=$H;ShipName=$I;ShipAddress=$J;ShipCity=$K;ShipRegion=$L;ShipPostalCode=$M;ShipCountry=$N" fileURL="${WORKSPACE}/data/orders2.xls" guiHeight="0" guiName="XLS Data Reader" guiWidth="0" guiX="48" guiY="83" id="XLS_READER0" metadataRow="1" startRow="2" type="XLS_READER"/>
+<Edge fromNode="DATA_READER0:0" guiBendpoints="" id="Edge2" inPort="0 (Ext Sort)" metadata="Metadata0" outPort="0 (Universal Data Reader)" toNode="EXT_SORT2:0"/>
+<Edge fromNode="DELIMITED_DATA_READER0:0" guiBendpoints="" id="Edge1" inPort="0 (Ext Sort)" metadata="Metadata0" outPort="0 (Delimited Data Reader)" toNode="EXT_SORT1:0"/>
+<Edge debugMode="false" fromNode="EXT_SORT0:0" guiBendpoints="" id="Edge3" inPort="0 (Ext Merge Join)" metadata="Metadata2" outPort="0 (Ext Sort)" toNode="MERGE_JOIN1:0"/>
+<Edge debugMode="false" fromNode="EXT_SORT1:0" guiBendpoints="" id="Edge4" inPort="1 (Ext Merge Join)" metadata="Metadata0" outPort="0 (Ext Sort)" toNode="MERGE_JOIN1:1"/>
+<Edge debugMode="false" fromNode="EXT_SORT2:0" guiBendpoints="" id="Edge5" inPort="2 (Ext Merge Join)" metadata="Metadata0" outPort="0 (Ext Sort)" toNode="MERGE_JOIN1:2"/>
+<Edge debugMode="false" fromNode="MERGE_JOIN1:0" guiBendpoints="" id="Edge6" inPort="0 (Delimited Data Writer)" metadata="Metadata1" outPort="0 (Ext Merge Join)" toNode="DELIMITED_DATA_WRITER0:0"/>
+<Edge fromNode="XLS_READER0:0" guiBendpoints="" id="Edge0" inPort="0 (Ext Sort)" metadata="Metadata2" outPort="0 (XLS Data Reader)" toNode="EXT_SORT0:0"/>
 </Phase>
 </Graph>

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/metadata/employees.fmt
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/metadata/employees.fmt	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/examples/metadata/employees.fmt	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,20 +1,20 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Record name="Employees" type="delimited">
-	<Field name="EmployeeID" type="string" delimiter=";" />
-	<Field name="LastName" type="string" delimiter=";" format="#" />
-	<Field name="FirstName" type="string" delimiter=";"/>
-	<Field name="Title" type="string" delimiter=";"/>
-	<Field name="TitleInCourtesy" type="string" delimiter=";"/>
-	<Field name="BirthDate" type="date" delimiter=";" format="dd/MM/yyyy" />
-	<Field name="HireDate" type="date" delimiter=";" format="dd/MM/yyyy" />
-	<Field name="Address" type="string" delimiter=";"/>
-	<Field name="City" type="string" delimiter=";"/>
-	<Field name="Region" type="string" delimiter=";"/>
-	<Field name="PostalCode" type="string" delimiter=";"/>
-	<Field name="Country" type="string" delimiter=";"/>
-	<Field name="Phone" type="string" delimiter=";"/>
-	<Field name="Extension" type="string" delimiter=";"/>
-	<Field name="Photo" type="string" delimiter=";"/>
-	<Field name="Memo" type="string" delimiter=";"/>
-	<Field name="ReportsTo" type="string" delimiter="\n"/>
+<Record name="Employees" recordDelimiter="" recordSize="-1" type="delimited">
+<Field delimiter=";" name="EmployeeID" nullable="true" shift="0" type="integer"/>
+<Field delimiter=";" format="#" name="LastName" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="FirstName" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Title" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="TitleInCourtesy" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" format="dd/MM/yyyy" name="BirthDate" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" format="dd/MM/yyyy" name="HireDate" nullable="true" shift="0" type="date"/>
+<Field delimiter=";" name="Address" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="City" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Region" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="PostalCode" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Country" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Phone" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Extension" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Photo" nullable="true" shift="0" type="string"/>
+<Field delimiter=";" name="Memo" nullable="true" shift="0" type="string"/>
+<Field delimiter="\r\n" name="ReportsTo" nullable="true" shift="0" type="integer"/>
 </Record>

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/component/CustomizedRecordTransform.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1417,7 +1417,6 @@
 							count++;
 							outFieldsName[i][j] = null;
 							inFieldsName[i][index] = null;
-							break;
 						}
 					}
 				}				
@@ -1431,11 +1430,10 @@
 						index = StringUtils.findString(outFieldsName[i][j],
 								inFieldsName[k]);
 						if (index > -1) {//output field name found amoung input fields
-							if (putMapping(i, j, i, index, rule, transformMap)){
+							if (putMapping(i, j, k, index, rule, transformMap)){
 								count++;
 								outFieldsName[i][j] = null;
 								inFieldsName[k][index] = null;
-								break;
 							}
 						}
 					}					
@@ -1453,7 +1451,6 @@
 							count++;
 							outFieldsName[i][j] = null;
 							inFieldsName[i][index] = null;
-							break;
 						}
 					}
 				}				
@@ -1467,11 +1464,10 @@
 						index = StringUtils.findStringIgnoreCase(
 								outFieldsName[i][j], inFieldsName[k]);
 						if (index > -1) {//output field name found amoung input fields
-							if (putMapping(i, j, i, index, rule, transformMap)){
+							if (putMapping(i, j, k, index, rule, transformMap)){
 								count++;
 								outFieldsName[i][j] = null;
 								inFieldsName[k][index] = null;
-								break;
 							}
 						}
 					}					
@@ -1621,9 +1617,9 @@
 				sequenceID = ruleString.indexOf(DOT) == -1 ? ruleString
 						: ruleString.substring(0, ruleString.indexOf(DOT));
 				try {
-						target[order[i][REC_NO]].getField(order[i][FIELD_NO]).setValue(
+						target[order[i][REC_NO]].getField(order[i][FIELD_NO]).fromString(
 								transformMapArray[order[i][REC_NO]][order[i][FIELD_NO]]
-										.getValue(getGraph().getSequence(sequenceID)));
+										.getValue(getGraph().getSequence(sequenceID)).toString());
 					} catch (BadDataFormatException e) {
 						errorMessage = "Can't set value from sequence " + sequenceID + 
 							" to field " + targetMetadata[order[i][REC_NO]].getName() + 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/component/RecordTransformFactory.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/component/RecordTransformFactory.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/component/RecordTransformFactory.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -23,7 +23,6 @@
  */
 package org.jetel.component;
 
-import java.io.File;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLClassLoader;
@@ -37,6 +36,7 @@
 import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.util.CodeParser;
 import org.jetel.util.DynamicJavaCode;
+import org.jetel.util.FileUtils;
 
 public class RecordTransformFactory {
 
@@ -50,7 +50,7 @@
     public static final Pattern PATTERN_PREPROCESS_1 = Pattern.compile("\\$\\{out\\."); 
     public static final Pattern PATTERN_PREPROCESS_2 = Pattern.compile("\\$\\{in\\."); 
     
-    public static RecordTransform createTransform(String transform, String transformClass, Node node, DataRecordMetadata[] inMetadata, DataRecordMetadata[] outMetadata, Properties transformationParameters) throws ComponentNotReadyException {
+    public static RecordTransform createTransform(String transform, String transformClass, Node node, DataRecordMetadata[] inMetadata, DataRecordMetadata[] outMetadata, Properties transformationParameters, ClassLoader classLoader) throws ComponentNotReadyException {
         RecordTransform transformation = null;
         Log logger = LogFactory.getLog(node.getClass());
         
@@ -67,7 +67,7 @@
             switch (guessTransformType(transform)) {
             case TRANSFORM_JAVA_SOURCE:
                 // try compile transform parameter as java code
-                DynamicJavaCode dynaTransCode = new DynamicJavaCode(transform);
+                DynamicJavaCode dynaTransCode = new DynamicJavaCode(transform, classLoader);
                 transformation = RecordTransformFactory.loadClassDynamic(
                         logger, dynaTransCode);
                 break;
@@ -77,7 +77,7 @@
             case TRANSFORM_JAVA_PREPROCESS:
                 transformation = RecordTransformFactory.loadClassDynamic(
                         logger, "Transform" + node.getId(), transform,
-                        inMetadata, outMetadata);
+                        inMetadata, outMetadata, classLoader);
                 break;
             default:
                 // logger.error("Can't determine transformation code type at
@@ -100,7 +100,7 @@
     
     public static RecordTransform loadClass(Log logger, String transformClass) throws ComponentNotReadyException {
         //TODO parsing url from transformClass parameter
-        return loadClass(logger, transformClass, null);
+        return loadClass(logger, transformClass, null, null);
     }
     
     /**
@@ -111,7 +111,7 @@
      * @throws ComponentNotReadyException
      */
     public static RecordTransform loadClass(Log logger,
-            String transformClassName, String[] libraryPaths)
+            String transformClassName, URL contextURL, String[] libraryPaths)
             throws ComponentNotReadyException {
         RecordTransform transformation = null;
         // try to load in transformation class & instantiate
@@ -134,16 +134,9 @@
             for (int i = 0; i < libraryPaths.length; i++) {
                 try {
                     // valid url
-                    myURLs[i] = new URL(libraryPaths[i]);
-                } catch (MalformedURLException ex1) {
-                    try {
-                        // probably missing protocol prefix, try to load it as a
-                        // file
-                        myURLs[i] = new File(libraryPaths[i]).toURI().toURL();
-                    } catch (MalformedURLException ex2) {
-                        throw new ComponentNotReadyException("Malformed URL: "
-                                + ex1.getMessage());
-                    }
+                    myURLs[i] = FileUtils.getFileURL(contextURL, libraryPaths[i]);
+                } catch (MalformedURLException e) {
+                    throw new ComponentNotReadyException("Malformed URL: " + e.getMessage());
                 }
             }
             try {
@@ -173,7 +166,7 @@
      */
     public static RecordTransform loadClassDynamic(Log logger,
             String className, String transformCode,
-            DataRecordMetadata[] inMetadata, DataRecordMetadata[] outMetadata)
+            DataRecordMetadata[] inMetadata, DataRecordMetadata[] outMetadata, ClassLoader classLoader)
             throws ComponentNotReadyException {
         DynamicJavaCode dynamicTransformCode;
         // creating dynamicTransformCode from internal transformation format
@@ -182,7 +175,7 @@
         codeParser.parse();
         codeParser.addTransformCodeStub("Transform" + className);
 
-        dynamicTransformCode = new DynamicJavaCode(codeParser.getSourceCode());
+        dynamicTransformCode = new DynamicJavaCode(codeParser.getSourceCode(), classLoader);
         return loadClassDynamic(logger,dynamicTransformCode);
     }
     

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/ByteDataField.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/ByteDataField.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/ByteDataField.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -476,7 +476,11 @@
 		if (isNull) return -1;
 		
 		if (obj instanceof ByteDataField){
-			byteObj = ((ByteDataField) obj).value;
+			if (!((ByteDataField) obj).isNull()) {
+				byteObj = ((ByteDataField) obj).value;
+			}else {
+				return 1; 			
+			}
 		}else if (obj instanceof byte[]){
 			byteObj= (byte[])obj;
 		}else {

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/DataRecord.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/DataRecord.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -26,6 +26,7 @@
 
 import org.jetel.metadata.DataFieldMetadata;
 import org.jetel.metadata.DataRecordMetadata;
+import org.jetel.util.BitArray;
 
 /**
  *  A class that represents one data record with structure based on provided
@@ -42,11 +43,19 @@
  */
 public class DataRecord implements Serializable, Comparable {
 
+    private static final long serialVersionUID = 2497808992091497225L;
+
+
+    // switch- shall we handle differently NULLable records (record
+    // which has at least one field NULLable ?)
+    private static final boolean HANDLE_NULLABLE = false;
+    
+    
 	/**
      * Currently not used
 	 * @since
 	 */
-	private transient String codeClassName;
+	// private transient String codeClassName;
 
 	/**
      * Array for holding data fields
@@ -179,6 +188,7 @@
 	public boolean[] copyFieldsByName(DataRecord sourceRecord) {
         boolean[] result = new boolean[fields.length];
         Arrays.fill(result, false);
+        if (sourceRecord == null) return result;
         DataField sourceField;
         DataField targetField;
         int sourceLength = sourceRecord.getMetadata().getNumFields();
@@ -243,10 +253,34 @@
 	 * @since          April 23, 2002
 	 */
 	public void deserialize(ByteBuffer buffer) {
-		for (int i = 0; i < fields.length; i++) {
-			fields[i].deserialize(buffer);
-		}
-	}
+        if (HANDLE_NULLABLE && metadata.isNullable()) {
+            final int base = buffer.position();
+            BitArray nullSwitches = metadata.getFieldsNullSwitches();
+            final int numNullBytes = BitArray.bitsLength2Bytes(metadata
+                    .getNumNullableFields());
+            byte indicator = 0;
+            // skip to first field
+            buffer.position(buffer.position() + numNullBytes);
+            // are there any NULLs ? if not, use the simple version
+            int nullCounter = 0;
+            for (int i = 0; i < fields.length; i++) {
+                if (nullSwitches.isSet(i)) {
+                    if (BitArray.isSet(buffer, base, nullCounter)) {
+                        fields[i].setNull(true);
+                    } else {
+                        fields[i].deserialize(buffer);
+                    }
+                    nullCounter++;
+                } else {
+                    fields[i].deserialize(buffer);
+                }
+            }
+        } else {
+            for (int i = 0; i < fields.length; i++) {
+                fields[i].deserialize(buffer);
+            }
+        }
+    }
 
 
 	/**
@@ -315,7 +349,7 @@
 	 * @return    The codeClassName value
 	 */
 	public String getCodeClassName() {
-		return codeClassName;
+		return ""; //codeClassName;
 	}
 
 
@@ -401,10 +435,34 @@
 	 * @since          April 23, 2002
 	 */
 	public void serialize(ByteBuffer buffer) {
-		for (int i = 0; i < fields.length; i++) {
-			fields[i].serialize(buffer);
-		}
-	}
+        if (HANDLE_NULLABLE && metadata.isNullable()) {
+            final int base = buffer.position();
+            BitArray nullSwitches = metadata.getFieldsNullSwitches();
+            final int numNullBytes = BitArray.bitsLength2Bytes(metadata
+                    .getNumNullableFields());
+            // clear NULL indicators
+            for (int i = 0; i < numNullBytes; i++) {
+                buffer.put((byte) 0);
+            }
+            int nullCounter = 0;
+            for (int i = 0; i < fields.length; i++) {
+                if (nullSwitches.isSet(i)) {
+                    if (fields[i].isNull) {
+                        BitArray.set(buffer, base, nullCounter);
+                    } else {
+                        fields[i].serialize(buffer);
+                    }
+                    nullCounter++;
+                } else {
+                    fields[i].serialize(buffer);
+                }
+            }
+        } else {
+            for (int i = 0; i < fields.length; i++) {
+                fields[i].serialize(buffer);
+            }
+        }
+    }
 
 
 	/**
@@ -413,7 +471,7 @@
 	 * @param  codeClassName  The new codeClassName value
 	 */
 	public void setCodeClassName(String codeClassName) {
-		this.codeClassName = codeClassName;
+		// this.codeClassName = codeClassName;
 	}
 
 
@@ -526,8 +584,17 @@
 	 * @return    The size value
 	 */
 	public int getSizeSerialized() {
-		int size=0;
-		for (int i = 0; i < fields.length; size+=fields[i++].getSizeSerialized());
+        int size=0;
+        if (HANDLE_NULLABLE && metadata.isNullable()){
+            for (int i = 0; i < fields.length;i++){
+                if (!fields[i].isNull()){
+                    size+=fields[i].getSizeSerialized(); 
+                }
+            }
+            size+=BitArray.bitsLength2Bytes(metadata.getNumNullableFields());
+        }else{
+            for (int i = 0; i < fields.length; size+=fields[i++].getSizeSerialized());
+        }
 		return size;
 	}
 	
@@ -554,7 +621,6 @@
         }
         return true;
     }
-    
 }
 /*
  *  end class DataRecord

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/DateDataField.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/DateDataField.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/DateDataField.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -462,7 +462,11 @@
 		if (obj instanceof java.util.Date){
 			return value.compareTo((java.util.Date) obj);
 		}else if (obj instanceof DateDataField){
-			return value.compareTo(((DateDataField) obj).value);
+			if (!((DateDataField) obj).isNull()) {
+				return value.compareTo(((DateDataField) obj).value);
+			}else{
+				return 1;
+			}
 		}else if (obj instanceof java.sql.Date){
 		    long result=value.getTime()-((java.sql.Date)obj).getTime();
 		    if (result>0) return 1; else if (result<0) return -1; else return 0;

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/IntegerDataField.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/IntegerDataField.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/IntegerDataField.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -465,7 +465,11 @@
 		if (isNull) return -1;
 	    
 		if (obj instanceof IntegerDataField){
-			return compareTo(((IntegerDataField) obj).value);
+			if (!((IntegerDataField) obj).isNull()) {
+				return compareTo(((IntegerDataField) obj).value);
+			}else{
+				return 1;
+			}
 		}else if (obj instanceof Integer){
 			return compareTo(((Integer)obj).intValue());
 		}else if (obj instanceof Long){

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/NumericDataField.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/NumericDataField.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/NumericDataField.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -553,7 +553,11 @@
 		if (isNull) return -1;
 	    
 		if (obj instanceof NumericDataField){
-			return compareTo(((NumericDataField) obj).value);
+			if (!((NumericDataField) obj).isNull()) {
+				return compareTo(((NumericDataField) obj).value);
+			}else {
+				return 1;
+			}
 		}else if (obj instanceof Double){
 			return compareTo(((Double)obj).doubleValue());
 		}else if (obj instanceof Integer){

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/CloverDataFormatter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/CloverDataFormatter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/CloverDataFormatter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -25,6 +25,7 @@
 import java.io.DataOutputStream;
 import java.io.File;
 import java.io.FileInputStream;
+import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
@@ -75,6 +76,7 @@
 	private File idxTmpFile;
 	private ReadableByteChannel idxReader;
 	private boolean append;
+	private boolean isOpen = false;
 	
 	private final static short LEN_SIZE_SPECIFIER = 4;
 	private final static int SHORT_SIZE_BYTES = 2;
@@ -104,18 +106,7 @@
 			throws ComponentNotReadyException {
 		this.metadata = _metadata;
         buffer = ByteBuffer.allocateDirect(Defaults.DEFAULT_INTERNAL_IO_BUFFER_SIZE);
-        if (saveIndex) {//create temporary index file
-            String dataDir = fileURL.substring(0,fileURL.lastIndexOf(File.separatorChar)+1);
-            idxTmpFile = new File(dataDir + fileName  + ".idx.tmp");
-            try{
-                idxWriter = Channels.newChannel(new DataOutputStream(
-                        new FileOutputStream(idxTmpFile)));
-            }catch(IOException ex){
-                throw new ComponentNotReadyException(ex);
-            }
-            idxBuffer = ByteBuffer.allocateDirect(Defaults.DEFAULT_INTERNAL_IO_BUFFER_SIZE);
-        }
-	}
+ 	}
 
     /* (non-Javadoc)
      * @see org.jetel.data.formatter.Formatter#setDataTarget(java.lang.Object)
@@ -128,6 +119,18 @@
             this.out = (FileOutputStream)outputDataTarget;
         }
         writer = Channels.newChannel(this.out);
+        if (saveIndex) {//create temporary index file
+            String dataDir = fileURL.substring(0,fileURL.lastIndexOf(File.separatorChar)+1);
+            idxTmpFile = new File(dataDir + fileName  + ".idx.tmp");
+            try{
+                idxWriter = Channels.newChannel(new DataOutputStream(
+                        new FileOutputStream(idxTmpFile)));
+            }catch(FileNotFoundException ex){
+                throw new RuntimeException(ex);
+            }
+            idxBuffer = ByteBuffer.allocateDirect(Defaults.DEFAULT_INTERNAL_IO_BUFFER_SIZE);
+        }
+        isOpen = true;
     }
 
 	
@@ -136,6 +139,7 @@
 	 * @see org.jetel.data.formatter.Formatter#close()
 	 */
 	public void close() {
+		if (!isOpen) return;
 		try{
 			flush();
 			if (saveIndex) {
@@ -144,9 +148,8 @@
 					ByteBufferUtils.flush(idxBuffer,idxWriter);
 					idxWriter.close();
 					ByteBufferUtils.reload(idxBuffer,idxReader);
-				}else{
-					idxBuffer.flip();
 				}
+				idxBuffer.flip();
 				long startValue = 0;//first index
 				int position;
 				if (out instanceof ZipOutputStream) {
@@ -208,6 +211,7 @@
 			}else{
 				out.close();
 			}
+			isOpen = false;
 		}catch(IOException ex){
 			ex.printStackTrace();
 		}
@@ -226,6 +230,7 @@
 		while (buffer.remaining() >= LONG_SIZE_BYTES){
 			if (idxBuffer.remaining() < SHORT_SIZE_BYTES ){//end of idxBuffer, reload it
 				ByteBufferUtils.reload(idxBuffer,idxReader);
+				idxBuffer.flip();
 			}
 			if (idxBuffer.remaining() < SHORT_SIZE_BYTES ){//there is no more sizes to working up
 				break;

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/JExcelXLSDataFormatter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/JExcelXLSDataFormatter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/JExcelXLSDataFormatter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,3 +1,22 @@
+/*
+*    jETeL/Clover - Java based ETL application framework.
+*    Copyright (C) 2005-06  Javlin Consulting <info at javlinconsulting.cz>
+*    
+*    This library is free software; you can redistribute it and/or
+*    modify it under the terms of the GNU Lesser General Public
+*    License as published by the Free Software Foundation; either
+*    version 2.1 of the License, or (at your option) any later version.
+*    
+*    This library is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+*    Lesser General Public License for more details.
+*    
+*    You should have received a copy of the GNU Lesser General Public
+*    License along with this library; if not, write to the Free Software
+*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*
+*/
 
 package org.jetel.data.formatter;
 
@@ -24,55 +43,64 @@
 
 import org.jetel.data.DataRecord;
 import org.jetel.data.primitive.Decimal;
-import org.jetel.exception.ComponentNotReadyException;
 import org.jetel.metadata.DataFieldMetadata;
 import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.util.MiscUtils;
 import org.jetel.util.StringUtils;
 
-public class JExcelXLSDataFormatter implements XLSFormatter {
+/**
+ * Writes records to xls sheet using JExcelAPI
+ *  
+ * @author avackova (agata.vackova at javlinconsulting.cz) ; 
+ * (c) JavlinConsulting s.r.o.
+ *  www.javlinconsulting.cz
+ *
+ * @since Jan 16, 2007
+ *
+ */
+public class JExcelXLSDataFormatter extends XLSFormatter {
 	
-	private DataRecordMetadata metadata;
 	private WritableWorkbook wb;
 	private String sheetName = null;
 	private WritableSheet sheet;
-	private boolean append;
-	private int sheetNumber = -1;
-	private int recCounter;
-	private int firstColumn;
-	private String firstColumnIndex = "A";
-	private int namesRow;
-	private int firstRow;
-	private boolean savedNames;
 	private WritableCellFormat[] cellStyle;
-	private boolean closed = true;
+	private boolean open = false;
 
+	/**
+	 * Constructor
+	 * 
+	 * @param append indicates if append data to existing xls sheet or replace 
+	 * them by new data 
+	 */
 	public JExcelXLSDataFormatter(boolean append){
-		this.append = append;
+		super(append);
 	}
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#close()
+	 */
 	public void close() {
-		if (!closed) {
+		if (open) {
 			try {
 				wb.write();
 				wb.close();
-				closed = true;
+				open = false;
 			} catch (Exception e) {
 				e.printStackTrace();
 			}
 		}		
 	}
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#flush()
+	 */
 	public void flush() throws IOException {
 		wb.write();
 	}
 
-	public void init(DataRecordMetadata _metadata)
-			throws ComponentNotReadyException {
-		this.metadata = _metadata;
-
-	}
-	
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.XLSFormatter#prepareSheet()
+	 */
 	public void prepareSheet(){
 		//get or create sheet depending of its existence and append attribute
 		if (sheetName != null){
@@ -126,12 +154,13 @@
 			}
 			sheet.setColumnView(firstColumn + i, view);
 			format = metadata.getField(i).getFormatStr();
-			if (format!=null){
+			if (format!=null){//apply format coherent to metadata format
 				cellStyle[i] = metadata.getField(i).getType() == DataFieldMetadata.DATE_FIELD
 						|| metadata.getField(i).getType() == DataFieldMetadata.DATETIME_FIELD 
 						? new WritableCellFormat(new DateFormat(format))
 						: new WritableCellFormat(new NumberFormat(format));
 			}else if (metadata.getField(i).getType() == DataFieldMetadata.DATE_FIELD || metadata.getField(i).getType() == DataFieldMetadata.DATETIME_FIELD){
+				//for date it has to be set an format (else data are sensless)
 				if (metadata.getField(i).getLocaleStr() != null) {
 					format = ((SimpleDateFormat) java.text.DateFormat
 							.getDateInstance(java.text.DateFormat.DEFAULT,
@@ -143,9 +172,12 @@
 				cellStyle[i] = new WritableCellFormat(new DateFormat(format));
 			}
 		}
-		closed = false;
+		open = true;
 	}
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#setDataTarget(java.lang.Object)
+	 */
 	public void setDataTarget(Object outputDataTarget) {
 		Workbook oldWb = null;
         try{
@@ -154,7 +186,7 @@
             }
             if (oldWb != null){
             	wb = Workbook.createWorkbook((File)outputDataTarget, oldWb);
-        		closed = false;
+        		open = true;
            }else{
             	wb = Workbook.createWorkbook((File)outputDataTarget);
             }
@@ -163,6 +195,9 @@
         }
 	}
 
+    /**
+     * Method for saving names of columns
+     */
     private void saveNames() throws IOException{
 		recCounter = namesRow > -1 ? namesRow : 0;
 		WritableFont font = new WritableFont(WritableFont.ARIAL, WritableFont.DEFAULT_POINT_SIZE, WritableFont.BOLD);
@@ -182,6 +217,9 @@
 		savedNames = true;
     }
 	
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#write(org.jetel.data.DataRecord)
+	 */
 	public int write(DataRecord record) throws IOException {
 		if (!savedNames){
 			saveNames();
@@ -189,7 +227,7 @@
 		}
 		char metaType;//metadata field type
 		Object value;//field value
-		Object valueXls = null;
+		Object valueXls = null;//value to set
 		short colNum;
 		for (short i=0;i<metadata.getNumFields();i++){
 			metaType = metadata.getField(i).getType();
@@ -252,6 +290,7 @@
 			try {
 				sheet.addCell((WritableCell)valueXls);
 			}catch (RowsExceededException e) {
+				//write data to new sheet
 				savedNames = namesRow == -1;
 				setSheetNumber(-1);
 				prepareSheet();
@@ -264,49 +303,5 @@
         return 0;
 	}
 	
-	public void setSheetName(String sheetName) {
-		this.sheetName = sheetName;
-	}
 
-	public void setSheetNumber(int sheetNumber) {
-		this.sheetNumber = sheetNumber;
-	}
-	
-	public void setFirstRow(int firstRow){
-		this.firstRow = firstRow;
-	}
-
-	public void setFirstColumn(String firstColumn){
-		this.firstColumnIndex = firstColumn;
-	}
-
-	public int getFirstColumn() {
-		return firstColumn;
-	}
-
-	public void setNamesRow(int namesRow) {
-		this.namesRow = namesRow;
-	}
-
-	public boolean isAppend() {
-		return append;
-	}
-
-	public int getFirstRow() {
-		return firstRow;
-	}
-
-	public int getNamesRow() {
-		return namesRow;
-	}
-
-	public String getSheetName() {
-		return sheetName;
-	}
-
-	public int getSheetNumber() {
-		return sheetNumber;
-	}
-	
-
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/XLSDataFormatter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/XLSDataFormatter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/XLSDataFormatter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -29,7 +29,6 @@
 
 import javax.naming.InvalidNameException;
 
-import org.apache.poi.hssf.model.Workbook;
 import org.apache.poi.hssf.usermodel.HSSFCell;
 import org.apache.poi.hssf.usermodel.HSSFCellStyle;
 import org.apache.poi.hssf.usermodel.HSSFDataFormat;
@@ -39,12 +38,10 @@
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 import org.jetel.data.DataRecord;
 import org.jetel.data.primitive.Decimal;
-import org.jetel.exception.ComponentNotReadyException;
 import org.jetel.metadata.DataFieldMetadata;
-import org.jetel.metadata.DataRecordMetadata;
 
 /**
- * Writes records to xls sheet
+ * Writes records to xls sheet using POI library
  *  
 /**
 * @author avackova <agata.vackova at javlinconsulting.cz> ; 
@@ -52,37 +49,23 @@
 *	www.javlinconsulting.cz
 *	@created October 10, 2006
  */
-public class XLSDataFormatter implements XLSFormatter {
+public class XLSDataFormatter extends XLSFormatter {
 
-	private final static int CELL_NUMBER_IN_SHEET = 'Z'-'A'+1;//number of "AA" cell in excel sheet
-
 	private HSSFWorkbook wb;
 	private HSSFSheet sheet;
 	private HSSFRow row;
 	private HSSFCell cell;
 	private HSSFCellStyle[] cellStyle;
 	private HSSFDataFormat dataFormat;
-	private DataRecordMetadata metadata;
-	private FileOutputStream out;
-	private int firstRow = 0;
-	private int recCounter;
-	private int namesRow = -1;
-	private boolean append;
-	private String sheetName = null;
-	private int sheetNumber = -1;
-	private String firstColumnIndex = "A";
-	private int firstColumn;
-	private boolean savedNames = false;
 	
-	public XLSDataFormatter(boolean append){
-		this.append = append;
-	}
-
-	/* (non-Javadoc)
-	 * @see org.jetel.data.formatter.Formatter#init(org.jetel.metadata.DataRecordMetadata)
+	/**
+	 * Constructor
+	 * 
+	 * @param append indicates if append data to existing xls sheet or replace 
+	 * them by new data 
 	 */
-	public void init(DataRecordMetadata _metadata) throws ComponentNotReadyException{
-		this.metadata = _metadata;
+	public XLSDataFormatter(boolean append) {
+		super(append);
 	}
 
     /* (non-Javadoc)
@@ -101,6 +84,9 @@
         }
     }
     
+    /* (non-Javadoc)
+     * @see org.jetel.data.formatter.XLSFormatter#prepareSheet()
+     */
     public void prepareSheet(){
 		//get or create sheet depending of its existence and append attribute
 		if (sheetName != null){
@@ -155,6 +141,9 @@
 		}
     }
     
+    /**
+     * Method for saving names of columns
+     */
     private void saveNames(){
 		recCounter = namesRow > -1 ? namesRow : 0;
 		HSSFCellStyle metaStyle = wb.createCellStyle();
@@ -163,6 +152,7 @@
 		metaStyle.setFont(font);
 		row = sheet.createRow(recCounter);
 		String name;
+		//iterate over metadata
 		for (short i=0;i<metadata.getNumFields();i++){
 			cell = row.createCell((short)(firstColumn + i));
 			name = metadata.getField(i).getName();
@@ -251,87 +241,4 @@
 
 	}
 
-	public void setSheetName(String sheetName) {
-		this.sheetName = sheetName;
-	}
-
-	public void setSheetNumber(int sheetNumber) {
-		this.sheetNumber = sheetNumber;
-	}
-	
-	public void setFirstRow(int firstRow){
-		this.firstRow = firstRow;
-	}
-
-	public void setFirstColumn(String firstColumn){
-		this.firstColumnIndex = firstColumn;
-	}
-
-	public int getFirstColumn() {
-		return firstColumn;
-	}
-
-	public void setNamesRow(int namesRow) {
-		this.namesRow = namesRow;
-	}
-
-	public boolean isAppend() {
-		return append;
-	}
-
-	public int getFirstRow() {
-		return firstRow;
-	}
-
-	public int getNamesRow() {
-		return namesRow;
-	}
-
-	public String getSheetName() {
-		return sheetName;
-	}
-
-	public int getSheetNumber() {
-		return sheetNumber;
-	}
-	/**
-	 * This method calculates xls colum number from its code:
-	 * 	A='A'-65=0,B='B'-65,....,Z='Z'-65=CELL_NUMBER_IN_SHEET-1,
-	 *  XYZ = ('X'-64)*CELL_NUMBER_IN_SHEET^2+('Y'-64)*CELL_NUMBER_IN_SHEET+('Z'-65)
-	 * @param cellCode
-	 * @return column's number from its code
-	 * @throws InvalidNameException
-	 */
-	public static short getCellNum(String cellCode)throws InvalidNameException{
-		char[] cellCodeU = cellCode.toUpperCase().toCharArray();
-		int length = cellCodeU.length;
-		int cellNumber = 0;
-		for (int j=0;j<length;j++){
-			if (cellCodeU[j]<'A' || cellCodeU[j]>'Z')
-				throw new InvalidNameException("Wrong column index: " + cellCode);
-			cellNumber = cellNumber*CELL_NUMBER_IN_SHEET + (cellCodeU[j]-64);
-		}
-		cellNumber-=1;
-		if (cellNumber<0) 
-			throw new InvalidNameException("Wrong column index: " + cellCode);
-		return (short)cellNumber;
-	}
-	
-	/**
-	 * This method finds xls column code from its number (0 based)
-	 * 
-	 * @param cellNumber
-	 * @return column's code from its number
-	 */
-	public static String getCellCode(short cellNumber){
-		//invert column number to CELL_NUMBER_IN_SHEET based form
-		String cellNumberXlsBase = Integer.toString(cellNumber,CELL_NUMBER_IN_SHEET);
-		StringBuffer cellCode = new StringBuffer(cellNumberXlsBase.length());
-		//each digit except last diminished by 1 ('A'=0) invert back to decimal form
-		for (short i=0;i<cellNumberXlsBase.length()-1;i++){
-			cellCode.append((char)(Integer.parseInt(cellNumberXlsBase.substring(i,i+1),CELL_NUMBER_IN_SHEET)-1+'A'));
-		}
-		cellCode.append((char)(Integer.parseInt(cellNumberXlsBase.substring(cellNumberXlsBase.length()-1,cellNumberXlsBase.length()),CELL_NUMBER_IN_SHEET)+'A'));
-		return cellCode.toString();
-	}
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/XLSFormatter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/XLSFormatter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/formatter/XLSFormatter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,29 +1,219 @@
+/*
+*    jETeL/Clover - Java based ETL application framework.
+*    Copyright (C) 2005-06  Javlin Consulting <info at javlinconsulting.cz>
+*    
+*    This library is free software; you can redistribute it and/or
+*    modify it under the terms of the GNU Lesser General Public
+*    License as published by the Free Software Foundation; either
+*    version 2.1 of the License, or (at your option) any later version.
+*    
+*    This library is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+*    Lesser General Public License for more details.
+*    
+*    You should have received a copy of the GNU Lesser General Public
+*    License along with this library; if not, write to the Free Software
+*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*
+*/
 
 package org.jetel.data.formatter;
 
-public interface XLSFormatter extends Formatter {
+import java.io.FileOutputStream;
+
+import javax.naming.InvalidNameException;
+
+import org.jetel.exception.ComponentNotReadyException;
+import org.jetel.metadata.DataRecordMetadata;
+
+/**
+ * Formats records for xls file. Order of method calling:
+ * <ul>
+ * <li>init(DataRecordMetadata)</li>
+ * <li>setDataTarget(File) </li>
+ * <li><i>setSheetName(String)</i> or <i>setSheetNumber(int)</i> - optional</li>
+ * <li><i>setFirstRow(int)</i> - optional</li>
+ * <li><i>setFirstColumn(int)</i> - optional</li>
+ * <li><i>setNamesRow(int)</i> - optional</li>
+ * <li>prepareSheet()</li>
+ * <li>write(DataRecord)</li>
+ * <li>close()</li></ul>
+ * 
+ * @author avackova (agata.vackova at javlinconsulting.cz) ; 
+ * (c) JavlinConsulting s.r.o.
+ *  www.javlinconsulting.cz
+ *
+ * @since Jan 15, 2007
+ *
+ */
+public abstract class XLSFormatter implements Formatter {
 	
-	public void prepareSheet();
+	protected final static int CELL_NUMBER_IN_SHEET = 'Z'-'A'+1;//number of "AA" cell in excel sheet
 
-	public void setSheetName(String sheetName);
+	protected DataRecordMetadata metadata;
+	protected FileOutputStream out;
+	protected int firstRow = 0;
+	protected int recCounter;
+	protected int namesRow = -1;
+	protected boolean append;
+	protected String sheetName = null;
+	protected int sheetNumber = -1;
+	protected String firstColumnIndex = "A";
+	protected int firstColumn;
+	protected boolean savedNames = false;
 
-	public void setSheetNumber(int sheetNumber);
+	/**
+	 * Constructor
+	 * 
+	 * @param append indicates if append data to existing xls sheet or replace 
+	 * them by new data 
+	 */
+	public XLSFormatter(boolean append){
+		this.append = append;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.jetel.data.formatter.Formatter#init(org.jetel.metadata.DataRecordMetadata)
+	 */
+	public void init(DataRecordMetadata _metadata) throws ComponentNotReadyException{
+		this.metadata = _metadata;
+	}
+
+	/**
+	 * Prepares sheet in xls file, which was set by method setSheetName(String sheetName)
+	 *  or setSheetNumber(int sheetNumber) for saving data. If any of above methods wasn't
+	 *  called there is created new sheet with default name.
+	 */
+	public abstract void prepareSheet();
+
+	/**
+	 * Set name of sheet, data will be written to. It has higher prioryty then
+	 * setSheetNumber method
+	 * 
+	 * @param sheetName
+	 */
+	public void setSheetName(String sheetName) {
+		this.sheetName = sheetName;
+	}
+
+	/**
+	 * Set number of sheet, data will be written to. If there was called method
+	 * setSheetName before calling prepareSheet, this number will be ignored.
+	 * 
+	 * @param sheetNumber
+	 */
+	public void setSheetNumber(int sheetNumber) {
+		this.sheetNumber = sheetNumber;
+	}
 	
-	public void setFirstRow(int firstRow);
+	/**
+	 * Sets the number of row (0-based), for first data record.
+	 * 
+	 * @param firstRow
+	 */
+	public void setFirstRow(int firstRow){
+		this.firstRow = firstRow;
+	}
 
-	public void setFirstColumn(String firstColumn);
+	/**
+	 * Sets the code of first column 
+	 * 
+	 * @param firstColumn: "A","B",..,"AA",...
+	 */
+	public void setFirstColumn(String firstColumn){
+		this.firstColumnIndex = firstColumn;
+	}
 
-	public int getFirstColumn();
+	/**
+	 * @return code of first column ("A","B",..,"AA",...)
+	 */
+	public int getFirstColumn() {
+		return firstColumn;
+	}
 
-	public void setNamesRow(int namesRow);
+	/**
+	 * Sets the number of row, that metadata names will be save
+	 * 
+	 * @param namesRow
+	 */
+	public void setNamesRow(int namesRow) {
+		this.namesRow = namesRow;
+	}
 
-	public boolean isAppend();
+	/**
+	 * @return if data will be appent to currently set sheet or will be replaced by new data
+	 */
+	public boolean isAppend() {
+		return append;
+	}
 
-	public int getFirstRow() ;
+	/**
+	 * @return number of first data row
+	 */
+	public int getFirstRow() {
+		return firstRow;
+	}
 
-	public int getNamesRow();
+	/**
+	 * @return number of row with names of columns
+	 */
+	public int getNamesRow() {
+		return namesRow;
+	}
 
-	public String getSheetName();
+	/**
+	 * @return sheet name, which was set by setSheetName method
+	 */
+	public String getSheetName() {
+		return sheetName;
+	}
 
-	public int getSheetNumber();
+	/**
+	 * @return sheet number, which was set by setSheetNumber method
+	 */
+	public int getSheetNumber() {
+		return sheetNumber;
+	}
+
+	/**
+	 * This method calculates xls colum number from its code:
+	 * 	A='A'-65=0,B='B'-65,....,Z='Z'-65=CELL_NUMBER_IN_SHEET-1,
+	 *  XYZ = ('X'-64)*CELL_NUMBER_IN_SHEET^2+('Y'-64)*CELL_NUMBER_IN_SHEET+('Z'-65)
+	 * @param cellCode
+	 * @return column's number from its code
+	 * @throws InvalidNameException
+	 */
+	public static short getCellNum(String cellCode)throws InvalidNameException{
+		char[] cellCodeU = cellCode.toUpperCase().toCharArray();
+		int length = cellCodeU.length;
+		int cellNumber = 0;
+		for (int j=0;j<length;j++){
+			if (cellCodeU[j]<'A' || cellCodeU[j]>'Z')
+				throw new InvalidNameException("Wrong column index: " + cellCode);
+			cellNumber = cellNumber*CELL_NUMBER_IN_SHEET + (cellCodeU[j]-64);
+		}
+		cellNumber-=1;
+		if (cellNumber<0) 
+			throw new InvalidNameException("Wrong column index: " + cellCode);
+		return (short)cellNumber;
+	}
+	
+	/**
+	 * This method finds xls column code from its number (0 based)
+	 * 
+	 * @param cellNumber
+	 * @return column's code from its number
+	 */
+	public static String getCellCode(int cellNumber){
+		//invert column number to CELL_NUMBER_IN_SHEET based form
+		String cellNumberXlsBase = Integer.toString(cellNumber,CELL_NUMBER_IN_SHEET);
+		StringBuffer cellCode = new StringBuffer(cellNumberXlsBase.length());
+		//each digit except last diminished by 1 ('A'=0) invert back to decimal form
+		for (short i=0;i<cellNumberXlsBase.length()-1;i++){
+			cellCode.append((char)(Integer.parseInt(cellNumberXlsBase.substring(i,i+1),CELL_NUMBER_IN_SHEET)-1+'A'));
+		}
+		cellCode.append((char)(Integer.parseInt(cellNumberXlsBase.substring(cellNumberXlsBase.length()-1,cellNumberXlsBase.length()),CELL_NUMBER_IN_SHEET)+'A'));
+		return cellCode.toString();
+	}
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/lookup/LookupTable.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/lookup/LookupTable.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/lookup/LookupTable.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -156,9 +156,4 @@
 	 */
 	public void free();
 	
-    /**
-     * NOTE: copy from GraphElement
-     */
-    public abstract ConfigurationStatus checkConfig(ConfigurationStatus status);
-
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/CloverDataParser.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/CloverDataParser.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/CloverDataParser.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -181,6 +181,7 @@
             int i=0;
             do {
                 ByteBufferUtils.reload(recordBuffer,recordFile);
+                recordBuffer.flip();
                 i++;
             }while (i*Defaults.DEFAULT_INTERNAL_IO_BUFFER_SIZE < idx);
             recordBuffer.position((int)idx%Defaults.DEFAULT_INTERNAL_IO_BUFFER_SIZE);
@@ -208,6 +209,7 @@
 		if (recordBuffer.remaining() < LEN_SIZE_SPECIFIER) {
 			try {
 				ByteBufferUtils.reload(recordBuffer,recordFile);
+				recordBuffer.flip();
 			} catch (IOException e) {
 				throw new JetelException(e.getLocalizedMessage());
 			}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/DelimitedDataParser.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -43,6 +43,7 @@
 import org.jetel.metadata.DataFieldMetadata;
 import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.util.QuotingDecoder;
+import org.jetel.util.StringUtils;
 
 /**
  *  Parsing delimited text data. Supports delimiters with the length of up to 32
@@ -389,7 +390,10 @@
                             try{
                                 fieldStringBuffer.put((char) character);
                             }catch(BufferOverflowException ex){
-                                throw new IOException("Field too long or can not find delimiter ["+String.valueOf(delimiters[fieldCounter])+"]");
+                                throw new IOException(
+										"Field too long or can not find delimiter ["
+												+ StringUtils.specCharToString(String
+																.valueOf(delimiters[fieldCounter]))						+ "]\n");
                             }
 						}
 						delimiterPosition = 0;
@@ -450,11 +454,13 @@
 			record.getField(fieldNum).fromString(strData);
 		} catch (BadDataFormatException bdfe) {
 			if(exceptionHandler != null ) {  //use handler only if configured
-                exceptionHandler.populateHandler(getErrorMessage(bdfe.getMessage(),data,recordCounter, fieldNum), record, -1, fieldNum, strData, bdfe);
+                exceptionHandler.populateHandler(getErrorMessage(bdfe
+						.getMessage(), data, recordCounter, fieldNum), record,
+						-1, fieldNum, "\"" + StringUtils.specCharToString(strData) + "\"", bdfe);
 			} else {
                 bdfe.setRecordNumber(recordCounter);
                 bdfe.setFieldNumber(fieldNum);
-                bdfe.setOffendingValue(strData);
+                bdfe.setOffendingValue("\"" + StringUtils.specCharToString(strData) + "\"");
                 throw bdfe;
 			}
 		} catch (Exception ex) {

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/JExcelXLSDataParser.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/JExcelXLSDataParser.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/JExcelXLSDataParser.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,7 +1,28 @@
 
+/*
+*    jETeL/Clover - Java based ETL application framework.
+*    Copyright (C) 2005-06  Javlin Consulting <info at javlinconsulting.cz>
+*    
+*    This library is free software; you can redistribute it and/or
+*    modify it under the terms of the GNU Lesser General Public
+*    License as published by the Free Software Foundation; either
+*    version 2.1 of the License, or (at your option) any later version.
+*    
+*    This library is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+*    Lesser General Public License for more details.
+*    
+*    You should have received a copy of the GNU Lesser General Public
+*    License along with this library; if not, write to the Free Software
+*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*
+*/
+
 package org.jetel.data.parser;
 
 import java.io.InputStream;
+import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.Map;
 
@@ -14,12 +35,24 @@
 
 import org.jetel.data.DataRecord;
 import org.jetel.data.Defaults;
+import org.jetel.data.formatter.XLSDataFormatter;
+import org.jetel.data.formatter.XLSFormatter;
 import org.jetel.exception.BadDataFormatException;
 import org.jetel.exception.ComponentNotReadyException;
 import org.jetel.exception.JetelException;
 import org.jetel.metadata.DataFieldMetadata;
 import org.jetel.util.StringUtils;
 
+/**
+ * Parsing data from xls file using JExcelAPI.
+ * 
+ * @author avackova (agata.vackova at javlinconsulting.cz) ; 
+ * (c) JavlinConsulting s.r.o.
+ *  www.javlinconsulting.cz
+ *
+ * @since Jan 16, 2007
+ *
+ */
 public class JExcelXLSDataParser extends XLSParser {
 	
 	private Workbook wb;
@@ -27,10 +60,16 @@
 	private Cell cell;
 	private String charset = null;
 	
+	/**
+	 * Default constructor
+	 */
 	public JExcelXLSDataParser() {
 		charset = Defaults.DataParser.DEFAULT_CHARSET_DECODER;
 	}
 	
+	/**
+	 * @param charset
+	 */
 	public JExcelXLSDataParser(String charset) {
 		this.charset = charset;
 	}
@@ -74,8 +113,25 @@
 
 	@Override
 	public String[] getNames() {
-		// TODO Auto-generated method stub
-		return null;
+		ArrayList<String> names = new ArrayList<String>();
+		if (metadataRow > -1) {
+			Cell[] row = sheet.getRow(metadataRow);
+			//go through each not empty cell
+			for (int i=0;i<row.length;i++){
+				cell = row[i];
+				names.add(XLSFormatter.getCellCode(cell.getColumn()) + " - " +
+						cell.getContents());
+			}
+		}else{
+			Cell[] row = sheet.getRow(firstRow);
+			for (int i=0;i<row.length;i++){
+				cell = row[i];
+				names.add(XLSDataFormatter.getCellCode(cell.getColumn()) + " - " +
+						cell.getContents().substring(0, Math.min(
+								cell.getContents().length(), MAX_NAME_LENGTH)));
+			}
+		}
+		return names.toArray(new String[0]);
 	}
 
 	@Override
@@ -107,12 +163,16 @@
 	@Override
 	protected DataRecord parseNext(DataRecord record) throws JetelException {
 		if (currentRow>=lastRow) return null;
-//		row = sheet.getRow(currentRow);
 		char type;
 		for (short i=0;i<fieldNumber.length;i++){
 			if (fieldNumber[i][CLOVER_NUMBER] == -1) continue; //in metdata there is not any field corresponding to this column
-			cell = sheet.getCell(fieldNumber[i][XLS_NUMBER], currentRow);
-// 			cell = row.getCell((short)fieldNumber[i][XLS_NUMBER]);
+			try {
+				cell = sheet.getCell(fieldNumber[i][XLS_NUMBER], currentRow);
+			} catch (ArrayIndexOutOfBoundsException e1) {
+				//more fields in metadata then in xls file
+				record.getField(fieldNumber[i][CLOVER_NUMBER]).setNull(true);
+				continue;
+			}
 			type = metadata.getField(fieldNumber[i][CLOVER_NUMBER]).getType();
 			try{
 				switch (type) {
@@ -153,23 +213,6 @@
 					}
 				}
 			}
-//			catch (NullPointerException np){// empty cell
-//				try {
-//					record.getField(fieldNumber[i][CLOVER_NUMBER]).setNull(true);
-//				}catch (BadDataFormatException ex){
-//					BadDataFormatException bdfe = new BadDataFormatException(np.getMessage());
-//					bdfe.setRecordNumber(currentRow+1);
-//					bdfe.setFieldNumber(fieldNumber[i][CLOVER_NUMBER]);
-//					if(exceptionHandler != null ) {  //use handler only if configured
-//		                exceptionHandler.populateHandler(
-//		                		getErrorMessage(bdfe.getMessage(), currentRow+1, fieldNumber[i][CLOVER_NUMBER]), 
-//		                		record,	currentRow + 1, fieldNumber[i][CLOVER_NUMBER], "null", bdfe);
-//					} else {
-//						throw new RuntimeException(getErrorMessage(bdfe.getMessage(), 
-//								currentRow + 1, fieldNumber[i][CLOVER_NUMBER]));
-//					}
-//				}
-//			}
 		}
 		currentRow++;
 		recordCounter++;

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/XLSDataParser.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/XLSDataParser.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/XLSDataParser.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -41,7 +41,7 @@
 import org.jetel.util.StringUtils;
 
 /**
- * Parsing data from xls file.
+ * Parsing data from xls file using POI library.
  * 
 /**
 * @author avackova <agata.vackova at javlinconsulting.cz> ; 
@@ -106,17 +106,20 @@
 				switch (type) {
 				case DataFieldMetadata.DATE_FIELD:
 				case DataFieldMetadata.DATETIME_FIELD:
-					record.getField(fieldNumber[i][CLOVER_NUMBER]).setValue(cell.getDateCellValue());
+					record.getField(fieldNumber[i][CLOVER_NUMBER]).setValue(
+							cell.getDateCellValue());
 					break;
 				case DataFieldMetadata.BYTE_FIELD:
 				case DataFieldMetadata.STRING_FIELD:
-					record.getField(fieldNumber[i][CLOVER_NUMBER]).fromString(getStringFromCell(cell));
+					record.getField(fieldNumber[i][CLOVER_NUMBER]).fromString(
+							getStringFromCell(cell));
 					break;
 				case DataFieldMetadata.DECIMAL_FIELD:
 				case DataFieldMetadata.INTEGER_FIELD:
 				case DataFieldMetadata.LONG_FIELD:
 				case DataFieldMetadata.NUMERIC_FIELD:
-					record.getField(fieldNumber[i][CLOVER_NUMBER]).setValue(cell.getNumericCellValue());
+					record.getField(fieldNumber[i][CLOVER_NUMBER]).setValue(
+							cell.getNumericCellValue());
 					break;
 				}
 			} catch (NumberFormatException bdne) {//exception when trying get date or number from not numeric cell
@@ -267,6 +270,9 @@
 		// TODO Auto-generated method stub
 	}
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.XLSParser#getNames()
+	 */
 	public String[] getNames(){
 		ArrayList<String> names = new ArrayList<String>();
 		if (metadataRow > -1) {

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/XLSParser.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/XLSParser.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/parser/XLSParser.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,4 +1,24 @@
 
+/*
+*    jETeL/Clover - Java based ETL application framework.
+*    Copyright (C) 2005-06  Javlin Consulting <info at javlinconsulting.cz>
+*    
+*    This library is free software; you can redistribute it and/or
+*    modify it under the terms of the GNU Lesser General Public
+*    License as published by the Free Software Foundation; either
+*    version 2.1 of the License, or (at your option) any later version.
+*    
+*    This library is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+*    Lesser General Public License for more details.
+*    
+*    You should have received a copy of the GNU Lesser General Public
+*    License along with this library; if not, write to the Free Software
+*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*
+*/
+
 package org.jetel.data.parser;
 
 import java.util.Map;
@@ -15,6 +35,28 @@
 import org.jetel.exception.PolicyType;
 import org.jetel.metadata.DataRecordMetadata;
 
+/**
+ * Parses data from xls file. Order of method calling:
+ * <ul>
+ * <li>init(DataRecordMetadata)</li>
+ * <li><i>setSheetName(String)</i> or <i>setSheetNumber(int)</i> - optional</li>
+ * <li><i>setFirstRow(int)</i> - optional</li>
+ * <li><i>setMappingType(int)</i> - optional</li>
+ * <li><i>setCloverFields(int)</i> - optional (depending on mapping type)</li>
+ * <li><i>setXlsFields(int)</i> - optional (depending on mapping type)</li>
+ * <li><i>setMetadataRow(int)</i> - optional (depending on mapping type)</li>
+ * <li>setDataSource(InputStream) </li>
+ * <li><i>getNames()</i> - optional</li>
+ * <li>getNext(DataRecord)</li>
+ * <li>close()</li></ul>
+ * 
+ * @author avackova (agata.vackova at javlinconsulting.cz) ; 
+ * (c) JavlinConsulting s.r.o.
+ *  www.javlinconsulting.cz
+ *
+ * @since Jan 16, 2007
+ *
+ */
 public abstract class XLSParser implements Parser {
 
 	public final static int NO_METADATA_INFO = 0;
@@ -45,12 +87,21 @@
 	protected final static int MAX_NAME_LENGTH = 10;
 
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.Parser#close()
+	 */
 	public abstract void close() ;
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.Parser#setExceptionHandler(org.jetel.exception.IParserExceptionHandler)
+	 */
 	public void setExceptionHandler(IParserExceptionHandler handler) {
         this.exceptionHandler = handler;
 	}
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.Parser#getExceptionHandler()
+	 */
 	public IParserExceptionHandler getExceptionHandler() {
         return exceptionHandler;
 	}
@@ -74,8 +125,18 @@
 		return record;
 	}
 
+	/**
+	 * An operation that produces next record from Input data or null
+	 * 
+	 * @param record to fill
+	 * @return The Next value
+	 * @throws JetelException
+	 */
 	protected abstract DataRecord parseNext(DataRecord record) throws JetelException;
 	
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.Parser#getNext(org.jetel.data.DataRecord)
+	 */
 	public DataRecord getNext(DataRecord record) throws JetelException {
 		record = parseNext(record);
 		if(exceptionHandler != null ) {  //use handler only if configured
@@ -87,6 +148,9 @@
 		return record;
 	}
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.Parser#getPolicyType()
+	 */
 	public PolicyType getPolicyType() {
         if(exceptionHandler != null) {
             return exceptionHandler.getType();
@@ -94,13 +158,22 @@
         return null;
 	}
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.Parser#init(org.jetel.metadata.DataRecordMetadata)
+	 */
 	public void init(DataRecordMetadata _metadata)throws ComponentNotReadyException{
 		this.metadata = _metadata;
 	}
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.Parser#setDataSource(java.lang.Object)
+	 */
 	public abstract void setDataSource(Object inputDataSource) throws ComponentNotReadyException;
 
 
+	/* (non-Javadoc)
+	 * @see org.jetel.data.parser.Parser#skip(int)
+	 */
 	public int skip(int nRec) throws JetelException {
 		currentRow+=nRec;
 		return nRec;
@@ -221,30 +294,64 @@
 	protected abstract void cloverfieldsAndXlsNames(Map fieldNames)
 		throws ComponentNotReadyException;
 
+	/**
+	 * Sets xls sheet for reading data
+	 * 
+	 * @param sheetName
+	 */
 	public void setSheetName(String sheetName) {
 		this.sheetName = sheetName;
 	}
 
+	/**
+	 * Sets row, which data will be read from
+	 * 
+	 * @param firstRecord
+	 */
 	public void setFirstRow(int firstRecord) {
 		this.firstRow = firstRecord;
 	}
 
+	/**
+	 * Row, wchich was set by setFirstRow method
+	 * 
+	 * @return
+	 */
 	public int getFirstRow() {
 		return firstRow;
 	}
 
+	/**
+	 * Gets number, which was set by setSheetNumber method
+	 * 
+	 * @return
+	 */
 	public int getSheetNumber() {
 		return sheetNumber;
 	}
 
+	/**
+	 * @return numbers of read records
+	 */
 	public int getRecordCount() {
 		return recordCounter;
 	}
 
+	/**
+	 * Sets clover fields for mapping metadata with xls columns
+	 * 
+	 * @param cloverFields
+	 */
 	public void setCloverFields(String[] cloverFields) {
 		this.cloverFields = cloverFields;
 	}
 
+	/**
+	 * Sets row, names of columns will be read from
+	 * 
+	 * @param metadataRow
+	 * @throws ComponentNotReadyException
+	 */
 	public void setMetadataRow(int metadataRow) throws ComponentNotReadyException{
 		if (metadataRow < 0) 
 			throw new ComponentNotReadyException("Number of metadata row has to be greter then 0");
@@ -254,14 +361,35 @@
 		}
 	}
 
+	/**
+	 * Sets columns' names for mapping metadata with xls columns
+	 * 
+	 * @param xlsFields
+	 */
 	public void setXlsFields(String[] xlsFields) {
 		this.xlsFields = xlsFields;
 	}
 
+	/**
+	 * Sets number of xls sheet, data will be read from
+	 * 
+	 * @param sheetNumber
+	 */
 	public void setSheetNumber(int sheetNumber) {
 		this.sheetNumber = sheetNumber;
 	}
 
+	/**
+	 * Sets mapping type between xls columns and metadata 
+	 * 
+	 * @param mappingType: <ul>
+	 * <li>NO_METADATA_INFO - cell order coresponds with field order in metadata</li>
+	 * <li>ONLY_CLOVER_FIELDS  - cells are read in order of clover fields</li>
+	 * <li>CLOVER_FIELDS_AND_XLS_NUMBERS - mapping between coresponding fields and cells</li>
+	 * <li>CLOVER_FIELDS_AND_XLS_NAMES - mapping between coresponding fields and cells</li>
+	 * <li>MAP_NAMES - finds fields in metadata with the same names as names in xls sheet</li>
+	 * </ul>
+	 */
 	public void setMappingType(int mappingType) {
 		this.mappingType = mappingType;
 		switch (mappingType) {
@@ -273,14 +401,24 @@
 		}
 	}
 
+	/**
+	 * @return number, which was set by setMetadataRow method
+	 */
 	public int getMetadataRow() {
 		return metadataRow;
 	}
 
+	/**
+	 * @return String, which was set by setSheetName method
+	 */
 	public String getSheetName() {
 		return sheetName;
 	}
 
+	/**
+	 * @return array with names from row set by setMetadataRow method 
+	 * (or setFirstRow if metadata row was not been set)  
+	 */
 	public abstract String[] getNames();
 
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/sequence/Sequence.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/sequence/Sequence.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/data/sequence/Sequence.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -85,11 +85,6 @@
     public boolean isPersistent();
     
     /**
-     * NOTE: copy from GraphElement
-     */
-    public abstract ConfigurationStatus checkConfig(ConfigurationStatus status);
-
-    /**
      * Initializes sequence object. It is called after the sequence class is instantiated.
      * All necessary internal initialization should be performed in this method.
      * NOTE: copy from GraphElement

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/database/IConnection.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/database/IConnection.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/database/IConnection.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -30,23 +30,6 @@
 //    public void connect();
 
     /**
-     * NOTE: copy from GraphElement
-     */
-    public abstract ConfigurationStatus checkConfig(ConfigurationStatus status);
-
-    /**
-     * NOTE: copy from GraphElement
-     */
-    public abstract void init() throws ComponentNotReadyException;
-
-    /**
-     * Closes the sequence (current instance). All internal resources should be freed in
-     * this method.
-     * NOTE: copy from GraphElement
-     */
-    public abstract void free();
-
-    /**
      * Creates clover metadata from this connection. Used by DataRecordMetadataStub
      * for definition metadata from connection.
      * For example - in JDBC connection is expected parameter sqlQuery for definition metadata.

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/DirectEdge.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/DirectEdge.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/DirectEdge.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -146,7 +146,7 @@
 	        }
 	        record.deserialize(readBuffer);
 	    }catch(BufferUnderflowException ex){
-	        throw new IOException(ex.getMessage());
+	        throw new IOException("BufferUnderflow when reading/deserializing record");
 	    }
         bufferedRecords.decrementAndGet();
         
@@ -183,7 +183,7 @@
 	        readBuffer.limit(readBufferLimit);
 	        record.flip();
 	    }catch(BufferUnderflowException ex){
-	        throw new IOException(ex.getMessage());
+            throw new IOException("BufferUnderflow when reading/deserializing record");
 	    }
         bufferedRecords.decrementAndGet();
 	    
@@ -224,7 +224,8 @@
             record.serialize(tmpDataRecord);
         } catch (BufferOverflowException ex) {
             throw new IOException(
-                    "Internal buffer is not big enough to accomodate data record ! (See MAX_RECORD_SIZE parameter)");
+                    "Internal buffer is not big enough to accomodate data record ! (See MAX_RECORD_SIZE parameter)"+
+                    "\n [actual record size: "+record.getSizeSerialized()+" bytes]");
         }
         tmpDataRecord.flip();
         int length = tmpDataRecord.remaining();
@@ -269,7 +270,8 @@
             writeBuffer.put(record);
         } catch (BufferOverflowException ex) {
             throw new IOException(
-                    "WriteBuffer is not big enough to accomodate data record !");
+                    "WriteBuffer is not big enough to accomodate data record ! (See MAX_RECORD_SIZE parameter)"+
+                    "\n [actual record size: "+record.rewind().remaining()+" bytes]");
         }
 
         byteCounter += dataLength;
@@ -331,7 +333,7 @@
             flushWriteBuffer();
             
 	    }catch(InterruptedException ex){
-	        throw new RuntimeException(ex.getClass().getName()+":"+ex.getMessage());
+	        throw new RuntimeException("Interrupted "+ex.getClass().getName()+":"+ex.getMessage());
 	    }
 	}
 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/Node.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/Node.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/Node.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -74,6 +74,7 @@
 
 	protected Result runResult;
     protected Throwable resultException;
+    protected String resultMessage;
 	
     protected Phase phase;
 
@@ -360,7 +361,12 @@
 	public void run() {
         runResult=Result.RUNNING; // set running result, so we know run() method was started
         try {
-            runResult = execute();
+            if((runResult = execute()) == Result.ERROR) {
+                Message msg = Message.createErrorMessage(this,
+                        new ErrorMsgBody(runResult.code(), 
+                                resultMessage != null ? resultMessage : runResult.message(), null));
+                getCloverRuntime().sendMessage(msg);
+            }
         } catch (IOException ex) {  // may be handled differently later
             runResult=Result.ERROR;
             resultException = ex;
@@ -788,13 +794,6 @@
         port.close();
     }
 
-	/* (non-Javadoc)
-	 * @see org.jetel.graph.GraphElement#free()
-	 */
-	public void free() {
-        super.free();
-	}
-    
 	/**
 	 *  Compares this Node to specified Object
 	 *

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/Phase.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/Phase.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/Phase.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -29,6 +29,7 @@
 import org.jetel.exception.ConfigurationStatus;
 import org.jetel.exception.GraphConfigurationException;
 import org.jetel.graph.runtime.NodeTrackingDetail;
+import org.jetel.graph.runtime.TrackingDetail;
 
 /**
  * A class that represents processing Phase of Transformation Graph
@@ -58,7 +59,7 @@
 	private int phaseMemUtilization;
 	private Result result;
     private boolean isCheckPoint;
-    private Map<String,NodeTrackingDetail> tracking;
+    private Map<String,TrackingDetail> tracking;
 
 	protected TransformationGraph graph;
 
@@ -412,7 +413,7 @@
      * @return the tracking
      * @since 10.1.2007
      */
-    public Map<String, NodeTrackingDetail> getTracking() {
+    public Map<String, TrackingDetail> getTracking() {
         return tracking;
     }
 
@@ -421,7 +422,7 @@
      * @param tracking the tracking to set
      * @since 10.1.2007
      */
-    public void setTracking(Map<String, NodeTrackingDetail> tracking) {
+    public void setTracking(Map<String, TrackingDetail> tracking) {
         this.tracking = tracking;
     }
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/TransformationGraph.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/TransformationGraph.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/TransformationGraph.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -24,6 +24,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
+import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -62,6 +63,8 @@
 
 public final class TransformationGraph {
 
+    public static final String PROPERTY_PROJECT_DIR = "PROJECT_DIR";
+    
 	private Map <Integer,Phase> phases;
 
 	private Map <String,Node> nodes;
@@ -96,7 +99,8 @@
 	
 	private int trackingInterval = Defaults.WatchDog.DEFAULT_WATCHDOG_TRACKING_INTERVAL;
 
-
+	private URL projectURL;
+    
     public TransformationGraph() {
         this(null);
     }
@@ -208,6 +212,29 @@
         }
     }
     
+    /**
+     * Returns URL from PROJECT_DIR graph property value.
+     * It is used as context URL for conversion from relative to absolute path.
+     * @return 
+     */
+    private boolean firstCallprojectURL = true;
+    public URL getProjectURL() {
+        if(firstCallprojectURL) {
+            firstCallprojectURL = false;
+            String projectURLStr = getGraphProperties().getStringProperty(PROPERTY_PROJECT_DIR);
+            
+            if(projectURLStr != null) {
+                try {
+                    projectURL = FileUtils.getFileURL(null, projectURLStr);
+                } catch (MalformedURLException e) {
+                    logger.warn("Home project dir is not in valid URL format - " + projectURLStr);
+                }
+            }
+        }
+
+        return projectURL;
+    }
+    
 	/**
 	 *  Gets the IConnection object asssociated with the name provided
 	 *
@@ -309,31 +336,39 @@
 	 * @since     April 2, 2002
 	 */
 	public Result run() {
-		long timestamp = System.currentTimeMillis();
-		watchDog = new WatchDog(this, phasesArray, trackingInterval);
+        long timestamp = System.currentTimeMillis();
+        watchDog = new WatchDog(this, phasesArray, trackingInterval);
 
-		logger.info("Starting WatchDog thread ...");
-		watchDog.start();
-		try {
-			watchDog.join();
-		} catch (InterruptedException ex) {
-			logger.error(ex);
-			return Result.ABORTED;
-		}
-		logger.info("WatchDog thread finished - total execution time: " 
-				+ (System.currentTimeMillis() - timestamp) / 1000
-				+ " (sec)");
+        logger.info("Starting WatchDog thread ...");
+        watchDog.start();
+        try {
+            watchDog.join();
+        } catch (InterruptedException ex) {
+            logger.error(ex);
+            return Result.ABORTED;
+        }
+        logger.info("WatchDog thread finished - total execution time: "
+                + (System.currentTimeMillis() - timestamp) / 1000 + " (sec)");
 
-		freeResources();
+        freeResources();
 
-		if (watchDog.getStatus() == Result.FINISHED_OK) {
-			logger.info("Graph execution finished successfully");
-		} else {
-			logger.error("!!! Graph execution finished with errors !!!");
-		}
+        switch (watchDog.getStatus()) {
+        case FINISHED_OK:
+            logger.info("Graph execution finished successfully");
+            break;
+        case ABORTED:
+            logger.error("!!! Graph execution aborted !!!");
+            break;
+        case ERROR:
+            logger.error("!!! Graph execution finished with errors !!!");
+            break;
+        default:
+            logger.fatal("Unexpected result when executing graph !");
+        }
+        
         return watchDog.getStatus();
 
-	}
+    }
 
 
 
@@ -580,6 +615,7 @@
 	 */
 	public void addConnection(String name, IConnection connection) {
 		connections.put(name, connection);
+        connection.setGraph(this);
 	}
 
 	/**
@@ -591,6 +627,7 @@
 	 */
 	public void addSequence(String name, Sequence seq) {
 		sequences.put(name, seq);
+        seq.setGraph(this);
 	}
 
 	/**
@@ -601,6 +638,7 @@
 	 */
 	public void addLookupTable(String name, LookupTable lookupTable) {
 		lookupTables.put(name, lookupTable);
+        lookupTable.setGraph(this);
 	}
 
 	/**
@@ -715,10 +753,12 @@
 		if (graphProperties == null) {
 			graphProperties = new TypedProperties();
 		}
-        URL url = FileUtils.getFileURL(fileURL);
-        if(url == null) {
+        URL url;
+        try {
+            url = FileUtils.getFileURL(getProjectURL(), fileURL);
+        } catch(MalformedURLException e) {
             logger.error("Wrong URL/filename of file specified: " + fileURL);
-            throw new IOException("Wrong URL/filename of file specified: " + fileURL);
+            throw e;
         }
         InputStream inStream = new BufferedInputStream(url.openStream());
 		graphProperties.load(inStream);
@@ -734,10 +774,12 @@
         if (graphProperties == null) {
             graphProperties = new TypedProperties();
         }
-        URL url = FileUtils.getFileURL(fileURL);
-        if(url == null) {
+        URL url; 
+        try {
+            url = FileUtils.getFileURL(getProjectURL(), fileURL);
+        } catch(MalformedURLException e) {
             logger.error("Wrong URL/filename of file specified: " + fileURL);
-            throw new IOException("Wrong URL/filename of file specified: " + fileURL);
+            throw e;
         }
         InputStream inStream = new BufferedInputStream(url.openStream());
         graphProperties.loadSafe(inStream);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/TransformationGraphXMLReaderWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/TransformationGraphXMLReaderWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/TransformationGraphXMLReaderWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -632,7 +632,7 @@
 	            if (attributes.exists("fileURL")){
 	                String fileURL = attributes.getString("fileURL");
 	               try{
-                    graph.loadGraphPropertiesSafe(fileURL);
+	                   graph.loadGraphPropertiesSafe(fileURL);
                    }catch(IOException ex){
                        throw new XMLConfigurationException("Can't load property definition from "+fileURL,ex); 
                    }

Copied: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java (from rev 2346, trunk/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java)
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java	2007-01-22 10:22:16 UTC (rev 2346)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMX.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -0,0 +1,201 @@
+/*
+ *    jETeL/Clover - Java based ETL application framework.
+ *    Copyright (C) 2002-06  David Pavlis <david.pavlis at centrum.cz> and others.
+ *    
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License as published by the Free Software Foundation; either
+ *    version 2.1 of the License, or (at your option) any later version.
+ *    
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+ *    Lesser General Public License for more details.
+ *    
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * Created on 9.1.2007
+ *
+ * TODO To change the template for this generated file go to
+ * Window - Preferences - Java - Code Style - Code Templates
+ */
+package org.jetel.graph.runtime;
+
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+
+import javax.management.*; 
+
+public class CloverJMX extends NotificationBroadcasterSupport  implements CloverJMXMBean {
+
+    private long sequenceNumber = 1;
+    private String runningGraphName;
+    private String cloverVersion;
+    private int runingPhase;
+    private int runningNodes;
+    private long runTimeMS;
+    private WatchDog watchDog;
+    
+    
+    private Map<String,TrackingDetail> trackingMap;
+    
+    public CloverJMX(WatchDog watchDog){
+        StringBuilder str=new StringBuilder(30);
+      //  str.append(org.jetel.util.JetelVersion.getMajorVersion()).append('.');
+      //  str.append(org.jetel.util.JetelVersion.getMinorVersion()).append(" build# ");
+      //  str.append(org.jetel.util.JetelVersion.getBuildNumber()).append(" compiled ");
+      //  str.append(org.jetel.util.JetelVersion.getBuildDatetime());
+        
+        cloverVersion=str.toString();
+        this.watchDog=watchDog;
+    }
+    
+   
+    public String getCloverVersion() {
+       return cloverVersion;
+    }
+
+    public String getRunningGraphName() {
+        return runningGraphName;
+    }
+
+    public long getRunningGraphTime() {
+        return runTimeMS;
+    }
+
+    public int getRunningPhase() {
+        return runingPhase;
+    }
+
+    public int getRunningNodesCount() {
+        return runningNodes;
+    }
+
+    public TrackingDetail getTrackingDetail(String nodeID){
+        return trackingMap.get(nodeID);
+        
+    }
+    
+    public String getTrackingDetailString(String nodeID){
+        TrackingDetail detail=trackingMap.get(nodeID);
+        if (detail!=null){
+            StringBuilder str=new StringBuilder(60);
+            str.append(detail.getNodeId()).append(';');
+            str.append(detail.getNumInputPorts()).append(';');
+            str.append(detail.getNumOutputPorts()).append(';');
+            for(int i=0;i<detail.getNumInputPorts();i++){
+                str.append(detail.getTotalRows(TrackingDetail.IN_PORT, i)).append(';');
+            }
+            for(int i=0;i<detail.getNumOutputPorts();i++){
+                str.append(detail.getTotalRows(TrackingDetail.OUT_PORT, i)).append(';');
+            }
+            return str.toString();
+        }
+        return "";
+    }
+
+    public String[] getNodesList(){
+         return trackingMap.keySet().toArray(new String[trackingMap.size()]);
+    }
+    
+    public int getUpdateInterval() {
+        // TODO Auto-generated method stub
+        return 0;
+    }
+
+    public void setUpdateInterval(int updateInterval) {
+        // TODO Auto-generated method stub
+
+    }
+
+    public void stopGraphExecution() {
+        watchDog.stopRun();
+
+    }
+    
+    public synchronized void updated() { 
+        Notification n = 
+            new AttributeChangeNotification(this, 
+                        sequenceNumber++, 
+                        System.currentTimeMillis(), 
+                        "Tracking updated", 
+                        "Tracking", 
+                        "int", 
+                        -1/*oldSize*/, 
+                        1/*this.cacheSize*/); 
+ 
+    sendNotification(n); 
+    } 
+    
+    public synchronized void phaseUpdated() { 
+        Notification n = 
+            new AttributeChangeNotification(this, 
+                        sequenceNumber++, 
+                        System.currentTimeMillis(), 
+                        "Phase updated", 
+                        "Phase", 
+                        "int", 
+                        -1/*oldSize*/, 
+                        runingPhase); 
+ 
+    sendNotification(n); 
+    } 
+ 
+    @Override 
+    public MBeanNotificationInfo[] getNotificationInfo() { 
+        String[] types = new String[] { 
+            AttributeChangeNotification.ATTRIBUTE_CHANGE 
+        }; 
+        String name = AttributeChangeNotification.class.getName(); 
+        String description = "An attribute of this MBean has changed"; 
+        MBeanNotificationInfo info = 
+            new MBeanNotificationInfo(types, name, description); 
+        return new MBeanNotificationInfo[] {info}; 
+    }
+
+    /**
+     * @param trackingMap the trackingMap to set
+     * @since 17.1.2007
+     */
+    public void setTrackingMap(Map<String, TrackingDetail> trackingMap) {
+        this.trackingMap = trackingMap;
+    }
+
+    /**
+     * @param runingPhase the runingPhase to set
+     * @since 17.1.2007
+     */
+    public void setRuningPhase(int runingPhase) {
+        this.runingPhase = runingPhase;
+        phaseUpdated();
+    }
+
+    /**
+     * @param runningGraphName the runningGraphName to set
+     * @since 17.1.2007
+     */
+    public void setRunningGraphName(String runningGraphName) {
+        this.runningGraphName = runningGraphName;
+    }
+
+    /**
+     * @param runTimeSec the runTimeSec to set
+     * @since 17.1.2007
+     */
+    public void setRunTime(long runTimeSec) {
+        this.runTimeMS = runTimeSec;
+    }
+
+
+    /**
+     * @param runningNodes the runningNodes to set
+     * @since 17.1.2007
+     */
+    public void setRunningNodes(int runningNodes) {
+        this.runningNodes = runningNodes;
+    } 
+
+}

Copied: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMXMBean.java (from rev 2346, trunk/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMXMBean.java)
===================================================================
--- trunk/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMXMBean.java	2007-01-22 10:22:16 UTC (rev 2346)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/CloverJMXMBean.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -0,0 +1,47 @@
+/*
+ *    jETeL/Clover - Java based ETL application framework.
+ *    Copyright (C) 2002-06  David Pavlis <david.pavlis at centrum.cz> and others.
+ *    
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License as published by the Free Software Foundation; either
+ *    version 2.1 of the License, or (at your option) any later version.
+ *    
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
+ *    Lesser General Public License for more details.
+ *    
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * Created on 9.1.2007
+ *
+ * TODO To change the template for this generated file go to
+ * Window - Preferences - Java - Code Style - Code Templates
+ */
+package org.jetel.graph.runtime;
+
+import java.util.List;
+
+public interface CloverJMXMBean {
+  
+    public String getCloverVersion();
+    
+    public int getUpdateInterval();
+    public void setUpdateInterval(int updateInterval);
+    
+    public int getRunningPhase();
+    public String getRunningGraphName();
+    public long getRunningGraphTime();
+    
+    public int getRunningNodesCount();
+    public String[] getNodesList();
+    
+    public TrackingDetail getTrackingDetail(String nodeID);
+    public String getTrackingDetailString(String nodeID);
+    
+    public void stopGraphExecution();
+    
+}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/NodeTrackingDetail.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/NodeTrackingDetail.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/NodeTrackingDetail.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -48,6 +48,8 @@
     private long totalCPUTime;
     private long totalUserTime;
     private float usageCPU;
+    private float peakUsageCPU;
+    private float peakUsageUser;
     private float usageUser;
     private int avgWaitingTime;
     private int waitingRows[];
@@ -69,6 +71,7 @@
     public void clear(){
         timestamp=timespan=0;
         totalUserTime=totalCPUTime=0;
+        peakUsageCPU=peakUsageUser=0;
         /*Arrays.fill(totalRows,0);
         Arrays.fill(totalBytes,0);
         Arrays.fill(avgRows,0);
@@ -158,8 +161,10 @@
     public void updateRunTime(long cpuTime,long userTime,long systemTime){
         double time=cpuTime;
         usageCPU=(float)time/systemTime;
+        if (usageCPU>peakUsageCPU) peakUsageCPU=usageCPU;
         time=userTime;
         usageUser=(float)time/systemTime;
+        if (usageUser>peakUsageUser) peakUsageUser=usageUser;
         if (cpuTime<0) return;
         totalCPUTime=cpuTime;
         totalUserTime=userTime;
@@ -226,5 +231,21 @@
     public float getUsageUser() {
         return usageUser;
     }
+
+    /**
+     * @return the peakUsageCPU
+     * @since 23.1.2007
+     */
+    public float getPeakUsageCPU() {
+        return peakUsageCPU;
+    }
+
+    /**
+     * @return the peakUsageUser
+     * @since 23.1.2007
+     */
+    public float getPeakUsageUser() {
+        return peakUsageUser;
+    }
     
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/TrackingDetail.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/TrackingDetail.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/TrackingDetail.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -47,6 +47,8 @@
     public int getNumOutputPorts();
     public Result getResult();
     public float getUsageCPU();
+    public float getPeakUsageCPU();
     public float getUsageUser();
+    public float getPeakUsageUser();
     
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/WatchDog.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/WatchDog.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/graph/runtime/WatchDog.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -36,6 +36,13 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.locks.LockSupport;
 
+import javax.management.InstanceAlreadyExistsException;
+import javax.management.MBeanRegistrationException;
+import javax.management.MBeanServer;
+import javax.management.MalformedObjectNameException;
+import javax.management.NotCompliantMBeanException;
+import javax.management.ObjectName;
+
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jetel.data.Defaults;
@@ -73,6 +80,8 @@
     private DuplicateKeyMap outMsgMap;
     private Throwable causeException;
     private String causeNodeID;
+    private CloverJMX mbean;
+    private volatile boolean runIt;
     
     private PrintTracking printTracking;
 
@@ -126,13 +135,17 @@
 	/**  Main processing method for the WatchDog object */
 	public void run() {
 		watchDogStatus = Result.RUNNING;
+        runIt=true;
 		logger.info("Thread started.");
 		logger.info("Running on " + javaRuntime.availableProcessors() + " CPU(s)"
-			+ " max available memory for JVM " + javaRuntime.freeMemory() / 1024 + " KB");
+			+ " max available memory for JVM " + javaRuntime.maxMemory() / 1024 + " KB");
 		// renice - lower the priority
 		setPriority(Thread.MIN_PRIORITY);
 		
         printTracking=new PrintTracking();
+       
+        mbean=registerTrackingMBean();
+        mbean.setRunningGraphName(this.graph.getName());
 
         //disabled by Kokon
 //        Thread trackingThread=new Thread(printTracking, TRACKING_LOGGER_NAME);
@@ -140,11 +153,16 @@
 //        trackingThread.start();
         
 		for (currentPhaseNum = 0; currentPhaseNum < phases.length; currentPhaseNum++) {
-			if (!executePhase(phases[currentPhaseNum])) {
-				watchDogStatus = Result.ERROR;
+			switch( executePhase(phases[currentPhaseNum]) ){
+            case ABORTED:
+                watchDogStatus = Result.ABORTED;
+                logger.error("!!! Phase execution aborted !!!");
+                return;
+            case ERROR:
+                watchDogStatus = Result.ERROR;
 				logger.error("!!! Phase finished with error - stopping graph run !!!");
 				return;
-			}
+            }
 			// force running of garbage collector
 			logger.info("Forcing garbage collection ...");
 			javaRuntime.runFinalization();
@@ -157,6 +175,38 @@
 		printPhasesSummary();
 	}
 
+
+    /**
+     * 
+     * @since 17.1.2007
+     */
+    private CloverJMX registerTrackingMBean() {
+       mbean = new CloverJMX(this);
+        // register MBean
+        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
+
+        // Construct the ObjectName for the MBean we will register
+        try {
+            ObjectName name = new ObjectName(
+                    "org.jetel.graph.runtime:type=CloverJMX");
+            // Register the  MBean
+            mbs.registerMBean(mbean, name);
+
+        } catch (MalformedObjectNameException ex) {
+            ex.printStackTrace();
+        } catch (InstanceAlreadyExistsException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+        } catch (MBeanRegistrationException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+        } catch (NotCompliantMBeanException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+        }
+        return mbean;
+    }
+
     public void runPhase(int phaseNo){
         watchDogStatus = Result.RUNNING;
         logger.info("Thread started.");
@@ -178,7 +228,12 @@
             }
         }
         if (currentPhaseNum>=0){
-            if (!executePhase(phases[currentPhaseNum])) {
+            switch( executePhase(phases[currentPhaseNum]) ) {
+            case ABORTED:
+                watchDogStatus = Result.ABORTED;
+                logger.error("!!! Phase execution aborted !!!");
+                return;
+            case ERROR:
                 watchDogStatus = Result.ERROR;
                 logger.error("!!! Phase finished with error - stopping graph run !!!");
                 return;
@@ -216,7 +271,7 @@
 		long currentTimestamp;
 		long startTimestamp;
         long startTimeNano;
-        Map<String,NodeTrackingDetail> tracking=new LinkedHashMap<String,NodeTrackingDetail>(phase.getNodes().size());
+        Map<String,TrackingDetail> tracking=new LinkedHashMap<String,TrackingDetail>(phase.getNodes().size());
         List<Node> leafNodes;
         
         // let's create a copy of leaf nodes - we will watch them
@@ -232,9 +287,12 @@
         startTimeNano=System.nanoTime();
         
         printTracking.setTrackingInfo(tracking, phase.getPhaseNum());
+        mbean.setRuningPhase(phase.getPhaseNum());
+        mbean.setTrackingMap(tracking);
+        mbean.updated();
 	
         // entering the loop awaiting completion of work by all leaf nodes
-		while (true) {
+		while (runIt) {
             // wait on error message queue
             message=inMsgQueue.poll(Defaults.WatchDog.WATCHDOG_SLEEP_INTERVAL, TimeUnit.MILLISECONDS);
             if (message != null) {
@@ -244,9 +302,10 @@
                     logger
                             .fatal("!!! Fatal Error !!! - graph execution is aborting");
                     logger.error("Node " + message.getSenderID()
-                            + " finished with error: " +
+                            + " finished with status: " +
                             ((ErrorMsgBody)message.getBody()).getErrorMessage()+
-                            "caused by:"+ causeException);
+                            " caused by: "+ causeException.getMessage());
+                    logger.debug("Node "+ message.getSenderID()+" error details:", causeException);
                     abort();
                     // printProcessingStatus(phase.getNodes().iterator(),
                     // phase.getPhaseNum());
@@ -285,6 +344,7 @@
 					leafNodesIterator.remove();
 				}
 			}
+            
             //  -----------------------------------
 			//  from time to time perform some task
             //  -----------------------------------
@@ -301,7 +361,7 @@
                 // gather tracking information
                 for (Node node : phase.getNodes()){
                     String nodeId=node.getId();
-                    NodeTrackingDetail trackingDetail=tracking.get(nodeId);
+                    NodeTrackingDetail trackingDetail=(NodeTrackingDetail)tracking.get(nodeId);
                     int inPortsNum=node.getInPorts().size();
                     int outPortsNum=node.getOutPorts().size();
                     if (trackingDetail==null){
@@ -342,8 +402,23 @@
                     //printProcessingStatus(phase.getNodes().iterator(), phase.getPhaseNum());
                     printTracking.execute(); // print tracking
                     lastTimestamp = currentTimestamp;
+                    
+                    // update mbean & signal that it was updated
+                    mbean.setRunningNodes(leafNodes.size());
+                    mbean.setRunTime(currentTimestamp-startTimestamp);
+                    mbean.updated();
                 }
             }
+        if (!runIt){
+            // we were forced to stop execution, stop all Nodes
+            logger.error("User has interrupted graph execution !!!");
+            abort();
+            causeNodeID=null;
+            causeException=null;
+            return Result.ABORTED;
+        }else{
+            return Result.FINISHED_OK;
+        }
 			
 	}
 
@@ -351,8 +426,9 @@
 	/**
 	 *  Gets the Status of the WatchDog
 	 *
-	 * @return	0 READY, -1 ERROR, 1 RUNNING, 2 FINISHED OK    
+	 * @return	Result of WatchDog run-time    
 	 * @since     July 30, 2002
+     * @see     org.jetel.graph.Result
 	 */
 	public Result getStatus() {
 		return watchDogStatus;
@@ -379,6 +455,7 @@
 	 * @since    July 29, 2002
 	 */
 	public void abort() {
+        watchDogStatus=Result.ABORTED;
 		Iterator iterator = currentPhase.getNodes().iterator();
 		Node node;
 
@@ -417,13 +494,13 @@
 	 * @param  phase  Description of the Parameter
 	 * @return        Description of the Return Value
 	 */
-	private boolean executePhase(Phase phase) {
+	private Result executePhase(Phase phase) {
 		currentPhase = phase;
 		//phase.checkConfig();
 		// init phase
 		if (!phase.init()) {
 			// something went wrong !
-			return false;
+			return Result.ERROR;
 		}
 		logger.info("Starting up all nodes in phase [" + phase.getPhaseNum() + "]");
 		startUpNodes(phase);
@@ -450,7 +527,7 @@
         //end of phase, destroy it
 		phase.free();
         
-		return (watchDogStatus==Result.FINISHED_OK) ? true : false;
+		return watchDogStatus;
 	}
 
 	/*
@@ -480,7 +557,7 @@
 	}
     
 	class PrintTracking implements Runnable{
-	    Map<String,NodeTrackingDetail> tracking;
+	    Map<String,TrackingDetail> tracking;
         int phaseNo;
         Log trackingLogger;
         volatile boolean run;
@@ -491,7 +568,7 @@
             run=true;
         }
         
-        void setTrackingInfo(Map<String,NodeTrackingDetail> tracking, int phaseNo){
+        void setTrackingInfo(Map<String,TrackingDetail> tracking, int phaseNo){
             this.tracking=tracking;
             this.phaseNo=phaseNo;
         }
@@ -656,6 +733,16 @@
     public String getCauseNodeID() {
         return causeNodeID;
     }
+
+
+    /**
+     * Stop execution of graph
+     * 
+     * @since 29.1.2007
+     */
+    public void stopRun() {
+        this.runIt = false;
+    }
     
     
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/interpreter/TransformLangExecutor.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1503,6 +1503,43 @@
         }
         stack.storeVar(node.localVar, node.varSlot, value);
         
+        if (node.jjtGetNumChildren()>0){
+            node.jjtGetChild(0).jjtAccept(this, data);
+            Object initValue=stack.pop();
+            
+            try {
+                if (value instanceof Numeric) {
+                        ((Numeric) value).setValue((Numeric) initValue);
+                } else if (value instanceof StringBuilder) {
+                    StringBuilder var = (StringBuilder) value;
+                    var.setLength(0);
+                    StringUtils.strBuffAppend(var,(CharSequence) initValue);
+                } else if (value instanceof Boolean) {
+                    stack.storeVar(node.localVar,node.varSlot, (Boolean)initValue); // boolean is not updatable - we replace the reference
+                    // stack.put(varName,((Boolean)value).booleanValue() ?
+                    // Stack.TRUE_VAL : Stack.FALSE_VAL);
+                } else if (value instanceof Date) {
+                    ((Date) value).setTime(((Date) initValue).getTime());
+                } else {
+                    throw new TransformLangExecutorRuntimeException(node,
+                            "unknown variable \"" + node.name + "\"");
+                }
+            } catch (ClassCastException ex) {
+                throw new TransformLangExecutorRuntimeException(node,
+                        "invalid assignment of \"" + initValue + "\" to variable \""
+                                + node.name + "\" - incompatible data types");
+            } catch (NumberFormatException ex){
+                throw new TransformLangExecutorRuntimeException(node,
+                        "invalid assignment of number \"" + initValue + "\" to variable \"" + node.name + "\" : "+ex.getMessage());    
+            } catch (TransformLangExecutorRuntimeException ex){
+                throw ex;
+            } catch (Exception ex){
+                throw new TransformLangExecutorRuntimeException(node,
+                        "invalid assignment of \"" + value + "\" to variable \"" + node.name + "\" : "+ex.getMessage());  
+            }
+            
+        }
+        
         return data;
     }
 
@@ -1564,7 +1601,7 @@
     
     public Object visit(CLVFMapping node, Object data) {
         DataField field=outputRecords[node.recordNo].getField(node.fieldNo);
-        int arity=node.arity; // how many children we have defined
+        int arity=node.jjtGetNumChildren(); // how many children we have defined
         Object value=null;
         try{
             // we try till success or no more options
@@ -1578,19 +1615,11 @@
                     }else{
                         field.setValue(value);
                     }
-                }catch(BadDataFormatException ex){
-                    if (i == arity)
+                    break; // success during assignment, finish looping
+               }catch(Exception ex){
+                    if (i == arity-1)
                         throw ex;
-                    else
-                        continue;
-                    
-                }catch(Exception ex){
-                    if (i == arity)
-                        throw ex;
-                    else
-                        continue;
-                }
-                break; // success during assignment, finish looping
+               }
             }
             
         }catch(BadDataFormatException ex){
@@ -1610,7 +1639,6 @@
                     +") - assigning \"" + value + "\" ("+(value!=null ? value.getClass(): "unknown class" )+")");
             
         }
-        
         return data;
     }
     

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/interpreter/TransformLangParser.jjt
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/interpreter/TransformLangParser.jjt	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/interpreter/TransformLangParser.jjt	2007-01-31 14:29:53 UTC (rev 2420)
@@ -405,6 +405,9 @@
     t = <IDENTIFIER>{
      if (!parserHelper.addVariable(t.image)){
        throw new ParseException(t, "variable ["+t.image+"] already declared");
       }
      else {
        // is it local variable declaration ?
 
		if (parserHelper.inFunctionDeclaration){
          jjtThis.setVarSlot(parserHelper.getLocalVariableSlot(t.image));
          jjtThis.setLocalVariale(true);
        }
        else {
          jjtThis.setVarSlot(parserHelper.getGlobalVariableSlot(t.image));
          jjtThis.setLocalVariale(false);
        }
        jjtThis.setName(t.image);
      }
    }
+    
+    ["=" ConditionalOrExpression()]
+    
  }catch (ParseException e){
    parseExceptions.add(e);
//following code causes parser to cough     
 //do {
//      t = getNextToken();
//    }
//    while (t.kind != SEMICOLON);
  }
}
 
@@ -436,7 +439,7 @@
   	)
   	<MAPPING> 
   	
-  	ConditionalOrExpression() (":" ConditionalOrExpression())* {jjtThis.setArity(jjtree.nodeArity());}
+  	ConditionalOrExpression() (":" ConditionalOrExpression())*
 }
 
 /* Other nonterminals and their productions */

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/main/runGraph.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/main/runGraph.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/main/runGraph.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -155,136 +155,154 @@
 	 * @param  args  Description of the Parameter
 	 */
 	public static void main(String args[]) {
-		boolean verbose = false;
+        boolean verbose = false;
         boolean loadFromSTDIN = false;
-		Properties properties = new Properties();
-		int trackingInterval=-1;
-		String pluginsRootDirectory = null;
+        Properties properties = new Properties();
+        int trackingInterval = -1;
+        String pluginsRootDirectory = null;
         String password = null;
         String logHost = null;
-		
-		System.out.println("***  CloverETL framework/transformation graph runner ver "+RUN_GRAPH_VERSION+", (c) 2002-06 D.Pavlis, released under GNU Lesser General Public License  ***");
-		System.out.println(" Running with framework version: "+JetelVersion.MAJOR_VERSION+"."+JetelVersion.MINOR_VERSION+" build#"+JetelVersion.BUILD_NUMBER+" compiled "+JetelVersion.LIBRARY_BUILD_DATETIME);
-		System.out.println();
-        
-		if (args.length < 1) {
-			printHelp();
-			System.exit(-1);
-		}
-        
-		// process command line arguments
-		for (int i = 0; i < args.length; i++) {
-			if (args[i].startsWith(VERBOSE_SWITCH)) {
-				verbose = true;
-			}else if (args[i].startsWith(PROPERTY_FILE_SWITCH)){
-				i++;
-				try {
-					InputStream inStream = new BufferedInputStream(new FileInputStream(args[i]));
-					properties.load(inStream);
-				} catch (IOException ex) {
-					logger.error(ex.getMessage(), ex);
-					System.exit(-1);
-				}
-			}else if (args[i].startsWith(PROPERTY_DEFINITION_SWITCH)){
-			   	//String[] nameValue=args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,"").split("=");
-				//properties.setProperty(nameValue[0],nameValue[1]);
-		    	String tmp =  args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,"");
-        	    properties.setProperty(tmp.substring(0,tmp.indexOf("=")),tmp.substring(tmp.indexOf("=") +1)); 
-			}else if (args[i].startsWith(TRACKING_INTERVAL_SWITCH)) {
-				i++;
-                try{
+
+        System.out
+                .println("***  CloverETL framework/transformation graph runner ver "
+                        + RUN_GRAPH_VERSION
+                        + ", (c) 2002-06 D.Pavlis, released under GNU Lesser General Public License  ***");
+        System.out.println(" Running with framework version: "
+                + JetelVersion.MAJOR_VERSION + "." + JetelVersion.MINOR_VERSION
+                + " build#" + JetelVersion.BUILD_NUMBER + " compiled "
+                + JetelVersion.LIBRARY_BUILD_DATETIME);
+        System.out.println();
+
+        if (args.length < 1) {
+            printHelp();
+            System.exit(-1);
+        }
+
+        // process command line arguments
+        for (int i = 0; i < args.length; i++) {
+            if (args[i].startsWith(VERBOSE_SWITCH)) {
+                verbose = true;
+            } else if (args[i].startsWith(PROPERTY_FILE_SWITCH)) {
+                i++;
+                try {
+                    InputStream inStream = new BufferedInputStream(
+                            new FileInputStream(args[i]));
+                    properties.load(inStream);
+                } catch (IOException ex) {
+                    logger.error(ex.getMessage(), ex);
+                    System.exit(-1);
+                }
+            } else if (args[i].startsWith(PROPERTY_DEFINITION_SWITCH)) {
+                // String[]
+                // nameValue=args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,"").split("=");
+                // properties.setProperty(nameValue[0],nameValue[1]);
+                String tmp = args[i].replaceFirst(PROPERTY_DEFINITION_SWITCH,
+                        "");
+                properties.setProperty(tmp.substring(0, tmp.indexOf("=")), tmp
+                        .substring(tmp.indexOf("=") + 1));
+            } else if (args[i].startsWith(TRACKING_INTERVAL_SWITCH)) {
+                i++;
+                try {
                     trackingInterval = Integer.parseInt(args[i]);
-                }catch(NumberFormatException ex){
-                    System.err.println("Invalid tracking parameter: \""+args[i]+"\"");
+                } catch (NumberFormatException ex) {
+                    System.err.println("Invalid tracking parameter: \""
+                            + args[i] + "\"");
                     System.exit(-1);
                 }
-			}else if (args[i].startsWith(INFO_SWITCH)){
-			    printInfo();
-			    System.exit(0);
-            }else if (args[i].startsWith(PLUGINS_SWITCH)){
+            } else if (args[i].startsWith(INFO_SWITCH)) {
+                printInfo();
+                System.exit(0);
+            } else if (args[i].startsWith(PLUGINS_SWITCH)) {
                 i++;
                 pluginsRootDirectory = args[i];
-            }else if (args[i].startsWith(PASSWORD_SWITCH)){
+            } else if (args[i].startsWith(PASSWORD_SWITCH)) {
                 i++;
-                password = args[i]; 
-            }else if (args[i].startsWith(LOAD_FROM_STDIN_SWITCH)){
-                loadFromSTDIN=true;
-            }else if (args[i].startsWith(LOG_HOST_SWITCH)){
+                password = args[i];
+            } else if (args[i].startsWith(LOAD_FROM_STDIN_SWITCH)) {
+                loadFromSTDIN = true;
+            } else if (args[i].startsWith(LOG_HOST_SWITCH)) {
                 i++;
-                logHost = args[i]; 
-            }else if (args[i].startsWith("-")) {
-				System.err.println("Unknown option: "+args[i]);
-				System.exit(-1);
+                logHost = args[i];
+            } else if (args[i].startsWith("-")) {
+                System.err.println("Unknown option: " + args[i]);
+                System.exit(-1);
             }
-		}
+        }
 
-        //setup log4j appenders
-        if(logHost != null) {
+        // setup log4j appenders
+        if (logHost != null) {
             String[] hostAndPort = logHost.split(":");
-            if(hostAndPort[0].length() == 0 || hostAndPort.length > 2) {
-                System.err.println("Invalid log destination, i.e. -loghost localhost:4445");
+            if (hostAndPort[0].length() == 0 || hostAndPort.length > 2) {
+                System.err
+                        .println("Invalid log destination, i.e. -loghost localhost:4445");
                 System.exit(-1);
             }
             int port = 4445;
             try {
-                if(hostAndPort.length == 2) {
+                if (hostAndPort.length == 2) {
                     port = Integer.parseInt(hostAndPort[1]);
                 }
-            } catch(NumberFormatException e) {
-                System.err.println("Invalid log destination, i.e. -loghost localhost:4445");
+            } catch (NumberFormatException e) {
+                System.err
+                        .println("Invalid log destination, i.e. -loghost localhost:4445");
                 System.exit(-1);
             }
-            Logger.getRootLogger().addAppender(new SocketAppender(hostAndPort[0], port));
+            Logger.getRootLogger().addAppender(
+                    new SocketAppender(hostAndPort[0], port));
         }
 
-        //engine initialization - should be called only once
+        // engine initialization - should be called only once
         runGraph.initEngine(pluginsRootDirectory, password);
-        
-		//prapere input stream with XML graph definition
+
+        // prapere input stream with XML graph definition
         InputStream in = null;
         if (loadFromSTDIN) {
             System.out.println("Graph definition loaded from STDIN");
             in = System.in;
         } else {
-            System.out.println("Graph definition file: " + args[args.length - 1]);
-            URL fileURL = FileUtils.getFileURL(args[args.length - 1]);
-            if(fileURL == null) {
-                System.err.println("Error - graph definition file can't be read.");
-                System.exit(-1);
-            }
-            try{
-                in=fileURL.openStream();
+            System.out.println("Graph definition file: "
+                    + args[args.length - 1]);
+            try {
+                URL fileURL = FileUtils.getFileURL(null, args[args.length - 1]);
+                in = fileURL.openStream();
             } catch (IOException e) {
-                System.err.println("Error - graph definition file can't be read: " + e.getMessage());
+                System.err
+                        .println("Error - graph definition file can't be read: "
+                                + e.getMessage());
                 System.exit(-1);
             }
         }
-        
-        //loading graph from the input stream
+
+        // loading graph from the input stream
         TransformationGraph graph = null;
         try {
             graph = runGraph.loadGraph(in, properties);
 
-            //check graph elements configuration
-            ConfigurationStatus status = graph.checkConfig(null);
+            // check graph elements configuration
             logger.info("Checking graph configuration...");
-            status.log();
+            try {
+                ConfigurationStatus status = graph.checkConfig(null);
+                status.log();
+            } catch(Exception e) {
+                logger.error("Checking graph failed! (" + e.getMessage() + ")");
+            }
 
-            if(!graph.init()) {
-                throw new GraphConfigurationException("Graph initialization failed.");
+            if (!graph.init()) {
+                throw new GraphConfigurationException(
+                        "Graph initialization failed.");
             }
 
             if (verbose) {
-                //this can be called only after graph.init()
+                // this can be called only after graph.init()
                 graph.dumpGraphConfiguration();
             }
-        }catch(XMLConfigurationException ex){
+        } catch (XMLConfigurationException ex) {
             logger.error("Error in reading graph from XML !", ex);
             if (verbose) {
                 ex.printStackTrace(System.err);
             }
             System.exit(-1);
-        }catch(GraphConfigurationException ex){
+        } catch (GraphConfigurationException ex) {
             logger.error("Error - graph's configuration invalid !", ex);
             if (verbose) {
                 ex.printStackTrace(System.err);
@@ -297,35 +315,42 @@
             }
             System.exit(-1);
         }
-        
+
         // set tracking interval
-		if(trackingInterval!=-1){
-			graph.setTrackingInterval(trackingInterval*1000);
-		}
-		
-		//	start all Nodes (each node is one thread)
-		Result result=Result.N_A;
-		try {
+        if (trackingInterval != -1) {
+            graph.setTrackingInterval(trackingInterval * 1000);
+        }
+
+        // start all Nodes (each node is one thread)
+        Result result = Result.N_A;
+        try {
             result = graph.run();
-		} catch (RuntimeException ex) {
-			System.err.println("Fatal error during graph run !");
-			System.err.println(ex.getCause().getMessage());
-			if (verbose) {
-				ex.printStackTrace();
-			}
-			System.exit(-1);
-		}
-		if (result==Result.FINISHED_OK) {
-			// everything O.K.
-			System.out.println("Execution of graph successful !");
-			System.exit(0);
-		} else {
-			// something FAILED !!
-			System.err.println("Execution of graph failed !");
-			System.exit(result.code());
-		}
+        } catch (RuntimeException ex) {
+            System.err.println("Fatal error during graph run !");
+            System.err.println(ex.getCause().getMessage());
+            if (verbose) {
+                ex.printStackTrace();
+            }
+            System.exit(-1);
+        }
+        switch (result) {
 
-	}
+        case FINISHED_OK:
+            // everything O.K.
+            System.out.println("Execution of graph successful !");
+            System.exit(0);
+            break;
+        case ABORTED:
+            // execution was ABORTED !!
+            System.err.println("Execution of graph aborted !");
+            System.exit(result.code());
+            break;
+        default:
+            System.err.println("Execution of graph failed !");
+            System.exit(result.code());
+        }
+
+    }
     
     
 	private static void printHelp() {

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataFieldMetadata.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataFieldMetadata.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataFieldMetadata.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -92,7 +92,7 @@
 	 *
 	 *   [record name].[field name]
 	 */
-	private String codeStr;
+//	private String codeStr;
 
 	private TypedProperties fieldProperties;
 	
@@ -249,7 +249,7 @@
 		ret.setType(getType());
 		ret.setNullable(isNullable());
 		ret.setDefaultValueStr(getDefaultValueStr());
-		ret.setCodeStr(getCodeStr());
+//		ret.setCodeStr(getCodeStr());
 		ret.setLocaleStr(getLocaleStr());
 
 		//copy record properties
@@ -497,9 +497,9 @@
 	 *
 	 * @param  codeStr
 	 */
-	public void setCodeStr(String codeStr) {
-		this.codeStr = codeStr;
-	}
+//	public void setCodeStr(String codeStr) {
+//		this.codeStr = codeStr;
+//	}
 
 
 	/**
@@ -507,9 +507,9 @@
 	 *
 	 * @return
 	 */
-	public String getCodeStr() {
-		return codeStr;
-	}
+//	public String getCodeStr() {
+//		return codeStr;
+//	}
 
 
 	/**

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadata.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadata.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadata.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -29,6 +29,7 @@
 import java.util.Properties;
 
 import org.jetel.exception.InvalidGraphObjectNameException;
+import org.jetel.util.BitArray;
 import org.jetel.util.StringUtils;
 import org.jetel.util.TypedProperties;
 
@@ -51,8 +52,9 @@
 	/**
 	 * @since
 	 */
-	private List fields;
-
+	private List<DataFieldMetadata> fields;
+	private BitArray fieldNullSwitch;
+    
 	private Map fieldNames;
 	private Map fieldTypes;
 
@@ -61,6 +63,7 @@
 	private String[] recordDelimiters;
 	private short recordSize;
 	private String localeStr;
+    private short numNullableFields;
 
 	private TypedProperties recordProperties;
 
@@ -99,11 +102,13 @@
 			throw new InvalidGraphObjectNameException(_name,"RECORD");
 		}
 		this.name = _name;
-		this.fields = new ArrayList();
+		this.fields = new ArrayList<DataFieldMetadata>();
 		fieldNames = new HashMap();
 		fieldTypes = new HashMap();
 		recordProperties = null;
 		localeStr=null;
+        numNullableFields=0;
+        fieldNullSwitch=new BitArray();
 	}
 
 	/**
@@ -337,6 +342,16 @@
 	private void structureChanged() {
 	    fieldNames.clear();
 	    fieldTypes.clear();
+        numNullableFields=0;
+        fieldNullSwitch.resize(fields.size());
+        int count=0;
+        for(DataFieldMetadata fieldMeta: fields){
+            if (fieldMeta.isNullable()){
+                numNullableFields++;
+                fieldNullSwitch.set(count);
+            }
+            count++;
+        }
 	}
 	
 	/**  Description of the Method */
@@ -607,6 +622,39 @@
     	}
     	return result;
     }
+
+
+    /**
+     * Determine whether DataRecord described by this metadata
+     * has at least one field which may contain a NULL value.<br>
+     * 
+     * @return true if at least nullable field is present otherwise false
+     * @since 18.1.2007
+     */
+    public boolean isNullable() {
+        return numNullableFields!=0;
+    }
+
+
+    /**
+     * Returns BitArray where bits are set for fields
+     * which may contain NULL.
+     * 
+     * @return the fieldNullSwitch
+     * @since 18.1.2007
+     */
+    public BitArray getFieldsNullSwitches() {
+        return fieldNullSwitch;
+    }
+
+
+    /**
+     * @return the countNullableFields
+     * @since 18.1.2007
+     */
+    public short getNumNullableFields() {
+        return numNullableFields;
+    }
     
 }
 /*

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadataXMLReaderWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadataXMLReaderWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/DataRecordMetadataXMLReaderWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -367,12 +367,12 @@
 					}
 				}
 
-				if (field.getCodeStr() != null) {
-				    Element codeElement = doc.createElement(CODE_ELEMENT);
-				    fieldElement.appendChild(codeElement);
-				    Text codeText = doc.createTextNode(field.getCodeStr());
-				    codeElement.appendChild(codeText);
-				}
+//				if (field.getCodeStr() != null) {
+//				    Element codeElement = doc.createElement(CODE_ELEMENT);
+//				    fieldElement.appendChild(codeElement);
+//				    Text codeText = doc.createTextNode(field.getCodeStr());
+//				    codeElement.appendChild(codeText);
+//				}
 
 			}
 		}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/MetadataFactory.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/MetadataFactory.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/metadata/MetadataFactory.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -21,11 +21,11 @@
 
 import java.io.BufferedInputStream;
 import java.io.IOException;
-import java.net.MalformedURLException;
 import java.net.URL;
 import java.sql.SQLException;
 
 import org.jetel.graph.TransformationGraph;
+import org.jetel.util.FileUtils;
 import org.w3c.dom.DOMException;
 
 
@@ -49,22 +49,12 @@
 	 * @see	org.jetel.metadata.DataRecordMetadata
 	 */
 	public static DataRecordMetadata fromFile(TransformationGraph graph, String fileURL) throws IOException {
-		URL url;
-		try{
-			url = new URL(fileURL); 
-		}catch(MalformedURLException e){
-			// try to patch the url
-			try {
-				url=new URL("file:"+fileURL);
-			}catch(MalformedURLException ex){
-				throw new RuntimeException("Wrong URL of file specified: "+ex.getMessage());
-			}
-		}
+		URL url = FileUtils.getFileURL(graph.getProjectURL(), fileURL);
+        
 		DataRecordMetadata recordMetadata;
 		DataRecordMetadataXMLReaderWriter metadataXMLRW = new DataRecordMetadataXMLReaderWriter(graph);
 		try{
-		recordMetadata=metadataXMLRW.read(
-				new BufferedInputStream(url.openStream()));
+		recordMetadata=metadataXMLRW.read(new BufferedInputStream(url.openStream()));
 			if (recordMetadata==null){
 				throw new RuntimeException("Can't parse metadata definition file: "+fileURL);
 			}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/plugin/PluginClassLoader.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/plugin/PluginClassLoader.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/plugin/PluginClassLoader.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -22,6 +22,7 @@
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -42,21 +43,25 @@
 
     private PluginDescriptor[] importPlugins;
     
-    public PluginClassLoader(ClassLoader parent, PluginDescriptor pluginDescriptor, URL[] urls) {
-        super(urls, parent);
+    /**
+     * Constructor.
+     * @param parent
+     * @param pluginDescriptor
+     */
+    public PluginClassLoader(ClassLoader parent, PluginDescriptor pluginDescriptor) {
+        super(pluginDescriptor.getLibraryURLs(), parent);
         
         this.pluginDescriptor = pluginDescriptor;
         collectImports();
     }
 
-    
     /**
-     * Collect all plugin descriptors, on which depeneds this plugin. 
+     * Collect all plugin descriptors, on which depends this plugin. 
      */
     private void collectImports() {
         PluginDescriptor pluginDescriptor;
         Collection prerequisites = getPluginDescriptor().getPrerequisites();
-        List importPlugins = new ArrayList();
+        List<PluginDescriptor> importPlugins = new ArrayList<PluginDescriptor>();
         
         for(Iterator it = prerequisites.iterator(); it.hasNext();) {
             PluginPrerequisite prerequisite = (PluginPrerequisite) it.next();
@@ -66,69 +71,53 @@
             }
         }
         
-        this.importPlugins = (PluginDescriptor[]) importPlugins.toArray(new PluginDescriptor[importPlugins.size()]);
+        this.importPlugins = importPlugins.toArray(new PluginDescriptor[importPlugins.size()]);
     }
 
-
-    protected Class loadClass(String name, boolean resolve) throws ClassNotFoundException {
-        Class ret;
+    @Override
+    protected Class<?> findClass(String name) throws ClassNotFoundException {
         try {
-            ret = getParent().loadClass(name);
-        } catch (ClassNotFoundException cnfe) {
-            ret = loadClass(name, resolve, this, null);
+            return super.findClass(name);
+        } catch(ClassNotFoundException e) {
+            return findClassInPrerequisities(name, null);
         }
-        if (ret != null) {
-            return ret;
-        }
-        throw new ClassNotFoundException(name);
     }
     
-    public synchronized Class loadClass(String name, boolean resolve, PluginClassLoader requestor, Set seen) throws ClassNotFoundException {
+    synchronized public Class<?> findClass(String name, Set<String> seen) throws ClassNotFoundException {
         //firstly we will try if this class is not loaded yet
-        Class ret = null;
+        Class<?> ret = null;
         ret = findLoadedClass(name);
         if(ret != null) {
-            if (resolve) {
-                resolveClass(ret);
-            }
             return ret; // found already loaded class in this plug-in
         }
         
         //secondly we try use findClass() method from URLClassLoader
-        try {
-            ret = findClass(name);
-        } catch (ClassNotFoundException cnfe) {
-            // ignore
-        }
-        if(ret != null) {
-            if (resolve) {
-                resolveClass(ret);
-            }
-            return ret; // found class in this plug-in
-        }
+        return findClass(name);
+    }
 
-        if(seen == null) {
-            seen = new HashSet();
-        }
-        seen.add(getPluginDescriptor().getId());
+   private Class<?> findClassInPrerequisities(String name, Set<String> seen) throws ClassNotFoundException {
+       Class<?> ret = null;
+       
+       if(seen == null) {
+           seen = new HashSet<String>();
+       }
+       seen.add(getPluginDescriptor().getId());
 
-        //try all dependant plugins
-        for(int i = 0; i < importPlugins.length; i++) {
-            if(seen.contains(importPlugins[i].getId())) {
-                continue;
-            }
-            ret = ((PluginClassLoader) importPlugins[i].getClassLoader()).loadClass(name, resolve, requestor, seen);
-            if(ret != null) {
-                if (resolve) {
-                    resolveClass(ret);
-                }
-                break; // found class in imported plug-in
-            }
-        }
-
-        return ret;
-    }
-    
+       //try all dependant plugins
+       for(int i = 0; i < importPlugins.length; i++) {
+           if(seen.contains(importPlugins[i].getId())) {
+               continue;
+           }
+           try {
+               return ((PluginClassLoader) importPlugins[i].getClassLoader()).findClass(name, seen);
+           } catch(ClassNotFoundException e) {
+               //continue;
+           }
+       }
+       
+       throw new ClassNotFoundException(name);
+   }
+       
     /**
      * @return returns the plug-in descriptor
      */
@@ -136,4 +125,23 @@
         return pluginDescriptor;
     }
 
+    /**
+     * @return concatened lists of parent class loader, this class loader and all
+     * dependant class loaders URLs (getURLs())
+     */
+    public URL[] getAllURLs() {
+        List<URL> retURLs = new ArrayList<URL>();
+        ClassLoader parentClassLoader = getParent();
+        
+        if(parentClassLoader instanceof URLClassLoader) {
+           retURLs.addAll(Arrays.asList(((URLClassLoader) parentClassLoader).getURLs()));
+        }
+        retURLs.addAll(Arrays.asList(getURLs()));
+        
+        for(int i = 0; i < importPlugins.length; i++) {
+            retURLs.addAll(Arrays.asList(((PluginClassLoader) importPlugins[i].getClassLoader()).getURLs()));
+        }
+        
+        return retURLs.toArray(new URL[retURLs.size()]);
+    }
 }
\ No newline at end of file

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/plugin/PluginDescriptor.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/plugin/PluginDescriptor.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/plugin/PluginDescriptor.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -189,21 +189,26 @@
             return null;
         }
         if(classLoader == null) {
-            URL[] urls = new URL[libraries.size()];
-            
-            for(int i = 0; i < libraries.size(); i++) {
-                File f = new File(manifest.getParentFile().getAbsolutePath() + System.getProperty("file.separator") + libraries.get(i));
-                try {
-                    urls[i] = f.toURL();
-                } catch (MalformedURLException e) {
-                    logger.error("Cannot create URL to plugin (" + getManifest() + ") library " + libraries.get(i) + ".");
-                }
-            }
-            classLoader = new PluginClassLoader(PluginDescriptor.class.getClassLoader(), this, urls);
+            classLoader = new PluginClassLoader(PluginDescriptor.class.getClassLoader(), this);
         }
         return classLoader;
     }
     
+    public URL[] getLibraryURLs() {
+        URL[] urls = new URL[libraries.size()];
+        
+        for(int i = 0; i < libraries.size(); i++) {
+            File f = new File(manifest.getParentFile().getAbsolutePath() + System.getProperty("file.separator") + libraries.get(i));
+            try {
+                urls[i] = f.toURL();
+            } catch (MalformedURLException e) {
+                logger.error("Cannot create URL to plugin (" + getManifest() + ") library " + libraries.get(i) + ".");
+            }
+        }
+        
+        return urls;
+    }
+    
     public void addExtension(String pointId, Properties parameters) {
         extensions.add(new Extension(pointId, parameters, this));
     }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/BitArray.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/BitArray.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/BitArray.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -18,7 +18,8 @@
 *
 */
 package org.jetel.util;
-import java.lang.IndexOutOfBoundsException;
+import java.nio.ByteBuffer;
+import java.util.Arrays;
 /**
  * Class for representing strings of bits.<br>
  * Uses arrays of bytes to group bits by 8 together.
@@ -31,8 +32,9 @@
 
 public class BitArray {
 
-	private final byte bits[];
-	private final int length;
+	private  byte bits[];
+	private  int length;
+    private  int lengthBytes;
 
 
 	/**
@@ -43,64 +45,120 @@
 	public BitArray(int size) {
 		length = size;
 		if (length<1) throw new RuntimeException("Can't create ZERO length array !");
-		bits = new byte[(size-1) / 8 + 1];
+		bits = new byte[((size-1) >> 3) + 1];
+        lengthBytes=bits.length;
 		// init array
-		for (int i = 0; i < bits.length; i++) {
-			bits[i]=0;
-		}
+        Arrays.fill(bits,(byte)0);
 	}
 
+    /**
+     * Creates BitArray with space for 16 bits.
+     * 
+     */
+    public BitArray(){
+        this(16);
+    }
+    
+    private BitArray(byte[] bits,int length){
+        this.bits=bits;
+        this.length=length;
+        this.lengthBytes=bitsLength2Bytes(length);
+        
+    }
+    
+    
+    /**
+     * Wraps existing byte array into BitArray
+     * 
+     * @param bits
+     * @param length
+     * @return
+     * @since 23.1.2007
+     */
+    public static BitArray wrap(byte[] bits,int length){
+        return new BitArray(bits,length);
+    }
 
+    /**
+     * Utility method which makes sure we can
+     * accomodate specified number of bits and then
+     * resets all bits.
+     * 
+     * @param size
+     * @since 23.1.2007
+     */
+    public void resize(int size){
+       ensureSize(size);
+       resetAll();
+    }
+    
+    /**
+     * Ensures that the BitArray can accomodate specified
+     * number of bits
+     * 
+     * @param size
+     * @since 18.1.2007
+     */
+    public void ensureSize(int size){
+        length = size;
+        lengthBytes = ((size-1) >> 3) + 1; 
+        if (bits.length < lengthBytes){
+            bits = new byte[lengthBytes];
+        }
+       
+    }
+    
 	/**
-	 *  Sets the specified bit to 1/True
+	 *  Sets the specified bit to 1/True.
+     *  The index is ZERO based.
 	 *
 	 *@param  index  which bit to set
 	 */
 	public final void set(int index) {
-		if (index >= length) {
-			throw new IndexOutOfBoundsException();
-		}
-		bits[index / 8] |= (byte) (1 << (index % 8));
+		bits[index >> 3] |= (byte) (1 << (index % 8));
 	}
 
 
 	/**
-	 *  Re-sets the specified bit to 0/false
+	 *  Re-sets the specified bit to 0/false.
+     *  The index is ZERO based.
 	 *
 	 *@param  index  which bit to reset
 	 */
 	public final void reset(int index) {
-		if (index >= length) {
-			throw new IndexOutOfBoundsException();
-		}
-		bits[index / 8] &= (~((byte) (1 << (index % 8))));
+		bits[index >> 3] &= (~((byte) (1 << (index % 8))));
 	}
 
+    
+    public final void resetAll(){
+        Arrays.fill(bits,0,lengthBytes,(byte)0);
+    }
+    
+    public final void setAll(){
+        Arrays.fill(bits,0,lengthBytes,(byte)0xFF);
+    }
 
 	/**
-	 *  Gets state of specified bit
+	 *  Gets state of specified bit.
+     *  The index is ZERO based.
 	 *
 	 *@param  index  which bit to check
 	 *@return        true/false according to bit state
 	 */
-	public final boolean get(int index) {
-		if (index >= length) {
-			throw new IndexOutOfBoundsException();
-		}
-		byte pattern = (byte) (1 << (index % 8));
-		return (bits[index / 8] & pattern) == pattern ? true : false;
+	public final boolean isSet(int index) {
+		return (bits[index >> 3] & ((byte) (1 << (index % 8)))) != 0;
 	}
 
 
 	/**
 	 *  Gets state of specified bit<br>
-	 *  Synonym for get()
+	 *  Synonym for isSet()
 	 *
 	 *@param  index  which bit to check
 	 *@return        true/false according to bit state
 	 */
-	public final boolean isSet(int index) {
-		return get(index);
+	public final boolean get(int index) {
+		return isSet(index);
 	}
 
 
@@ -130,6 +188,16 @@
 		return str.toString();
 	}
 
+    public static final String toString(byte[] array) {
+        StringBuffer str = new StringBuffer(array.length * 8 *2  + 1);
+        str.append("|");
+        for (int i = 0; i < (array.length*8); i++) {
+            str.append(isSet(array,i) ? "1" : "0");
+            str.append("|");
+        }
+        return str.toString();
+    }
+    
 
 	/**
 	 *  Returns backing array of bytes<br>
@@ -140,28 +208,107 @@
 	public final byte[] getByteArray() {
 		return bits;
 	}
+	 
+    /**
+     *  Performs serialization of the internal value into ByteBuffer 
+     *
+     *@param  buffer  Description of Parameter
+     *@since          October 29, 2002
+     */
+    public void serialize(ByteBuffer buffer) {
+         buffer.put(bits,0,lengthBytes);
+    }
 
-	   //this is for debugging only
-	   /*
-	   public static void main(String args[]){
-		   BitArray array=new BitArray(16);
-		   array.set(8);
-		   array.set(0);
-		   array.set(10);
-		   array.set(7);
-		   System.out.println(array.get(1));
-		   System.out.println(array.get(0));
-		   System.out.println(array.get(8));
-		   System.out.println(array.get(9));
-		   System.out.println(array.get(10));
-		   System.out.println(array);
-		   array.reset(10);
-		   array.set(1);
-		   array.reset(7);
-		   System.out.println(array.get(10));
-		   System.out.println(array);
-	   }
-	   */
+
+    /**
+     *  Performs deserialization of data
+     *
+     *@param  buffer  Description of Parameter
+     *@since          October 29, 2002
+     */
+    public void deserialize(ByteBuffer buffer) {
+        buffer.get(bits,0,lengthBytes);
+    }
+
+    
+    /**
+     * How many bytes is needed to store specified number
+     * of bits.
+     * 
+     * @param bits
+     * @return
+     * @since 18.1.2007
+     */
+    public final static int bitsLength2Bytes(int bits){
+        return ((bits - 1)>> 3) + 1;
+    }
+    
+    /**
+     * Sets specified bit in array of bytes - counting
+     * from left.
+     * The bit parameter is ZERO based.
+     * 
+     * @param bytes
+     * @param bit
+     * @since 18.1.2007
+     */
+    public final static void set(byte[] bytes,int bit){
+        bytes[bit >> 3] |= (byte) (1 << (bit % 8));
+    }
+    
+    public final static void set(ByteBuffer bytes,int base,int bit){
+        final int position=bit >> 3 + bytes.position() + base ;
+        bytes.put(position, (byte)( bytes.get(position) | (1 << (bit % 8))));
+    }
+    
+    /**
+     *  Gets status of specified bit in array of bytes - counting
+     * from left.
+     *  The bit parameter is ZERO based.
+     * 
+     * @param bytes
+     * @param bit
+     * @return  true if set otherwise false
+     * @since 18.1.2007
+     */
+    public final static boolean isSet(byte[] bytes,int bit){
+        return ((bytes[bit >> 3] & ((byte) (1 << (bit % 8)))) != 0 );
+    }
+    
+    public final static boolean isSet(ByteBuffer bytes,int base, int bit){
+        final int position=bit >> 3 + bytes.position() + base ;
+        return ((bytes.get(position) & ((byte) (1 << (bit % 8))))!= 0); 
+        
+    }
+    
+    /**
+     * Resets specified bit in array of bytes - counting
+     * from left.
+     *  The bit parameter is ZERO based.
+     * 
+     * @param bytes
+     * @param bit
+     * @since 18.1.2007
+     */
+    public final static void reset(byte[] bytes, int bit){
+        bytes[bit >> 3] &= (~((byte) (1 << (bit % 8))));
+    }
+  
+    public final static void reset(ByteBuffer bytes, int base, int bit){
+        final int position=bit >> 3 + bytes.position()+base;
+        bytes.put(position, (byte)( bytes.get(position) & (~((1 << (bit % 8))))));
+    }
+
+    /**
+     * How many bytes are used to store the number
+     * of bits this BitArray can represent
+     * 
+     * @return the lengthBytes
+     * @since 25.1.2007
+     */
+    public int getLengthBytes() {
+        return lengthBytes;
+    }   
 }
 /*
  *  End class BitArray

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/ByteBufferUtils.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -55,9 +55,7 @@
 	public static int flush(ByteBuffer buffer, WritableByteChannel writer)
 			throws IOException {
 		int write = 0;
-//		if (buffer.position() != 0) {
-			buffer.flip();
-//		}
+		buffer.flip();
 		write = writer.write(buffer);
 		buffer.clear();
 		return write;
@@ -81,7 +79,6 @@
 			buffer.compact();
 		}
 		read = reader.read(buffer);
-//		buffer.flip();
 		return read;
 	}
 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/Compiler.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/Compiler.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/Compiler.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -53,6 +53,7 @@
     private boolean forceRecompile;
     private String classPath;
     private ByteArrayOutputStream compileOutputStream;
+    private ClassLoader classLoader;
     
     public Compiler(String srcFileName, boolean captureOutput, String destDirName) {
         this.srcFileName = srcFileName;
@@ -79,7 +80,7 @@
     public Compiler(String srcFile, boolean captureOutput) {
         this(srcFile, captureOutput, System.getProperty("java.io.tmpdir", "."));
     }
-    
+
     public Compiler(String srcFile) {
         this(srcFile, false);
     }
@@ -172,9 +173,7 @@
     
     private String getClassPath() {
         if(classPath == null) {
-            //ClassLoader loader = Thread.currentThread().getContextClassLoader();
-            ClassLoader loader = getClass().getClassLoader();
-            classPath = ClassLoaderUtils.getClasspath(loader);
+            classPath = ClassLoaderUtils.getClasspath(getClassLoader());
         }
         return classPath;
     }
@@ -211,4 +210,16 @@
     public String getErrFileName() {
         return errFileName;
     }
+
+    public void setClassLoader(ClassLoader classLoader) {
+        this.classLoader = classLoader;
+    }
+
+    public ClassLoader getClassLoader() {
+        if(classLoader == null) {
+            //return Thread.currentThread().getContextClassLoader();
+            return getClass().getClassLoader();
+        }
+        return classLoader;
+    }
 }

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/DynamicJavaCode.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/DynamicJavaCode.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/DynamicJavaCode.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -53,10 +53,12 @@
 	private String className;
 	private String fileName;
 	private String compilerOutput;
-	
+	private ClassLoader classLoader;
+    
 	private boolean captureCompilerOutput = true; 
 	
-	public DynamicJavaCode(String srcCode) {
+	public DynamicJavaCode(String srcCode, ClassLoader classLoader) {
+        this.classLoader = classLoader;
 		this.srcCode = srcCode;
         this.srcPath = SRC_PATH + (SRC_PATH.endsWith(FILE_SEPARATOR) ? "" : FILE_SEPARATOR);
 		Matcher matcher = PATTERN.matcher(srcCode);
@@ -69,6 +71,10 @@
 		}
 	}
 
+    public DynamicJavaCode(String srcCode) {
+        this(srcCode, null);
+    }
+
 	private void saveSrc() {
 		long checkSumFile;
 		fileName = srcPath + className + ".java";
@@ -93,6 +99,7 @@
 	
 	private void compile() {
 		Compiler compiler = new Compiler(fileName, captureCompilerOutput);
+        compiler.setClassLoader(classLoader);
 		int result = compiler.compile();
 		if (result != 0) {
 		    compilerOutput = compiler.getCapturedOutput();
@@ -130,8 +137,7 @@
 			throw new RuntimeException(ex);
 		}
 
-		URLClassLoader classLoader = new URLClassLoader(myURLs, Thread.currentThread().getContextClassLoader());
-		// URLClassLoader classLoader = Thread.currentThread().getContextClassLoader();
+        URLClassLoader classLoader = new URLClassLoader(myURLs, getClassLoader());
 		try {
 		    logger.debug("Loading Class: " + className + "...");
 			tClass = Class.forName(className, true, classLoader);
@@ -209,5 +215,17 @@
     public void setCaptureCompilerOutput(boolean captureCompilerOutput) {
         this.captureCompilerOutput = captureCompilerOutput;
     }
+
+    public void setClassLoader(ClassLoader classLoader) {
+        this.classLoader = classLoader;
+    }
+
+    public ClassLoader getClassLoader() {
+        if(classLoader == null) {
+            //return Thread.currentThread().getContextClassLoader();
+            return getClass().getClassLoader();
+        }
+        return classLoader;
+    }
 }
 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/FileUtils.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/FileUtils.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/FileUtils.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -55,30 +55,26 @@
 	 * @return          The full path to file with ENV references resolved
 	 * @since           May 24, 2002
 	 */
-	public static String getFullPath(String fileURL) {
-		return fileURL;
-	}
+//	public static String getFullPath(String fileURL) {
+//		return fileURL;
+//	}
     
     /**
      * Creates URL object based on specified fileURL string. Handles
      * situations when <code>fileURL</code> contains only path to file
      * <i>(without "file:" string)</i>. 
      * 
+     * @param contextURL context URL for converting relative to absolute path (see TransformationGraph.getProjectURL()) 
      * @param fileURL   string containing file URL
      * @return  URL object or NULL if object can't be created (due to Malformed URL)
+     * @throws MalformedURLException  
      */
-    public static URL getFileURL(String fileURL){
-        URL url;
-        try{
-            url = new URL(fileURL);
-        }catch(MalformedURLException ex){
-            try{
-                url = new URL("file:"+fileURL);
-            }catch(MalformedURLException ex1){
-                return null;
-            }
+    public static URL getFileURL(URL contextURL, String fileURL) throws MalformedURLException {
+        try {
+            return new URL(contextURL, fileURL);
+        } catch(MalformedURLException ex) {
+            return new URL(contextURL, "file:" + fileURL);
         }
-        return url;
     }
 
 
@@ -110,37 +106,28 @@
 
 	/**
 	 * Reads file specified by URL. The content is returned as String
+     * @param contextURL context URL for converting relative to absolute path (see TransformationGraph.getProjectURL()) 
 	 * @param fileURL URL specifying the location of file from which to read
 	 * @return
 	 */
-	public static String getStringFromURL(String fileURL){
+	public static String getStringFromURL(URL contextURL, String fileURL){
         URL url;
-		try{
-			url = new URL(fileURL); 
-		}catch(MalformedURLException e){
-			// try to patch the url
-			try {
-				url=new URL("file:"+fileURL);
-			}catch(MalformedURLException ex){
-				throw new RuntimeException("Wrong URL of file specified: "+ex.getMessage());
-			}
+		try {
+			url = FileUtils.getFileURL(contextURL, fileURL);
+		}catch(MalformedURLException ex){
+			throw new RuntimeException("Wrong URL of file specified: "+ex.getMessage());
 		}
 
 		StringBuffer sb = new StringBuffer(2048);
-        
-		try
-        {
+		try {
             char[] charBuf=new char[256];
             BufferedReader in=new BufferedReader(new InputStreamReader(url.openStream()));
             int readNum;
             
-            while ((readNum=in.read(charBuf,0,charBuf.length)) != -1)
-            {
+            while ((readNum=in.read(charBuf,0,charBuf.length)) != -1) {
                 sb.append(charBuf,0,readNum);
             }
-        }
-        catch(IOException ex)
-        {
+        } catch(IOException ex) {
             throw new RuntimeException("Can't get string from file " + fileURL + " : " + ex.getMessage());
         }
         return sb.toString();
@@ -154,11 +141,12 @@
      *  <dd>zip:&lt;url_to_zip_file&gt;#&lt;inzip_path_to_file&gt;</dd>
      *  <dd>gzip:&lt;url_to_gzip_file&gt;</dd>
      * </dl>
+     * @param contextURL context URL for converting relative to absolute path (see TransformationGraph.getProjectURL()) 
      * @param input URL of file to read
      * @return
      * @throws IOException
      */
-    public static ReadableByteChannel getReadableChannel(String input) throws IOException {
+    public static ReadableByteChannel getReadableChannel(URL contextURL, String input) throws IOException {
         String strURL = input;
         String zipAnchor = null;
         URL url;
@@ -177,16 +165,7 @@
         }
         
         //open channel
-        try {
-            url = new URL(strURL); 
-        } catch(MalformedURLException e) {
-            // try to patch the url
-            try {
-                url = new URL("file:" + strURL);
-            } catch(MalformedURLException ex) {
-                throw new IOException("Wrong URL of file specified: " + ex.getMessage());
-            }
-        }
+        url = FileUtils.getFileURL(contextURL, strURL); 
 
         //resolve url format for zip files
         if(input.startsWith("zip:")) {
@@ -226,12 +205,13 @@
      *  <dd>zip:&lt;url_to_zip_file&gt;#&lt;inzip_path_to_file&gt;</dd>
      *  <dd>gzip:&lt;url_to_gzip_file&gt;</dd>
      * </dl>
+     * @param contextURL context URL for converting relative to absolute path (see TransformationGraph.getProjectURL()) 
 	 * @param input
 	 * @param appendData
 	 * @return
 	 * @throws IOException
 	 */
-	public static WritableByteChannel getWritableChannel(String input, boolean appendData) throws IOException {
+	public static WritableByteChannel getWritableChannel(URL contextURL, String input, boolean appendData) throws IOException {
         String strURL = input;
         String zipAnchor = null;
         OutputStream os;
@@ -252,16 +232,7 @@
 		if(!strURL.startsWith("ftp")) {
 			os = new FileOutputStream(strURL, appendData);
 		} else {
-			try {
-				url = new URL(strURL); 
-			} catch(MalformedURLException e) {
-				// try to patch the url
-				try {
-					url = new URL("file:" + strURL);
-				} catch(MalformedURLException ex) {
-					throw new IOException("Wrong URL of file specified: " + ex.getMessage());
-				}
-			}
+		    url = FileUtils.getFileURL(contextURL, strURL); 
 			os = url.openConnection().getOutputStream();
 		}
 		//resolve url format for zip files

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/MultiFileReader.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/MultiFileReader.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/MultiFileReader.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -20,6 +20,7 @@
 package org.jetel.util;
 
 import java.io.IOException;
+import java.net.URL;
 import java.nio.channels.ReadableByteChannel;
 import java.util.Iterator;
 
@@ -53,6 +54,7 @@
     private Log logger = defaultLogger;
 
 	private Parser parser;
+    private URL contextURL;
     private String fileURL;
 	private Iterator<String> filenameItor;
     private int skip;
@@ -67,8 +69,9 @@
 	 * @param parser Parser to be used to obtain records from input files.
 	 * @param fileURL Specification of input file(s)
 	 */
-	public MultiFileReader(Parser parser, String fileURL) {
+	public MultiFileReader(Parser parser, URL contextURL, String fileURL) {
 		this.parser = parser;
+        this.contextURL = contextURL;
 		this.fileURL = fileURL;
 	}
 
@@ -131,7 +134,7 @@
 			filename = filenameItor.next();
 			logger.debug("Opening input file " + filename);
 			try {
-				stream = FileUtils.getReadableChannel(filename);
+				stream = FileUtils.getReadableChannel(contextURL, filename);
 				logger.debug("Reading input file " + filename);
 				parser.setDataSource(stream);
 				if(fileSkip > 0) parser.skip(fileSkip);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/MultiFileWriter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/MultiFileWriter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/MultiFileWriter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -22,6 +22,7 @@
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
+import java.net.URL;
 import java.nio.ByteBuffer;
 import java.nio.channels.WritableByteChannel;
 import java.util.Iterator;
@@ -55,7 +56,7 @@
     private Log logger = defaultLogger;
 
     private Formatter formatter;
-    private DataRecordMetadata metadata;
+    private URL contextURL;
     private String fileURL;
     private String charset;
     private int recordsPerFile;
@@ -73,8 +74,9 @@
      * @param formatter formatter is used for incoming records formatting
      * @param fileURL target file(s) definition
      */
-    public MultiFileWriter(Formatter formatter, String fileURL) {
+    public MultiFileWriter(Formatter formatter, URL contextURL, String fileURL) {
         this.formatter = formatter;
+        this.contextURL = contextURL;
         this.fileURL = fileURL;
     }
     
@@ -84,7 +86,6 @@
      * @throws ComponentNotReadyException 
      */
     public void init(DataRecordMetadata metadata) throws ComponentNotReadyException {
-        this.metadata = metadata;
         fileNames = new MultiOutFile(fileURL);
         formatter.init(metadata);
         try {
@@ -109,7 +110,7 @@
         if(byteChannel != null) {
             writeFooter();
         }
-        byteChannel = FileUtils.getWritableChannel(fileNames.next(), appendData);
+        byteChannel = FileUtils.getWritableChannel(contextURL, fileNames.next(), appendData);
         //write header
         writeHeader();
         formatter.setDataTarget(byteChannel);

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/StringUtils.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/StringUtils.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/src/org/jetel/util/StringUtils.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -46,7 +46,7 @@
 	 *      text representation (i.e.\n -> "\n" )
 	 * @since                 July 25, 2002
 	 */
-	public static String specCharToString(String controlString) {
+	public static String specCharToString(CharSequence controlString) {
 		StringBuffer copy = new StringBuffer();
 		char character;
 		for (int i = 0; i < controlString.length(); i++) {
@@ -83,8 +83,8 @@
 	 * @return                String with control characters
 	 * @since                 July 25, 2002
 	 */
-	public static String stringToSpecChar(String controlString) {
-		if(controlString == null) {
+	public static String stringToSpecChar(CharSequence controlString) {
+		if(isEmpty(controlString)) {
 			return null;
 		}
 		StringBuffer copy = new StringBuffer();
@@ -429,7 +429,7 @@
 		return stringArraytoString(strings,' ');
 	} 
   
-    public static boolean isEmpty(String s) {
+    public static boolean isEmpty(CharSequence s) {
         return s == null || s.length() == 0;
     }
 

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/DataTestSuite.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/DataTestSuite.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/DataTestSuite.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -38,7 +38,6 @@
 		suite.addTest(new TestSuite(org.jetel.data.NumericDataFieldTest.class));
 		suite.addTest(new TestSuite(org.jetel.data.StringDataFieldTest.class));
 		suite.addTest(new TestSuite(org.jetel.data.FixLenDataParser2Test.class));
-		suite.addTest(new TestSuite(org.jetel.data.OneRecordPerLinePolicyTest.class));
 		suite.addTest(new TestSuite(org.jetel.data.FixLenDataFormatterTest.class));
 		return suite;
 	

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/DateDataFieldTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/DateDataFieldTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/DateDataFieldTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -57,7 +57,7 @@
 
 	calendar = new GregorianCalendar(2002,6,10);
 	trialTime1 = null;
-	trialTime1 = calendar.getTime(); 
+//	trialTime1 = calendar.getTime(); 
 	DataFieldMetadata delimFieldMeta1 = new DataFieldMetadata("Field1",'D',";");
 	delimFieldMeta1.setFormatStr("MM/dd/yyyy");
 	delimFieldMeta1.setDefaultValueStr("03/31/2100");
@@ -231,6 +231,11 @@
 		trialTime2 = calendar2.getTime(); 
 		aDateDataField4.setValue(trialTime2);
 		assertFalse(aDateDataField1.equals(aDateDataField4));
+		
+		assertTrue(aDateDataField3.isNull());
+		aDateDataField3.setToDefaultValue();
+		assertFalse(aDateDataField3.isNull());
+		assertEquals(new GregorianCalendar(2100,02,31).getTime(), aDateDataField3.getValue());
 	}
 
 	/**

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/IntegerDataFieldTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/IntegerDataFieldTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/IntegerDataFieldTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -165,7 +165,14 @@
 		try {
 			anIntegerDataField1.fromString("123.234");
 			fail("Should raise an BadDataFormatException");
-		} catch (BadDataFormatException e){	}
+		} catch (BadDataFormatException e){
+		}
+
+		try {
+			anIntegerDataField1.fromString("r123");
+			fail("Should raise an BadDataFormatException");
+		} catch (BadDataFormatException e){
+		}
 	}
 	
 	

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/NumericDataFieldTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/NumericDataFieldTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/NumericDataFieldTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -149,8 +149,8 @@
 	 *
 	 */
 	public void test_fromString() {
-		aNumericDataField1.fromString("123");
-		assertEquals(aNumericDataField1.getInt(),123);
+		aNumericDataField1.fromString("123.43");
+		assertEquals(aNumericDataField1.getDouble(),123.43);
 	
 		
 		aNumericDataField1.fromString(null);
@@ -167,7 +167,8 @@
 		} catch (BadDataFormatException e){	}
 	
 		try {
-			aNumericDataField1.fromString("r123.43");
+			aNumericDataField1.fromString("r123");
+			System.out.println(aNumericDataField1.getDouble());
 			fail("Should raise an BadDataFormatException");
 		} catch (BadDataFormatException e){	}
 	}

Deleted: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/OneRecordPerLinePolicyTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/OneRecordPerLinePolicyTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/OneRecordPerLinePolicyTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,195 +0,0 @@
-/*
- *  jETeL/Clover - Java based ETL application framework.
- *  Created on May 6, 2003
- *  Copyright (C) 2003, 2002  David Pavlis, Wes Maciorowski
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-package org.jetel.data;
-
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.IOException;
-
-import java.nio.channels.Channels;
-import org.jetel.data.DataRecord;
-import org.jetel.data.formatter.FixLenDataFormatter;
-import org.jetel.data.parser.SQLDataParser;
-import org.jetel.data.Defaults;
-
-import org.jetel.database.DBConnection;
-import org.jetel.exception.BadDataFormatException;
-import org.jetel.exception.ComponentNotReadyException;
-import org.jetel.metadata.DataRecordMetadata;
-import org.jetel.metadata.DataRecordMetadataXMLReaderWriter;
-
-import junit.framework.TestCase;
-
-/**
- * @author maciorowski
- *
- */
-public class OneRecordPerLinePolicyTest  extends TestCase {
-private SQLDataParser aParser2 = null;
-private FixLenDataFormatter aFixLenDataFormatter= null;
-private DataRecord record;
-private String testFile1 = null;	
-
-protected void setUp() { 
-	DataRecordMetadata metadata = null;
-	DataRecordMetadataXMLReaderWriter xmlReader = new DataRecordMetadataXMLReaderWriter();
-	DBConnection aDBConnection = null;
-
-	testFile1 = "data\\out\\test1.txt";	
-	File aFile=new File(testFile1);
-	 if(!aFile.exists()) {
-		new File(aFile.getParent()).mkdirs();
-		try {
-			aFile.createNewFile();
-		} catch (IOException e3) {
-			e3.printStackTrace();
-		}
-	 }
-				
-	try {
-		metadata = xmlReader.read(new FileInputStream("config\\test\\rec_def\\db_null_def_rec.xml"));
-		aDBConnection = new DBConnection("", "config\\test\\msaccess.clover_test.txt");
-	} catch(FileNotFoundException e){
-		e.printStackTrace();
-	}
-
-	record = new DataRecord(metadata);
-	record.init();
-	
-	aParser2 = new SQLDataParser("connection","SELECT * FROM bad");
-	try {
-		aParser2.open(aDBConnection,metadata);
-		aParser2.initSQLDataMap(record);
-	} catch (ComponentNotReadyException e1) {
-		e1.printStackTrace();
-	}
-	aFixLenDataFormatter = new FixLenDataFormatter();
-	try {
-		aFixLenDataFormatter.open(new FileOutputStream(testFile1),metadata);
-	} catch (FileNotFoundException e2) {
-		e2.printStackTrace();
-	}
-}
-	
-   protected void tearDown() {
-	   aParser2.close();
-	   aParser2 = null;
-	   record  = null;
-		aFixLenDataFormatter = null;
-	   //remove testFile if any
-	   File aFile=new File(testFile1);
-		if(aFile.exists()) {
-			aFile.delete();
-		}
-   }
-
-public void test_FixLenDataFormatter_false() {
-	int recCount = 0;
-	try{
-		while((record=aParser2.getNext(record))!=null){
-			aFixLenDataFormatter.write(record);
-		}
-		aFixLenDataFormatter.flush();
-		aFixLenDataFormatter.close();
-	} catch (BadDataFormatException e){	
-		fail("Should not raise an BadDataFormatException");
-		e.printStackTrace();
-	} catch (Exception ee){
-		fail("Should not throw Exception");
-		ee.printStackTrace();
-	}
-	
-	try {
-		FileInputStream fis = new FileInputStream(testFile1);
-		BufferedReader reader = null;
-		reader = new BufferedReader(Channels.newReader( (fis).getChannel(), Defaults.DataParser.DEFAULT_CHARSET_DECODER ) );
-
-		String line = null;
-		line = reader.readLine();
-		while(line != null ) {	//skip blank lines
-			recCount++;
-			line = reader.readLine();
-		}
-
-		if((line) == null) {  //end of file been reached
-			reader.close();
-		}
-
-	} catch (FileNotFoundException e1) {
-		fail("Should not throw Exception - missing test data file");
-		e1.printStackTrace();
-	} catch (IOException e) {
-		fail("Should not throw Exception - IOException");
-		e.printStackTrace();
-	}
-	//should have only one line
-   assertEquals(1,recCount);
-}
-
-public void test_FixLenDataFormatter_true() {
-	int recCount = 0;
-	
-	aFixLenDataFormatter.setOneRecordPerLinePolicy(true);
-	try{
-		while((record=aParser2.getNext(record))!=null){
-			aFixLenDataFormatter.write(record);
-		}
-		aFixLenDataFormatter.flush();
-		aFixLenDataFormatter.close();
-	} catch (BadDataFormatException e){	
-		fail("Should not raise an BadDataFormatException");
-		e.printStackTrace();
-	} catch (Exception ee){
-		fail("Should not throw Exception");
-		ee.printStackTrace();
-	}
-	
-	try {
-		FileInputStream fis = new FileInputStream(testFile1);
-		BufferedReader reader = null;
-		reader = new BufferedReader(Channels.newReader( (fis).getChannel(), Defaults.DataParser.DEFAULT_CHARSET_DECODER ) );
-
-		String line = null;
-		line = reader.readLine();
-		while(line != null ) {	//skip blank lines
-			recCount++;
-			line = reader.readLine();
-		}
-
-		if((line) == null) {  //end of file been reached
-			reader.close();
-		}
-
-	} catch (FileNotFoundException e1) {
-		fail("Should not throw Exception - missing test data file");
-		e1.printStackTrace();
-	} catch (IOException e) {
-		fail("Should not throw Exception - IOException");
-		e.printStackTrace();
-	}
-	//should have 3 lines; one line for each record
-   assertEquals(3,recCount);
-}
-	
-
-}

Deleted: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/SQLDataParserTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/SQLDataParserTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/SQLDataParserTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,110 +0,0 @@
-/*
- *  jETeL/Clover - Java based ETL application framework.
- *  Created on Apr 28, 2003
- *  Copyright (C) 2003, 2002  David Pavlis, Wes Maciorowski
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-package org.jetel.data;
-
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-
-import org.jetel.data.DataRecord;
-import org.jetel.data.parser.SQLDataParser;
-import org.jetel.database.DBConnection;
-import org.jetel.exception.BadDataFormatException;
-import org.jetel.exception.ComponentNotReadyException;
-import org.jetel.metadata.DataRecordMetadata;
-import org.jetel.metadata.DataRecordMetadataXMLReaderWriter;
-
-import junit.framework.TestCase;
-
-/**
- * @author maciorowski
- *
- */
-public class SQLDataParserTest  extends TestCase {
-private SQLDataParser aParser2 = null;
-private DataRecord record;
-	
-protected void setUp() { 
-	DataRecordMetadata metadata = null;
-	DataRecordMetadataXMLReaderWriter xmlReader = new DataRecordMetadataXMLReaderWriter();
-	DBConnection aDBConnection = null;
-				
-	try {
-		metadata = xmlReader.read(new FileInputStream("config\\test\\rec_def\\db_null_def_rec.xml"));
-		aDBConnection = new DBConnection("", "config\\test\\msaccess.clover_test.txt");
-	} catch(FileNotFoundException e){
-		e.printStackTrace();
-	}
-	
-	record = new DataRecord(metadata);
-	record.init();
-
-	aParser2 = new SQLDataParser("connection","SELECT * FROM bad");
-	try {
-		aParser2.open(aDBConnection,metadata);
-		aParser2.initSQLDataMap(record);
-	} catch (ComponentNotReadyException e1) {
-		e1.printStackTrace();
-	}
-}
-	
-   protected void tearDown() {
-	   aParser2.close();
-	   aParser2 = null;
-	   record  = null;
-   }
-
-public void test_parsing() {
-// the content of the test file
-//	  N/AStone          01/11/93
-//	-15.5          112  11/03/02
-//	 -0.7Bone Broo    99        
-	int recCount = 0;
-	try{
-		while((record=aParser2.getNext(record))!=null){
-			if(recCount==0) {
-				assertEquals(record.getField(0).toString(),"1.0");
-				assertTrue(record.getField(1).isNull());
-				assertEquals(record.getField(2).toString(),"101");
-				assertEquals(record.getField(3).toString(),"1993-01-11 00:00:00");
-			} else if(recCount==1) {
-				assertEquals(record.getField(0).toString(),"-15.5");
-				assertTrue(record.getField(3).isNull());
-				assertEquals(record.getField(2).toString(),"112");
-				assertEquals(record.getField(1).toString(),"Brook");
-			} else if(recCount==2) {
-				assertTrue(record.getField(0).isNull());
-				assertEquals(record.getField(1).toString(),"Bone Broo");
-				assertTrue(record.getField(2).isNull());
-				assertEquals(record.getField(3).toString(),"2003-01-01 00:00:00");
-			}
-			recCount++;
-		}
-	} catch (BadDataFormatException e){	
-		fail("Should not raise an BadDataFormatException");
-		e.printStackTrace();
-	} catch (Exception ee){
-		fail("Should not throw Exception");
-		ee.printStackTrace();
-	}
-   assertEquals(3,recCount);
-}
-	
-
-}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/primitive/DecimalNumericTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/primitive/DecimalNumericTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/data/primitive/DecimalNumericTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -151,7 +151,9 @@
 			}else{
 				System.out.println("Test for getInt skipped");
 			}
-			if (!aFloat.isNaN()) assertEquals(new Double(value),new Double(aFloat.getDouble()));
+			if (!aFloat.isNaN()) {
+				assertEquals(new Double(value),new Double(aFloat.getDouble()));
+			}
 			System.out.println("Test for getDouble passed (isNaN="+anInt.isNaN()+")");
 			if (Long.MIN_VALUE<value && value<Long.MAX_VALUE) {
 				assertEquals(new Float(value).longValue(),aFloat.getLong());
@@ -263,7 +265,9 @@
 			}else{
 				System.out.println("Test for getInt skipped");
 			}
-			if (!aDefault.isNaN()) assertEquals(new Double(d_value),new Double(aDefault.getDouble()));
+			if (!aDefault.isNaN()) {
+				assertEquals(new Double(d_value),new Double(aDefault.getDouble()));
+			}
 			System.out.println("Test for getDouble passed (isNaN="+anInt.isNaN()+")");
 			if (Long.MIN_VALUE<value && value<Long.MAX_VALUE) {
 				assertEquals(new Double(d_value).longValue(),aDefault.getLong());
@@ -482,7 +486,7 @@
 
 	public void test_fromString(){
 		aDouble.fromString("123.45",null);
-		assertEquals(new Double(123.45),new Double(aDouble.getDouble()));
+		assertEquals(new Double(123),new Double(aDouble.getDouble()));
 		aDouble=DecimalFactory.getDecimal(10,5);
 		aDouble.fromString(".12345",null);
 		assertEquals(new Double(0.12345),new Double(aDouble.getDouble()));

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_DelimitedDataParserNIO_Test.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_DelimitedDataParserNIO_Test.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_DelimitedDataParserNIO_Test.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -25,10 +25,9 @@
 import junit.framework.TestCase;
 
 import org.jetel.data.DataRecord;
-import org.jetel.data.parser.DelimitedDataParserNIO;
+import org.jetel.data.Defaults;
+import org.jetel.data.parser.DelimitedDataParser;
 import org.jetel.exception.BadDataFormatException;
-import org.jetel.exception.BadDataFormatExceptionHandler;
-import org.jetel.exception.BadDataFormatExceptionHandlerFactory;
 import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.metadata.DataRecordMetadataXMLReaderWriter;
 
@@ -37,8 +36,8 @@
  *
  */
 public class BadDataFormatExceptionHandler_DelimitedDataParserNIO_Test  extends TestCase {
-	private DelimitedDataParserNIO aParser = null;
-	private DelimitedDataParserNIO aParser2 = null;
+	private DelimitedDataParser aParser = null;
+	private DelimitedDataParser aParser2 = null;
 	private DataRecord record;
 	private FileInputStream in = null;
 	private FileInputStream in2 = null;
@@ -48,16 +47,18 @@
 		DataRecordMetadataXMLReaderWriter xmlReader = new DataRecordMetadataXMLReaderWriter();
 			
 		try {
-			metadata = xmlReader.read(new FileInputStream("config\\test\\rec_def\\DL_null_def_rec.xml"));
-			in = new FileInputStream("data\\in\\good\\DL28_NL.txt");
-			in2 = new FileInputStream("data\\in\\bad\\DL_NL_nulls.txt");
+			metadata = xmlReader.read(new FileInputStream("config/test/rec_def/DL_null_def_rec.xml"));
+			in = new FileInputStream("data/in/good/DL28_NL.txt");
+			in2 = new FileInputStream("data/in/bad/DL_NL_nulls.txt");
 		} catch(FileNotFoundException e){
 			e.printStackTrace();
 		}
+		
+		Defaults.init();
 	
-		aParser2 = new DelimitedDataParserNIO();
+		aParser2 = new DelimitedDataParser();
 
-		aParser = new DelimitedDataParserNIO();
+		aParser = new DelimitedDataParser();
 		record = new DataRecord(metadata);
 		record.init();
 	}
@@ -81,10 +82,14 @@
 	 */
 	
 	public void test_goodFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		AbstractParserExceptionHandler aHandler = null;
 
 		// test no handler ------------------------------------
-		aParser.open(in,metadata);
+		try {
+			aParser.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser.setDataSource(in);
 		try{
 			while((record=aParser.getNext(record))!=null){}
 		} catch (BadDataFormatException e){	
@@ -104,11 +109,15 @@
 	 */
 	
 	public void test_strict_goodFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		// test strict handler ------------------------------------
-		aParser.open(in,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.STRICT);
-		aParser.addBDFHandler(aHandler);
+		try {
+			aParser.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser.setDataSource(in);
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.STRICT);
+		aParser.setExceptionHandler(aHandler);
 		try{
 			while((record=aParser.getNext(record))!=null){}
 		} catch (BadDataFormatException e){	
@@ -128,11 +137,16 @@
 	 */
 	
 	public void test_controlled_goodFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		// test controlled handler ------------------------------------
-		aParser.open(in,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.CONTROLLED);
-		aParser.addBDFHandler(aHandler);
+		try {
+			aParser.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser.setDataSource(in);
+
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.CONTROLLED);
+		aParser.setExceptionHandler(aHandler);
 		
 //		1.0Stone    101   01/11/93
 //	  -15.5  Brook   112  11/03/02
@@ -177,11 +191,16 @@
 	 */
 	
 	public void test_lenient_goodFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		// test lenient handler ------------------------------------
-		aParser.open(in,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.LENIENT);
-		aParser.addBDFHandler(aHandler);
+		try {
+			aParser.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser.setDataSource(in);
+
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.LENIENT);
+		aParser.setExceptionHandler(aHandler);
 		
 //		1.0Stone    101   01/11/93
 //	  -15.5  Brook   112  11/03/02
@@ -224,10 +243,14 @@
 	 */
 	
 	public void test_badFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		boolean failed = false;
 		// test no handler ------------------------------------
-		aParser2.open(in2,metadata);
+		try {
+			aParser2.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser2.setDataSource(in2);
 		try{
 			while((record=aParser2.getNext(record))!=null){
 				fail("Should throw Exception");
@@ -252,12 +275,16 @@
 	 */
 	
 	public void test_strict_badFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 
 		// test strict handler ------------------------------------
-		aParser2.open(in2,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.STRICT);
-		aParser2.addBDFHandler(aHandler);
+		try {
+			aParser2.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser2.setDataSource(in2);
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.STRICT);
+		aParser2.setExceptionHandler(aHandler);
 		int recCount = 0;
 		try{
 			while((record=aParser2.getNext(record))!=null){
@@ -280,12 +307,16 @@
 	 */
 	
 	public void test_controlled_badFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 
 		// test controlled handler ------------------------------------
-		aParser2.open(in2,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.CONTROLLED);
-		aParser2.addBDFHandler(aHandler);
+		try {
+			aParser2.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser2.setDataSource(in2);
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.CONTROLLED);
+		aParser2.setExceptionHandler(aHandler);
 		int recCount = 0;
 		try{
 			while((record=aParser2.getNext(record))!=null){
@@ -298,7 +329,7 @@
 			fail("Should not throw Exception");
 			ee.printStackTrace();
 		}
-		assertEquals(2,recCount);  //may need to be revised
+		assertEquals(3,recCount);  //may need to be revised
 		//depending how we implement nullable property
 		aParser2.close();
 
@@ -311,11 +342,15 @@
 	 */
 	
 	public void test_lenient_badFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		// test lenient handler ------------------------------------
-		aParser2.open(in2,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.LENIENT);
-		aParser2.addBDFHandler(aHandler);
+		try {
+			aParser2.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser2.setDataSource(in2);
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.CONTROLLED);
+		aParser2.setExceptionHandler(aHandler);
 		int recCount = 0;
 		
 // the content of the test file

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_FixLenDataParser2_Test.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_FixLenDataParser2_Test.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_FixLenDataParser2_Test.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -19,14 +19,15 @@
 
 package org.jetel.exception;
 
+import java.io.ByteArrayInputStream;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 
 import org.jetel.data.DataRecord;
-import org.jetel.data.parser.FixLenDataParser2;
+import org.jetel.data.Defaults;
+import org.jetel.data.parser.FixLenCharDataParser;
+import org.jetel.data.parser.FixLenDataParser;
 import org.jetel.exception.BadDataFormatException;
-import org.jetel.exception.BadDataFormatExceptionHandler;
-import org.jetel.exception.BadDataFormatExceptionHandlerFactory;
 import org.jetel.metadata.DataRecordMetadata;
 import org.jetel.metadata.DataRecordMetadataXMLReaderWriter;
 
@@ -37,8 +38,8 @@
  *
  */
 public class BadDataFormatExceptionHandler_FixLenDataParser2_Test extends TestCase {
-	private FixLenDataParser2 aFixLenDataParser2 = null;
-	private FixLenDataParser2 aParser2 = null;
+	private FixLenDataParser aFixLenDataParser = null;
+	private FixLenDataParser aParser2 = null;
 	private DataRecord record;
 	private FileInputStream in = null;
 	private FileInputStream in2 = null;
@@ -48,24 +49,26 @@
 		DataRecordMetadataXMLReaderWriter xmlReader = new DataRecordMetadataXMLReaderWriter();
 			
 		try {
-			//metadata = xmlReader.read(new FileInputStream("config\\test\\rec_def\\FL28_rec.xml"));
-			metadata = xmlReader.read(new FileInputStream("config\\test\\rec_def\\FL28_null_def_rec.xml"));
-			in = new FileInputStream("data\\in\\good\\FL28_NL.txt");
-			in2 = new FileInputStream("data\\in\\bad\\FL28_NL_nulls.txt");
+			//metadata = xmlReader.read(new FileInputStream("config/test/rec_def/FL28_rec.xml"));
+			metadata = xmlReader.read(new FileInputStream("config/test/rec_def/FL28_null_def_rec.xml"));
+			in = new FileInputStream("data/in/good/FL28_NL.txt");
+			in2 = new FileInputStream("data/in/bad/FL28_NL_nulls.txt");
 		} catch(FileNotFoundException e){
 			e.printStackTrace();
 		}
+		
+		Defaults.init();
 	
-		aParser2 = new FixLenDataParser2();
+		aParser2 = new FixLenCharDataParser();
 
-		aFixLenDataParser2 = new FixLenDataParser2();
+		aFixLenDataParser = new FixLenCharDataParser();
 		record = new DataRecord(metadata);
 		record.init();
 	}
 	
 	protected void tearDown() {
-		aFixLenDataParser2.close();
-		aFixLenDataParser2 = null;
+		aFixLenDataParser.close();
+		aFixLenDataParser = null;
 
 		aParser2.close();
 		aParser2 = null;
@@ -82,20 +85,24 @@
 	 */
 	
 	public void test_goodFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 
 		// test no handler ------------------------------------
-		aFixLenDataParser2.open(in,metadata);
+		try {
+			aFixLenDataParser.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aFixLenDataParser.setDataSource(in);
 		try{
-			while((record=aFixLenDataParser2.getNext(record))!=null){}
+			while((record=aFixLenDataParser.getNext(record))!=null){}
 		} catch (BadDataFormatException e){	
 			fail("Should not raise an BadDataFormatException");
 			e.printStackTrace();
 		} catch (Exception ee){
+			ee.printStackTrace();
 			fail("Should not throw Exception");
-			ee.printStackTrace();
 		}
-		aFixLenDataParser2.close();
+		aFixLenDataParser.close();
 
 	}
 	
@@ -105,13 +112,18 @@
 	 */
 	
 	public void test_strict_goodFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		// test strict handler ------------------------------------
-		aFixLenDataParser2.open(in,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.STRICT);
-		aFixLenDataParser2.addBDFHandler(aHandler);
+				try {
+			aFixLenDataParser.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aFixLenDataParser.setDataSource(in);
+
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.STRICT);
+		aFixLenDataParser.setExceptionHandler(aHandler);
 		try{
-			while((record=aFixLenDataParser2.getNext(record))!=null){}
+			while((record=aFixLenDataParser.getNext(record))!=null){}
 		} catch (BadDataFormatException e){	
 			fail("Should not raise an BadDataFormatException");
 			e.printStackTrace();
@@ -119,7 +131,7 @@
 			fail("Should not throw Exception");
 			ee.printStackTrace();
 		}
-		aFixLenDataParser2.close();
+		aFixLenDataParser.close();
 		 
 	}
 	
@@ -129,18 +141,26 @@
 	 */
 	
 	public void test_controlled_goodFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		// test controlled handler ------------------------------------
-		aFixLenDataParser2.open(in,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.CONTROLLED);
-		aFixLenDataParser2.addBDFHandler(aHandler);
+				try {
+			aFixLenDataParser.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aFixLenDataParser.setDataSource(new ByteArrayInputStream(new String("" +
+				"		1.0Stone    101   01/11/93" +
+				"-15.5Brook    112   11/03/02" +
+				"	-0.7Bone Broo99    01/01/03").getBytes()));
+
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.CONTROLLED);
+		aFixLenDataParser.setExceptionHandler(aHandler);
 		
 //		1.0Stone    101   01/11/93
-//	  -15.5  Brook   112  11/03/02
+//	  -15.5Brook   11211/03/02
 //	   -0.7Bone Broo    9901/01/03
 		int recCount = 0;
 		try{
-			while((record=aFixLenDataParser2.getNext(record))!=null){
+			while((record=aFixLenDataParser.getNext(record))!=null){
 				if(recCount==0) {
 					assertEquals(record.getField(0).toString(),"1.0");
 					assertEquals(record.getField(1).toString(),"Stone");
@@ -162,13 +182,13 @@
 			assertEquals(3,recCount);		
 			
 		} catch (BadDataFormatException e){	
+			e.printStackTrace();
 			fail("Should not raise an BadDataFormatException");
-			e.printStackTrace();
 		} catch (Exception ee){
 			fail("Should not throw Exception");
 			ee.printStackTrace();
 		}
-		aFixLenDataParser2.close();
+		aFixLenDataParser.close();
 
 	}
 	
@@ -178,18 +198,26 @@
 	 */
 	
 	public void test_lenient_goodFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		// test lenient handler ------------------------------------
-		aFixLenDataParser2.open(in,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.LENIENT);
-		aFixLenDataParser2.addBDFHandler(aHandler);
+				try {
+			aFixLenDataParser.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aFixLenDataParser.setDataSource(new ByteArrayInputStream(new String(
+				"		1.0Stone    101   01/11/93" +
+				"-15.5Brook    112   11/03/02" +
+				"	-0.7Bone Broo    9901/01/03").getBytes()));
+
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.LENIENT);
+		aFixLenDataParser.setExceptionHandler(aHandler);
 		
 //		1.0Stone    101   01/11/93
 //	  -15.5  Brook   112  11/03/02
 //	   -0.7Bone Broo    9901/01/03
  		int recCount = 0;
 		try{
-			while((record=aFixLenDataParser2.getNext(record))!=null){
+			while((record=aFixLenDataParser.getNext(record))!=null){
 				if(recCount==0) {
 					assertEquals(record.getField(0).toString(),"1.0");
 					assertEquals(record.getField(1).toString(),"Stone");
@@ -225,11 +253,15 @@
 	 */
 	
 	public void test_badFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		boolean failed = false;
 		// test no handler ------------------------------------
-		aParser2.open(in2,metadata);
 		try{
+			aParser2.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+	aParser2.setDataSource(in2);
+		try{
 			while((record=aParser2.getNext(record))!=null){
 				fail("Should throw Exception");
 			}
@@ -253,12 +285,16 @@
 	 */
 	
 	public void test_strict_badFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 
 		// test strict handler ------------------------------------
-		aParser2.open(in2,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.STRICT);
-		aParser2.addBDFHandler(aHandler);
+		try{
+			aParser2.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser2.setDataSource(in2);
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.STRICT);
+		aParser2.setExceptionHandler(aHandler);
 		int recCount = 0;
 		try{
 			while((record=aParser2.getNext(record))!=null){
@@ -281,12 +317,16 @@
 	 */
 	
 	public void test_controlled_badFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 
 		// test controlled handler ------------------------------------
-		aParser2.open(in2,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.CONTROLLED);
-		aParser2.addBDFHandler(aHandler);
+		try {
+			aParser2.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser2.setDataSource(in2);
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.CONTROLLED);
+		aParser2.setExceptionHandler(aHandler);
 		int recCount = 0;
 		try{
 			while((record=aParser2.getNext(record))!=null){
@@ -299,7 +339,7 @@
 			fail("Should not throw Exception");
 			ee.printStackTrace();
 		}
-		assertEquals(2,recCount);  //may need to be revised
+		assertEquals(3,recCount);  //may need to be revised
 		//depending how we implement nullable property
 		aParser2.close();
 
@@ -312,11 +352,15 @@
 	 */
 	
 	public void test_lenient_badFile() {
-		BadDataFormatExceptionHandler aHandler = null;
+		IParserExceptionHandler aHandler = null;
 		// test lenient handler ------------------------------------
-		aParser2.open(in2,metadata);
-		aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.LENIENT);
-		aParser2.addBDFHandler(aHandler);
+		try {
+			aParser2.init(metadata);
+		} catch (ComponentNotReadyException e1) {
+		}
+		aParser2.setDataSource(in2);
+		aHandler = ParserExceptionHandlerFactory.getHandler(PolicyType.LENIENT);
+		aParser2.setExceptionHandler(aHandler);
 		int recCount = 0;
 		
 // the content of the test file

Deleted: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_SQLDataParser_Test.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_SQLDataParser_Test.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/BadDataFormatExceptionHandler_SQLDataParser_Test.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,332 +0,0 @@
-/*
- *  jETeL/Clover - Java based ETL application framework.
- *  Created on Apr 28, 2003
- *  Copyright (C) 2003, 2002  David Pavlis, Wes Maciorowski
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-package org.jetel.exception;
-
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-
-import org.jetel.data.DataRecord;
-import org.jetel.data.parser.SQLDataParser;
-import org.jetel.database.DBConnection;
-import org.jetel.exception.BadDataFormatException;
-import org.jetel.exception.BadDataFormatExceptionHandler;
-import org.jetel.exception.BadDataFormatExceptionHandlerFactory;
-import org.jetel.exception.ComponentNotReadyException;
-import org.jetel.metadata.DataRecordMetadata;
-import org.jetel.metadata.DataRecordMetadataXMLReaderWriter;
-
-import junit.framework.TestCase;
-
-/**
- * @author maciorowski
- *
- */
-public class BadDataFormatExceptionHandler_SQLDataParser_Test  extends TestCase {
- private SQLDataParser aParser1 = null;
- private SQLDataParser aParser2 = null;
- private DataRecord record;
- private DataRecordMetadata metadata = null;
-	
- protected void setUp() { 
-	DBConnection aDBConnection = null;
-	 DataRecordMetadataXMLReaderWriter xmlReader = new DataRecordMetadataXMLReaderWriter();
-			
-	 try {
-		metadata = xmlReader.read(new FileInputStream("config\\test\\rec_def\\db_def_rec.xml"));
-		aDBConnection = new DBConnection("", "config\\test\\msaccess.clover_test.txt");
-	 } catch(FileNotFoundException e){
-		 e.printStackTrace();
-	 }
-	
-	aParser2 = new SQLDataParser("connection","SELECT * FROM bad");
-
-	aParser1 = new SQLDataParser("connection","SELECT * FROM good");
-	try {
-		aParser1.open(aDBConnection,metadata);
-		aParser2.open(aDBConnection,metadata);
-	} catch (ComponentNotReadyException e1) {
-		e1.printStackTrace();
-	}
-	 record = new DataRecord(metadata);
-	 record.init();
-	 aParser1.initSQLDataMap(record);
-	 aParser2.initSQLDataMap(record);
- }
-	
- protected void tearDown() {
-	 aParser1.close();
-	 aParser1 = null;
-
-	 aParser2.close();
-	 aParser2 = null;
-	 record  = null;
-		
-	 metadata = null;
- }
-	
- /**
-  *  Test for @link for a well formatted data source.
-  *  No handler
-  */
-	
- public void test_goodFile() {
-	 BadDataFormatExceptionHandler aHandler = null;
-
-	 // test no handler ------------------------------------
-	 try{
-		 while((record=aParser1.getNext(record))!=null){}
-	 } catch (BadDataFormatException e){	
-		 fail("Should not raise an BadDataFormatException");
-		 e.printStackTrace();
-	 } catch (Exception ee){
-		 fail("Should not throw Exception");
-		 ee.printStackTrace();
-	 }
-
- }
-	
- /**
-  *  Test for @link for a well formatted data source.
-  *  strict handler
-  */
-	
- public void test_strict_goodFile() {
-	 BadDataFormatExceptionHandler aHandler = null;
-	 // test strict handler ------------------------------------
-	 aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.STRICT);
-	 aParser1.addBDFHandler(aHandler);
-	 try{
-		 while((record=aParser1.getNext(record))!=null){}
-	 } catch (BadDataFormatException e){	
-		 fail("Should not raise an BadDataFormatException");
-		 e.printStackTrace();
-	 } catch (Exception ee){
-		 fail("Should not throw Exception");
-		 ee.printStackTrace();
-	 }
-		 
- }
-	
- /**
-  *  Test for @link for a well formatted data source.
-  *  controlled handler
-  */
-	
- public void test_controlled_goodFile() {
-	 BadDataFormatExceptionHandler aHandler = null;
-	 // test controlled handler ------------------------------------
-	 aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.CONTROLLED);
-	 aParser1.addBDFHandler(aHandler);
-		
-	 int recCount = 0;
-	 try{
-		 while((record=aParser1.getNext(record))!=null){
-			 if(recCount==0) {
-				 assertEquals(record.getField(0).toString(),"1.0");
-				 assertEquals(record.getField(1).toString(),"Stone");
-				 assertEquals(record.getField(2).toString(),"101");
-				 assertEquals(record.getField(3).toString(),"1993-01-11 00:00:00");
-			 } else if(recCount==1) {
-				 assertEquals(record.getField(0).toString(),"-15.5");
-				 assertEquals(record.getField(1).toString(),"Brook");
-				 assertEquals(record.getField(2).toString(),"112");
-				 assertEquals(record.getField(3).toString(),"2002-11-03 00:00:00");
-			 } else if(recCount==2) {
-				 assertEquals(record.getField(0).toString(),"-0.7");
-				 assertEquals(record.getField(1).toString(),"Bone Broo");
-				 assertEquals(record.getField(2).toString(),"99");
-				 assertEquals(record.getField(3).toString(),"2003-01-01 00:00:00");
-			 }
-			 recCount++;
-		 }
-		 assertEquals(3,recCount);		
-			
-	 } catch (BadDataFormatException e){	
-		 fail("Should not raise an BadDataFormatException");
-		 e.printStackTrace();
-	 } catch (Exception ee){
-		 fail("Should not throw Exception");
-		 ee.printStackTrace();
-	 }
-
- }
-	
- /**
-  *  Test for @link for a well formatted data source.
-  *  lenient handler
-  */
-	
- public void test_lenient_goodFile() {
-	 BadDataFormatExceptionHandler aHandler = null;
-	 // test lenient handler ------------------------------------
-	 aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.LENIENT);
-	 aParser1.addBDFHandler(aHandler);
-		
-	 int recCount = 0;
-	 try{
-		 while((record=aParser1.getNext(record))!=null){
-			 if(recCount==0) {
-				 assertEquals(record.getField(0).toString(),"1.0");
-				 assertEquals(record.getField(1).toString(),"Stone");
-				 assertEquals(record.getField(2).toString(),"101");
-				 assertEquals(record.getField(3).toString(),"1993-01-11 00:00:00");
-			 } else if(recCount==1) {
-				 assertEquals(record.getField(0).toString(),"-15.5");
-				 assertEquals(record.getField(1).toString(),"Brook");
-				 assertEquals(record.getField(2).toString(),"112");
-				 assertEquals(record.getField(3).toString(),"2002-11-03 00:00:00");
-			 } else if(recCount==2) {
-				 assertEquals(record.getField(0).toString(),"-0.7");
-				 assertEquals(record.getField(1).toString(),"Bone Broo");
-				 assertEquals(record.getField(2).toString(),"99");
-				 assertEquals(record.getField(3).toString(),"2003-01-01 00:00:00");
-			 }
-			 recCount++;
-		 }
-		 assertEquals(3,recCount);
-	 } catch (BadDataFormatException e){	
-		 fail("Should not raise an BadDataFormatException");
-		 e.printStackTrace();
-	 } catch (Exception ee){
-		 fail("Should not throw Exception");
-		 ee.printStackTrace();
-	 }
- }
-	
-
- /**
-  *  Test for a data source with poorly formatted fields.
-  *  No handler.
-  */
-	
- public void test_badFile() {
-	 BadDataFormatExceptionHandler aHandler = null;
-	 boolean failed = false;
-	 // test no handler ------------------------------------
-	 try{
-		 while((record=aParser2.getNext(record))!=null){
-			 fail("Should throw Exception");
-		 }
-	 } catch (BadDataFormatException e){	
-		 fail("Should not raise an BadDataFormatException");
-		 e.printStackTrace();
-	 } catch (RuntimeException re) {
-		 failed = true;
-	 } catch (Exception ee){
-		 ee.printStackTrace();
-	 }
-	 if(!failed)
-		 fail("Should raise an RuntimeException");
- }
-	
-
- /**
-  *  Test for a data source with poorly formatted fields.
-  *  No handler.
-  */
-	
- public void test_strict_badFile() {
-	 BadDataFormatExceptionHandler aHandler = null;
-
-	 // test strict handler ------------------------------------
-	 aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.STRICT);
-	 aParser2.addBDFHandler(aHandler);
-	 int recCount = 0;
-	 try{
-		 while((record=aParser2.getNext(record))!=null){
-			 recCount++;
-		 }
-		 fail("Should raise an BadDataFormatException");
-	 } catch (BadDataFormatException e){	
-	 } catch (Exception ee){
-		 fail("Should not throw Exception");
-		 ee.printStackTrace();
-	 }
-	 assertEquals(0,recCount);
- }
-	
-
- /**
-  *  Test for a data source with poorly formatted fields.
-  *  controlled handler.
-  */
-	
- public void test_controlled_badFile() {
-	 BadDataFormatExceptionHandler aHandler = null;
-
-	 // test controlled handler ------------------------------------
-	 aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.CONTROLLED);
-	 aParser2.addBDFHandler(aHandler);
-	 int recCount = 0;
-	 try{
-		 while((record=aParser2.getNext(record))!=null){
-			 recCount++;
-		 }
-	 } catch (BadDataFormatException e){	
-		 fail("Should not raise an BadDataFormatException");
-		 e.printStackTrace();
-	 } catch (Exception ee){
-		 fail("Should not throw Exception");
-		 ee.printStackTrace();
-	 }
-	 assertEquals(0,recCount);  //may need to be revised
-	 //depending how we implement nullable property
-
- }
-	
-
- /**
-  *  Test for a data source with poorly formatted fields.
-  *  lenient handler.
-  */
-	
- public void test_lenient_badFile() {
-	 BadDataFormatExceptionHandler aHandler = null;
-	 // test lenient handler ------------------------------------
-	 aHandler = BadDataFormatExceptionHandlerFactory.getHandler(BadDataFormatExceptionHandler.LENIENT);
-	 aParser2.addBDFHandler(aHandler);
-	 int recCount = 0;
-		
-	 try{
-		 while((record=aParser2.getNext(record))!=null){
-			 if(recCount==0) {
-				 assertEquals("No Name",record.getField(1).toString());
-				 assertEquals("101",record.getField(2).toString());
-			 } else if(recCount==1) {
-				 assertEquals("Brook",record.getField(1).toString());
-				 assertEquals("2000-01-01 00:00:00",record.getField(3).toString());
-			 } else if(recCount==2) {
-				assertEquals("0.0",record.getField(0).toString());
-				assertEquals("5",record.getField(2).toString());
-			 }
-			 recCount++;
-		 }
-		 assertEquals(3,recCount);
-	 } catch (BadDataFormatException e){	
-		 fail("Should not raise an BadDataFormatException");
-		 e.printStackTrace();
-	 } catch (Exception ee){
-		 fail("Should not throw Exception");
-		 ee.printStackTrace();
-	 }
- }
-
-
-}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/ExceptionTestSuite.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/ExceptionTestSuite.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/exception/ExceptionTestSuite.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -32,7 +32,6 @@
 	TestSuite suite= new TestSuite("All org.jetel.exception Tests");
 	suite.addTest(new TestSuite(org.jetel.exception.BadDataFormatExceptionHandler_FixLenDataParser2_Test.class));
 	suite.addTest(new TestSuite(org.jetel.exception.BadDataFormatExceptionHandler_DelimitedDataParserNIO_Test.class));
-	suite.addTest(new TestSuite(org.jetel.exception.BadDataFormatExceptionHandler_SQLDataParser_Test.class));
 		
 	return suite;
 }

Deleted: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/graph/DirectEdgeTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/graph/DirectEdgeTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/graph/DirectEdgeTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,189 +0,0 @@
-/*
- *  jETeL/Clover - Java based ETL application framework.
- *  Created on Jan 24, 2005
- *  Copyright (C) 2002-2005  David Pavlis, Wes Maciorowski
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-package org.jetel.graph;
-
-import java.io.IOException;
-import junit.framework.TestCase;
-
-import org.jetel.data.DataRecord;
-import org.jetel.graph.DirectEdge;
-import org.jetel.graph.Edge;
-import org.jetel.metadata.DataFieldMetadata;
-import org.jetel.metadata.DataRecordMetadata;
-
-public class DirectEdgeTest extends TestCase {
-	private DataRecordMetadata aDelimitedDataRecordMetadata;
-	private DirectEdge edge;
-	
-	public DirectEdgeTest(String name){
-	    super(name);
-	}
-	
-	protected void setUp() { 
-		aDelimitedDataRecordMetadata = new DataRecordMetadata("record2",DataRecordMetadata.DELIMITED_RECORD);
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field0",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field1",DataFieldMetadata.BYTE_FIELD,":"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field2",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field3",DataFieldMetadata.INTEGER_FIELD,(short)23));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field4",DataFieldMetadata.INTEGER_FIELD,";"));
-
-		edge=new DirectEdge(new Edge("testEdge",aDelimitedDataRecordMetadata));
-		try{
-		    edge.init();
-		}catch(IOException ex){
-		    throw new RuntimeException(ex);
-		}
-	}
-
-	protected void tearDown() {
-		aDelimitedDataRecordMetadata = null;
-		edge=null;
-	}
-
-
-	/**
-	 *  Test for @link org.jetel.graph.DirectEdge
-	 *
-	 */
-	public void test_1_sendData() {
-	    final int NUM_REC=1;
-	    DataRecord record=new DataRecord(aDelimitedDataRecordMetadata);
-	    record.init();
-	    
-		assertTrue(edge.isOpen());
-		assertFalse(edge.hasData());
-	
-		try{
-		for (int i=0;i<NUM_REC;i++){
-		    edge.writeRecord(record);
-		}
-		}catch(Exception ex){
-		    throw new RuntimeException(ex);
-		}
-		assertTrue(edge.hasData());
-		try{
-		    assertNotNull(edge.readRecord(record));
-		}catch(Exception ex){
-		    throw new RuntimeException(ex);
-		}
-	}
-	
-	public void test_2_sendData() {
-	    ProducerThread thread1;
-	    ConsumerThread thread2;
-	    
-	    final DataRecord record1=new DataRecord(aDelimitedDataRecordMetadata);
-	    final DataRecord record2=new DataRecord(aDelimitedDataRecordMetadata);
-	    record2.init();
-	    record1.init();
-	    edge.open();
-	    assertTrue(edge.isOpen());
-		assertFalse(edge.hasData());
-		
-		thread1=new ProducerThread(record1,edge);
-		thread2=new ConsumerThread(record2,edge);
-		
-		// ROUND 1 - MAX, MIN priority
-		thread1.setPriority(Thread.MAX_PRIORITY);
-		thread2.setPriority(Thread.MIN_PRIORITY);
-		thread1.start();
-		thread2.start();
-		try{
-		thread1.join();
-		thread2.join();
-		}
-		catch(Exception ex){
-		    
-		}
-		
-		assertEquals(ProducerThread.NUM_REC,thread2.getCounter());
-		
-		// ROUND 2 - MIN , MAX priority
-		edge.open();
-	    assertTrue(edge.isOpen());
-		assertFalse(edge.hasData());
-		thread1=new ProducerThread(record1,edge);
-		thread2=new ConsumerThread(record2,edge);
-		thread1.setPriority(Thread.MIN_PRIORITY);
-		thread2.setPriority(Thread.MAX_PRIORITY);
-		
-		thread1.start();
-		thread2.start();
-		try{
-		thread1.join();
-		thread2.join();
-		}
-		catch(Exception ex){
-		    
-		}
-		
-		assertEquals(ProducerThread.NUM_REC,thread2.getCounter());
-		
-	}
-	
-	
-	private static class ProducerThread extends Thread {
-	    public static final int NUM_REC=999999;
-	    DataRecord record;
-	    DirectEdge edge;
-	    
-	    ProducerThread(DataRecord record, DirectEdge edge){
-	        this.record=record;
-	        this.edge=edge;
-	    }
-	    
-	    public void run(){
-	        for (int i=0;i<NUM_REC;i++){
-	            try{
-	                edge.writeRecord(record);
-	                //System.out.println(">> SENT RECORD ***");
-	            }catch(Exception ex){
-	            }
-	        }
-	        edge.close();
-	    }
-	} 
-	
-	private static class ConsumerThread extends Thread {
-	    DataRecord record;
-	    DirectEdge edge;
-	    int counter;
-	    
-	    ConsumerThread(DataRecord record, DirectEdge edge){
-	        this.record=record;
-	        this.edge=edge;
-	    }
-	    
-	    public void run(){
-	        counter=0;
-	        try{
-	            while(edge.readRecord(record)!=null){
-	                counter++;
-	                //System.out.println("<< GOT RECORD ***");
-	            }
-	        }catch(Exception ex){
-	        }
-	    }
-	    
-	    public int getCounter(){
-	        return counter;
-	    }
-	}
-}
\ No newline at end of file

Copied: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/graph/EdgeTest.java (from rev 2346, trunk/cloveretl.engine/test/org/jetel/graph/EdgeTest.java)

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/interpreter/TestInterpreter.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/interpreter/TestInterpreter.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/interpreter/TestInterpreter.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -39,12 +39,13 @@
 import org.jetel.data.primitive.DecimalFactory;
 import org.jetel.data.primitive.Numeric;
 import org.jetel.data.sequence.Sequence;
+import org.jetel.data.sequence.SequenceFactory;
 import org.jetel.graph.TransformationGraph;
 import org.jetel.interpreter.node.CLVFStart;
 import org.jetel.interpreter.node.CLVFStartExpression;
+import org.jetel.main.runGraph;
 import org.jetel.metadata.DataFieldMetadata;
 import org.jetel.metadata.DataRecordMetadata;
-import org.jetel.sequence.PrimitiveSequence;
 
 
 import org.apache.commons.logging.Log;
@@ -63,7 +64,7 @@
     TransformationGraph graph;
 	
 	protected void setUp() {
-	    Defaults.init();
+	    runGraph.initEngine(null, null);
 	    
         graph=new TransformationGraph();
         
@@ -119,7 +120,8 @@
 		SetVal.setInt(record,4,-999);
 		record1.getField("Value").setNull(true);
         
-        Sequence seq = new PrimitiveSequence("test",graph,"test");
+        Sequence seq = SequenceFactory.createSequence(graph, "PRIMITIVE_SEQUENCE", 
+        		new Object[]{"test",graph,"test"}, new Class[]{String.class,TransformationGraph.class,String.class});
         graph.addSequence("test", seq);
 	}
 	
@@ -534,8 +536,8 @@
 		      assertEquals("dplusd1",new Double(0.1000),new Double(((Decimal)result[12]).getDouble()));
 		      assertEquals("dplusj",new Double(100.1),new Double(((Decimal)result[13]).getDouble()));
 		      assertEquals("dplusn",new Double(10.1),new Double(((Decimal)result[14]).getDouble()));
-		      assertEquals("spluss1","hello world",(((StringBuffer)result[17]).toString()));
-		      assertEquals("splusm1","hello0.0010",(((StringBuffer)result[18]).toString()));
+		      assertEquals("spluss1","hello world",(((StringBuilder)result[17]).toString()));
+		      assertEquals("splusm1","hello0.0010",(((StringBuilder)result[18]).toString()));
 		      assertEquals("dateplus",new GregorianCalendar(2004,01,9,15,00,30).getTime(),(Date)result[20]);
 
 		} catch (ParseException e) {
@@ -1230,7 +1232,7 @@
 		      
 		      Object[] result = executor.stack.globalVarSlot;
 		      assertEquals(3,((CloverInteger)result[1]).getInt());
-		      assertEquals("April",((StringBuffer)result[2]).toString());
+		      assertEquals("April",((StringBuilder)result[2]).toString());
 		      assertEquals(true,((Boolean)result[4]).booleanValue());
 		      
 		} catch (ParseException e) {
@@ -1605,22 +1607,22 @@
 		      parseTree.dump("");
 		      
 		      Object[] result = executor.stack.globalVarSlot;
-		      assertEquals("subs","ello ",((StringBuffer)result[2]).toString());
-		      assertEquals("upper","ELLO ",((StringBuffer)result[3]).toString());
-		      assertEquals("lower","ello hi   ",((StringBuffer)result[4]).toString());
-		      assertEquals("t(=trim)","im  ello hi",((StringBuffer)result[5]).toString());
+		      assertEquals("subs","ello ",((StringBuilder)result[2]).toString());
+		      assertEquals("upper","ELLO ",((StringBuilder)result[3]).toString());
+		      assertEquals("lower","ello hi   ",((StringBuilder)result[4]).toString());
+		      assertEquals("t(=trim)","im  ello hi",((StringBuilder)result[5]).toString());
 		      assertEquals("l(=length)",5,((Decimal)result[6]).getInt());
-		      assertEquals("c(=concat)","ello hi   ELLO 2,today is "+new Date(),((StringBuffer)result[7]).toString());
+		      assertEquals("c(=concat)","ello hi   ELLO 2,today is "+new Date(),((StringBuilder)result[7]).toString());
 //		      assertEquals("datum",record.getField("Born").getValue(),(Date)result[8]);
-		      assertEquals("ddiff",-1,((CloverLong)result[10]).getLong());
+		      assertEquals("ddiff",-2,((CloverLong)result[10]).getLong());
 		      assertEquals("isn",false,((Boolean)result[12]).booleanValue());
 		      assertEquals("s1",new CloverDouble(6),(CloverDouble)result[13]);
-		      assertEquals("rep","etto hi   EttO 2,today is "+new Date(),((StringBuffer)result[14]).toString());
+		      assertEquals("rep","etto hi   EttO 2,today is "+new Date(),((StringBuilder)result[14]).toString());
 		      assertEquals("stn",0.25125,((Decimal)result[15]).getDouble());
-		      assertEquals("nts","22",((StringBuffer)result[16]).toString());
+		      assertEquals("nts","22",((StringBuilder)result[16]).toString());
 		      assertEquals("dtn",11.0,((Decimal)result[18]).getDouble());
 		      assertEquals("ii",21,((CloverInteger)result[19]).getInt());
-		      assertEquals("dts","02.12.24",((StringBuffer)result[21]).toString());
+		      assertEquals("dts","02.12.24",((StringBuilder)result[21]).toString());
 		      
 		} catch (ParseException e) {
 		    	System.err.println(e.getMessage());

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/metadata/DataRecordMetadataTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/metadata/DataRecordMetadataTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/metadata/DataRecordMetadataTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -52,17 +52,17 @@
 	public void test_1_getField() {
 		DataFieldMetadata aDataFieldMetadata = null;
 
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 0",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 1",DataFieldMetadata.BYTE_FIELD,":"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 3",DataFieldMetadata.INTEGER_FIELD,(short)23));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 4",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field0",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field1",DataFieldMetadata.BYTE_FIELD,":"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field2",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field3",DataFieldMetadata.INTEGER_FIELD,(short)23));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field4",DataFieldMetadata.INTEGER_FIELD,";"));
 		assertEquals(5, aDelimitedDataRecordMetadata.getNumFields());
 		aDataFieldMetadata  = aDelimitedDataRecordMetadata.getField(1);
 		if (aDataFieldMetadata==null) System.out.println("NULL returned!");
 		assertEquals(DataFieldMetadata.BYTE_FIELD, aDataFieldMetadata.getType() );
 		assertEquals(":", aDataFieldMetadata.getDelimiter() );
-		assertEquals("Field 1", aDataFieldMetadata.getName());
+		assertEquals("Field1", aDataFieldMetadata.getName());
 		aDataFieldMetadata  = aDelimitedDataRecordMetadata.getField(3);
 		assertEquals((short)23, aDataFieldMetadata.getSize() );
 	}
@@ -74,16 +74,16 @@
 	public void test_2_getField() {
 		DataFieldMetadata aDataFieldMetadata = null;
 
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 0",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 1",DataFieldMetadata.BYTE_FIELD,":"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 3",DataFieldMetadata.INTEGER_FIELD,(short)23));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 4",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDataFieldMetadata  = aDelimitedDataRecordMetadata.getField("Field 1");
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field0",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field1",DataFieldMetadata.BYTE_FIELD,":"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field2",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field3",DataFieldMetadata.INTEGER_FIELD,(short)23));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field4",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDataFieldMetadata  = aDelimitedDataRecordMetadata.getField("Field1");
 		assertEquals(DataFieldMetadata.BYTE_FIELD, aDataFieldMetadata.getType() );
 		assertEquals(":", aDataFieldMetadata.getDelimiter() );
-		assertEquals("Field 1", aDataFieldMetadata.getName());
-		aDataFieldMetadata  = aDelimitedDataRecordMetadata.getField("Field 3");
+		assertEquals("Field1", aDataFieldMetadata.getName());
+		aDataFieldMetadata  = aDelimitedDataRecordMetadata.getField("Field3");
 		assertEquals((short)23, aDataFieldMetadata.getSize() );
 	}
 
@@ -92,16 +92,16 @@
 	 *
 	 */
 	public void test_getFieldPosition() {
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 0",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 1",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 3",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 4",DataFieldMetadata.INTEGER_FIELD,";"));
-		assertEquals(0, aDelimitedDataRecordMetadata.getFieldPosition("Field 0"));
-		assertEquals(1, aDelimitedDataRecordMetadata.getFieldPosition("Field 1"));
-		assertEquals(2, aDelimitedDataRecordMetadata.getFieldPosition("Field 2"));
-		assertEquals(3, aDelimitedDataRecordMetadata.getFieldPosition("Field 3"));
-		assertEquals(4, aDelimitedDataRecordMetadata.getFieldPosition("Field 4"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field0",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field1",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field2",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field3",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field4",DataFieldMetadata.INTEGER_FIELD,";"));
+		assertEquals(0, aDelimitedDataRecordMetadata.getFieldPosition("Field0"));
+		assertEquals(1, aDelimitedDataRecordMetadata.getFieldPosition("Field1"));
+		assertEquals(2, aDelimitedDataRecordMetadata.getFieldPosition("Field2"));
+		assertEquals(3, aDelimitedDataRecordMetadata.getFieldPosition("Field3"));
+		assertEquals(4, aDelimitedDataRecordMetadata.getFieldPosition("Field4"));
 	}
 
 	/**
@@ -109,11 +109,11 @@
 	 *
 	 */
 	public void test_addField() {
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 0",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 1",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 3",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 4",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field0",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field1",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field2",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field3",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field4",DataFieldMetadata.INTEGER_FIELD,";"));
 		assertEquals(5, aDelimitedDataRecordMetadata.getNumFields());
 	}
 
@@ -123,15 +123,15 @@
 	 */
 	public void test_1_delField() {
 		DataFieldMetadata aDataFieldMetadata = null;
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 0",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 1",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 3",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 4",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field0",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field1",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field2",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field3",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field4",DataFieldMetadata.INTEGER_FIELD,";"));
 		aDelimitedDataRecordMetadata.delField((short)2);
 		assertEquals(4, aDelimitedDataRecordMetadata.getNumFields());
 		aDataFieldMetadata  = aDelimitedDataRecordMetadata.getField(2);
-		assertNotSame("Field 1", aDataFieldMetadata.getName());
+		assertNotSame("Field1", aDataFieldMetadata.getName());
 	}
 
 
@@ -141,14 +141,14 @@
 	 */
 	public void test_2_delField() {
 		DataFieldMetadata aDataFieldMetadata = null;
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 0",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 1",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 3",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 4",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.delField("Field 4");
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field0",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field1",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field2",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field3",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field4",DataFieldMetadata.INTEGER_FIELD,";"));
+		aDelimitedDataRecordMetadata.delField("Field4");
 		assertEquals(4, aDelimitedDataRecordMetadata.getNumFields());
 		aDataFieldMetadata  = aDelimitedDataRecordMetadata.getField(3);
-		assertNotSame("Field 3", aDataFieldMetadata.getName());
+		assertEquals("Field3", aDataFieldMetadata.getName());
 	}
 }
\ No newline at end of file

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/metadata/DataRecordMetadataXMLReaderWriterTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/metadata/DataRecordMetadataXMLReaderWriterTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/metadata/DataRecordMetadataXMLReaderWriterTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -53,18 +53,18 @@
 		aDelimitedDataRecordMetadata.addField(aDataFieldMetadata);
 
 		aDataFieldMetadata = new DataFieldMetadata("Field_0",DataFieldMetadata.INTEGER_FIELD,";");
-		aDataFieldMetadata.setCodeStr("return Math.abs(-5);");
+//		aDataFieldMetadata.setCodeStr("return Math.abs(-5);");
 		aDelimitedDataRecordMetadata.addField(aDataFieldMetadata);
 		aDataFieldMetadata = new DataFieldMetadata("Field_1",DataFieldMetadata.STRING_FIELD,":");
 		aDelimitedDataRecordMetadata.addField(aDataFieldMetadata);
 		aDataFieldMetadata = new DataFieldMetadata("Field_2",DataFieldMetadata.INTEGER_FIELD,",");
-		aDataFieldMetadata.setCodeStr("return 7;");
+//		aDataFieldMetadata.setCodeStr("return 7;");
 		aDelimitedDataRecordMetadata.addField(aDataFieldMetadata);
 		aDataFieldMetadata = new DataFieldMetadata("Field_3",DataFieldMetadata.NUMERIC_FIELD,"\n");
-		aDataFieldMetadata.setCodeStr("return [record1].[field1]/[record2].[field2];");
+//		aDataFieldMetadata.setCodeStr("return [record1].[field1]/[record2].[field2];");
 		aDelimitedDataRecordMetadata.addField(aDataFieldMetadata);
 
-		testFile1 = "data\\out\\test1.txt";	
+		testFile1 = "data/out/test1.txt";	
 		File aFile=new File(testFile1);
 		 if(!aFile.exists()) {
 			new File(aFile.getParent()).mkdirs();
@@ -111,35 +111,35 @@
 			assertEquals(null,aDataFieldMetadata.getDefaultValue());
 			assertEquals(null,aDataFieldMetadata.getFormatStr());
 			assertEquals(DataFieldMetadata.INTEGER_FIELD,aDataFieldMetadata.getType());
-			assertEquals(null,aDataFieldMetadata.getCodeStr());
+//			assertEquals(null,aDataFieldMetadata.getCodeStr());
 			
 			aDataFieldMetadata = aDelimitedDataRecordMetadata.getField("Field_0");
 			assertEquals(";",aDataFieldMetadata.getDelimiter());
 			assertEquals(null,aDataFieldMetadata.getDefaultValue());
 			assertEquals(null,aDataFieldMetadata.getFormatStr());
 			assertEquals(DataFieldMetadata.INTEGER_FIELD,aDataFieldMetadata.getType());
-			assertEquals("return Math.abs(-5);",aDataFieldMetadata.getCodeStr().replace('\n',' ').replace('\t',' ').trim());
+//			assertEquals("return Math.abs(-5);",aDataFieldMetadata.getCodeStr().replace('\n',' ').replace('\t',' ').trim());
 
 			aDataFieldMetadata = aDelimitedDataRecordMetadata.getField("Field_1");
 			assertEquals(":",aDataFieldMetadata.getDelimiter());
 			assertEquals(null,aDataFieldMetadata.getDefaultValue());
 			assertEquals(null,aDataFieldMetadata.getFormatStr());
 			assertEquals(DataFieldMetadata.STRING_FIELD,aDataFieldMetadata.getType());
-			assertEquals(null,aDataFieldMetadata.getCodeStr());
+//			assertEquals(null,aDataFieldMetadata.getCodeStr());
 
 			aDataFieldMetadata = aDelimitedDataRecordMetadata.getField("Field_2");
 			assertEquals(",",aDataFieldMetadata.getDelimiter());
 			assertEquals(null,aDataFieldMetadata.getDefaultValue());
 			assertEquals(null,aDataFieldMetadata.getFormatStr());
 			assertEquals(DataFieldMetadata.INTEGER_FIELD,aDataFieldMetadata.getType());
-			assertEquals("return 7;",aDataFieldMetadata.getCodeStr().replace('\n',' ').replace('\t',' ').trim());
+//			assertEquals("return 7;",aDataFieldMetadata.getCodeStr().replace('\n',' ').replace('\t',' ').trim());
 
 			aDataFieldMetadata = aDelimitedDataRecordMetadata.getField("Field_3");
 			assertEquals("\n",aDataFieldMetadata.getDelimiter());
 			assertEquals(null,aDataFieldMetadata.getDefaultValue());
 			assertEquals(null,aDataFieldMetadata.getFormatStr());
 			assertEquals(DataFieldMetadata.NUMERIC_FIELD,aDataFieldMetadata.getType());
-			assertEquals("return [record1].[field1]/[record2].[field2];",aDataFieldMetadata.getCodeStr().replace('\n',' ').replace('\t',' ').trim());
+//			assertEquals("return [record1].[field1]/[record2].[field2];",aDataFieldMetadata.getCodeStr().replace('\n',' ').replace('\t',' ').trim());
 		} catch (FileNotFoundException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();

Deleted: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/ClassBuilderTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/ClassBuilderTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/ClassBuilderTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,52 +0,0 @@
-/*
- * Created on May 31, 2003
- *
- *  jETeL/Clover - Java based ETL application framework.
- *  Copyright (C) 2002  David Pavlis
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-package org.jetel.util;
-
-import junit.framework.TestCase;
-
-/**
- * @author Wes Maciorowski
- * @version 1.0
- * 
- * JUnit tests for org.jetel.util.ClassBuilder class.
- */
-public class ClassBuilderTest  extends TestCase  {
-
-	protected void setUp() {
-	}
-
-	protected void tearDown() {
-	}
-
-	/**
-	 *  Test for @link org.jetel.util.ClassBuilder.ClassBuilder(DataRecord record, DataRecordMetadata[] arrayDataRecordMetadata)
-	 *
-	 */
-
-	public void testConstructor() {}
-
-	/**
-	 *  Test for @link int[][]  org.jetel.util.ClassBuilder.constructMethod(String tmpCode)
-	 *
-	 */
-
-	public void testConstructMethod() {}
-	
-}

Deleted: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CodeParserTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CodeParserTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CodeParserTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,99 +0,0 @@
-/*
- * Created on Jun 4, 2003
- *
- * To change the template for this generated file go to
- * Window>Preferences>Java>Code Generation>Code and Comments
- */
-package org.jetel.util;
-
-import org.jetel.data.DataRecord;
-import org.jetel.metadata.DataFieldMetadata;
-import org.jetel.metadata.DataRecordMetadata;
-import org.jetel.util.ClassBuilder;
-
-import junit.framework.TestCase;
-
-/**
- * @author Wes Maciorowski
- * @version 1.0
- * 
- * JUnit tests for org.jetel.util.CodeParser class.
- */
-public class CodeParserTest extends TestCase  {
-	StringBuffer test0 = null;
-	StringBuffer test1 = null;
-	StringBuffer test2 = null;
-	StringBuffer test3 = null;
-	StringBuffer test4 = null;
-	ClassBuilder aClassBuilder = null;
-
-	protected void setUp() {
-		//lets create 5 test cases
-		
-		// no record references in the code
-		
-		// input record reference in the code
-		
-		// reference to another field in the code
-		
-		// input record reference and reference to another field in the code
-
-		// input record reference and reference to another field in the code
-		// plus incorrect refs
-		
-		DataFieldMetadata aDataFieldMetadata = null;
-
-		DataRecordMetadata atestRecordMetadata = new DataRecordMetadata("test",DataRecordMetadata.FIXEDLEN_RECORD);
-		aDataFieldMetadata = new DataFieldMetadata("Field 0",DataFieldMetadata.STRING_FIELD,(short)20);
-		aDataFieldMetadata.setCodeStr(test0.toString());
-		aDataFieldMetadata = new DataFieldMetadata("Field 1",DataFieldMetadata.NUMERIC_FIELD,(short)1);
-		aDataFieldMetadata.setCodeStr(test0.toString());
-		aDataFieldMetadata = new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,(short)5);
-		aDataFieldMetadata.setCodeStr(test0.toString());
-		aDataFieldMetadata = new DataFieldMetadata("Field 3",DataFieldMetadata.NUMERIC_FIELD,(short)5);
-		aDataFieldMetadata.setCodeStr(test0.toString());
-		aDataFieldMetadata = new DataFieldMetadata("Field 4",DataFieldMetadata.NUMERIC_FIELD,(short)5);
-		aDataFieldMetadata.setCodeStr(test0.toString());
-
-		atestRecordMetadata.addField(aDataFieldMetadata);
-
-
-		// lets create out test data record
-		DataRecord record = new DataRecord(atestRecordMetadata);
-		
-		// lets create 2 input records
-		DataRecordMetadata[] arrayDataRecordMetadata = null;
-		arrayDataRecordMetadata = new DataRecordMetadata[2];
-		
-		DataRecordMetadata aFixedDataRecordMetadata = new DataRecordMetadata("record1",DataRecordMetadata.FIXEDLEN_RECORD);
-		aFixedDataRecordMetadata.addField(new DataFieldMetadata("Field 0",DataFieldMetadata.STRING_FIELD,(short)20));
-		aFixedDataRecordMetadata.addField(new DataFieldMetadata("Field 1",DataFieldMetadata.BYTE_FIELD,(short)1));
-		aFixedDataRecordMetadata.addField(new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,(short)5));
-		aFixedDataRecordMetadata.addField(new DataFieldMetadata("Field 3",DataFieldMetadata.INTEGER_FIELD,(short)5));
-		aFixedDataRecordMetadata.addField(new DataFieldMetadata("Field 4",DataFieldMetadata.NUMERIC_FIELD,(short)10));
-
-		DataRecordMetadata aDelimitedDataRecordMetadata = new DataRecordMetadata("record2",DataRecordMetadata.DELIMITED_RECORD);
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 0",DataFieldMetadata.STRING_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 1",DataFieldMetadata.BYTE_FIELD,":"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 2",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 3",DataFieldMetadata.INTEGER_FIELD,";"));
-		aDelimitedDataRecordMetadata.addField(new DataFieldMetadata("Field 4",DataFieldMetadata.NUMERIC_FIELD,";"));
-		
-		arrayDataRecordMetadata[0] = aFixedDataRecordMetadata;
-		arrayDataRecordMetadata[1] = aDelimitedDataRecordMetadata;
-		
-		aClassBuilder = new ClassBuilder(record,arrayDataRecordMetadata);
-	}
-
-	protected void tearDown() {
-	}
-
-
-	/**
-	 *  Test for @link int[][]  org.jetel.util.CodeParser.parse()
-	 *
-	 */
-
-	public void testparse() {}
-	
-}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CompileTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CompileTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CompileTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -25,7 +25,7 @@
 import java.io.IOException;
 
 import org.jetel.exception.ClassCompilationException;
-import org.jetel.util.Compile;
+import org.jetel.util.Compiler;
 
 import junit.framework.TestCase;
 
@@ -33,13 +33,13 @@
  * @author Wes Maciorowski
  * @version 1.0
  * 
- * JUnit tests for org.jetel.util.Compile class.
+ * JUnit tests for org.jetel.util.Compiler class.
  */
 public class CompileTest   extends TestCase  {
-	String testJavaFile1 = "src\\org\\jetel\\userclasses\\test1.java";	
-	String testJavaClassFile1 = "org\\jetel\\userclasses\\test1.class";	
-	String testJavaFile2 = "src\\org\\jetel\\userclasses\\test2.java";	
-	String testJavaClassFile2 = "org\\jetel\\userclasses\\test2.class";	
+	String testJavaFile1 = "src/org/jetel/userclasses/test1.java";	
+	String testJavaClassFile1 = "org/jetel/userclasses/test1.class";	
+	String testJavaFile2 = "src/org/jetel/userclasses/test2.java";	
+	String testJavaClassFile2 = "org/jetel/userclasses/test2.class";	
 	String classDirectory = "bin";
 
 	protected void setUp() {
@@ -105,26 +105,21 @@
 }
 
 /**
- *  Test for @link org.jetel.util.Compile.compileClass(String className)
+ *  Test for @link org.jetel.util.Compiler.CompilerClass(String className)
  *
  */
 
-//public void testCompileClass() {
-//	try {
-//		Compile.compileClass(testJavaFile1,classDirectory);
-//	} catch (ClassCompilationException e) {
-//		fail("Compile.compileClass should not throw exceptions");
-//		e.printStackTrace();
-//	}
-//	assertTrue(new File(classDirectory+File.separator+testJavaClassFile1).exists());
-//
-//	try {
-//		Compile.compileClass(testJavaFile2,classDirectory);
-//		fail("Compile.compileClass should throw exception");
-//	} catch (ClassCompilationException e) {
-//		e.printStackTrace();
-//	}
-//	assertFalse(new File(classDirectory+File.separator+testJavaClassFile2).exists());
-//}
+public void testCompilerClass() {
+	Compiler compiler;
 
+	compiler = new Compiler(testJavaFile1,true,classDirectory);
+	compiler.compile();
+	assertTrue(new File(classDirectory+File.separator+testJavaClassFile1).exists());
+
+	compiler = new Compiler(testJavaFile2,true,classDirectory);
+	compiler.compile();
+	System.out.print(compiler.getCapturedOutput());
+	assertFalse(new File(classDirectory+File.separator+testJavaClassFile2).exists());
+}
+
 }
\ No newline at end of file

Deleted: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CreateJavaObjectTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CreateJavaObjectTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/CreateJavaObjectTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -1,161 +0,0 @@
-/*
- *  jETeL/Clover - Java based ETL application framework.
- *  Copyright (C) 2002  David Pavlis
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- *  Created on May 31, 2003
- */
-package org.jetel.util;
-
-import java.io.DataOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-
-import org.jetel.exception.ClassCompilationException;
-import org.jetel.util.Compile;
-import org.jetel.util.CreateJavaObject;
-
-import junit.framework.TestCase;
-
-/**
- * @author Wes Maciorowski
- * @version 1.0
- * 
- * JUnit tests for org.jetel.util.Compile class.
- */
-public class CreateJavaObjectTest    extends TestCase  {
-	String testJavaFile1 = "src\\org\\jetel\\userclasses\\test1.java";	
-	String testJavaClassFile1 = "org\\jetel\\userclasses\\test1.class";	
-	String testJavaFile2 = "src\\org\\jetel\\userclasses\\test2.java";	
-	String testJavaClassFile2 = "org\\jetel\\userclasses\\test2.class";	
-	String classDirectory = "bin";
-//	private org.jetel.userclasses.test1 t1 = null;
-//
-//	private org.jetel.userclasses.test2 t2 = null;
-
-protected void setUp() {
-	StringBuffer tmp = new StringBuffer();
-	tmp.append("package org.jetel.userclasses;\n");	
-	tmp.append("public class test1 {\n");
-	tmp.append("\tpublic static Integer addTwo(Integer i, Integer ii) {\n");
-	tmp.append("\t\treturn new Integer(i.intValue()+ii.intValue());\n");
-	tmp.append("\t}\n");
-	tmp.append("}\n");
-
-	File aFile=new File(testJavaFile1);
-	 if(!aFile.exists()) {
-		new File(aFile.getParent()).mkdirs();
-		try {
-			DataOutputStream fos = new DataOutputStream(new FileOutputStream(testJavaFile1));
-			fos.writeBytes(tmp.toString());
-		} catch (IOException e3) {
-			e3.printStackTrace();
-		}
-	 }
-
-//	try {
-//		Compile.compileClass(testJavaFile1,classDirectory);
-//	} catch (ClassCompilationException e) {
-//		e.printStackTrace();
-//	}
-
-
-	tmp = new StringBuffer();
-	tmp.append("package org.jetel.userclasses;\n");	
-	tmp.append("public class test2 {\n");
-	tmp.append("\tInteger i;\n");
-	tmp.append("\tInteger ii;\n");
-	tmp.append("\tpublic test2(Integer i, Integer ii) {\n");
-	tmp.append("\tthis.i = i;\n");
-	tmp.append("\tthis.ii = ii;\n");
-	tmp.append("\t}\n");
-	tmp.append("\tpublic Integer addTwo() {\n");
-	tmp.append("\t\treturn new Integer(i.intValue()+ii.intValue());\n");
-	tmp.append("\t}\n");
-	tmp.append("}\n");
-
-	aFile=new File(testJavaFile2);
-	 if(!aFile.exists()) {
-		new File(aFile.getParent()).mkdirs();
-		try {
-			DataOutputStream fos = new DataOutputStream(new FileOutputStream(testJavaFile2));
-			fos.writeBytes(tmp.toString());
-		} catch (IOException e3) {
-			e3.printStackTrace();
-		}
-	 }
-
-//	try {
-//		//Compile.compileClass(testJavaFile2,classDirectory);
-//	} catch (ClassCompilationException e) {
-//		e.printStackTrace();
-//	}
-
-}
-
-protected void tearDown() {
-	//remove test Files if any
-	File aFile=new File(testJavaFile1);
-	 if(aFile.exists()) {
-		 aFile.delete();
-	 }
-	aFile=new File(testJavaClassFile1);
-	 if(aFile.exists()) {
-		 aFile.delete();
-	 }
-
-	aFile=new File(testJavaFile2);
-	 if(aFile.exists()) {
-		 aFile.delete();
-	 }
-	aFile=new File(testJavaClassFile2);
-	 if(aFile.exists()) {
-		 aFile.delete();
-	 }
-}
-
-/**
- *  Test for @link org.jetel.util.Compile.compileClass(String className)
- *
- */
-public void test_createObject() throws Exception     {
-//	t1 = (org.jetel.userclasses.test1) CreateJavaObject.createObject("org.jetel.userclasses.test1");
-//	assertEquals(t1 != null, true);
-//	assertEquals(t1.addTwo(new Integer(7),new Integer(17)).intValue(),24);
-//	Object[] anObj = null;
-//	anObj = new Object[2];
-//	anObj[0] = new Integer(7);
-//	anObj[1] = new Integer(7);
-//
-//	t2 = (org.jetel.userclasses.test2) CreateJavaObject.createObject("org.jetel.userclasses.test2",anObj);
-//	assertEquals(t2.addTwo().intValue(),14);
-}
-
-public void test_invokeMethod() throws Exception     {
-
-	Object[] anObj = null;
-	anObj = new Object[2];
-	anObj[0] = new Integer(7);
-	anObj[1] = new Integer(7);
-
-	Integer tmpInteger = (Integer) CreateJavaObject.invokeMethod("org.jetel.userclasses.test2","addTwo",anObj, null);
-	assertEquals(tmpInteger.intValue(),14);
-
-	anObj[0] = new Integer(17);
-	tmpInteger = (Integer) CreateJavaObject.invokeMethod("org.jetel.userclasses.test1","addTwo", null,anObj);
-	assertEquals(tmpInteger.intValue(),24);
-}
-}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/FifoTest.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/FifoTest.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/FifoTest.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -84,16 +84,8 @@
 
 		fifo.add(new Integer(1));
 		fifo.add(new Integer(2));
+		assertFalse(fifo.add(new Integer(3)));
 
-		try  {
-			fifo.add(new Integer(3));
-			fail("An exception should be thrown as the Fifo is full");
-		}
-		catch ( Exception e )
-		{
-			// expected behaviour
-		}
-
 		result = (Integer)fifo.get();
 		assertEquals(new Integer(1), result);
 
@@ -133,15 +125,8 @@
 		fifo.add(new Integer(6));
 
 		// queue is now full
+		assertFalse(fifo.add(new Integer(7)));
 
-		try  {
-			fifo.add(new Integer(7));
-			fail("An exception should be thrown as the Fifo is full");
-		}
-		catch ( Exception e )
-		{
-			// expected behaviour
-		}
 
 		result = (Integer)fifo.get();
 		assertEquals(new Integer(3), result);
@@ -231,14 +216,7 @@
 		Queue fifo = new Queue(0);
 		Integer result = null;
 
-		try  {
-			fifo.add(new Integer(1));
-			fail("An exception should be thrown as the Fifo is full");
-		}
-		catch ( Exception e )
-		{
-			// expected behaviour
-		}
+		assertFalse(fifo.add(new Integer(1)));
 	}
 
 	/**
@@ -249,14 +227,7 @@
 		Integer result = null;
 
 		fifo.add(new Integer(1));
-		try  {
-			fifo.add(new Integer(2));
-			fail("An exception should be thrown as the Fifo is full");
-		}
-		catch ( Exception e )
-		{
-			// expected behaviour
-		}
+		assertFalse(fifo.add(new Integer(2)));
 	}
 
 }
\ No newline at end of file

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/UtilTestSuite.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/UtilTestSuite.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.engine/test/org/jetel/util/UtilTestSuite.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -34,10 +34,7 @@
 		TestSuite suite = new TestSuite("All org.jetel.util Tests");
 
 		suite.addTest(new TestSuite(org.jetel.util.StringUtilsTest.class));
-		suite.addTest(new TestSuite(org.jetel.util.ClassBuilderTest.class));
-		suite.addTest(new TestSuite(org.jetel.util.CodeParserTest.class));
 		suite.addTest(new TestSuite(org.jetel.util.CompileTest.class));
-		suite.addTest(new TestSuite(org.jetel.util.CreateJavaObjectTest.class));
 		return suite;
 
 	}

Modified: branches/cloveretl.engine.rel-2-1-0/cloveretl.sequence/src/org/jetel/sequence/SimpleSequence.java
===================================================================
--- branches/cloveretl.engine.rel-2-1-0/cloveretl.sequence/src/org/jetel/sequence/SimpleSequence.java	2007-01-31 14:08:49 UTC (rev 2419)
+++ branches/cloveretl.engine.rel-2-1-0/cloveretl.sequence/src/org/jetel/sequence/SimpleSequence.java	2007-01-31 14:29:53 UTC (rev 2420)
@@ -77,7 +77,6 @@
     int step;
     int start;
     int numCachedValues;
-    boolean isInitialized;
   
     int counter;
     FileChannel io;
@@ -109,7 +108,6 @@
         this.step=step;
         this.counter=0;
         this.numCachedValues=numCachedValues;
-        this.isInitialized = false;
     }
     
     public long currentValueLong(){
@@ -194,10 +192,9 @@
                 sequenceValue = buffer.getLong();
             }
         } catch(IOException ex) {
-            isInitialized = false;
+            free();
             throw new ComponentNotReadyException(ex);
         }
-        isInitialized = true;
     }
     
     private final void flushValue(long value) {
@@ -261,10 +258,10 @@
 		return filename;
 	}
 
-    public boolean isInitialized() {
-        return isInitialized;
+    public void setFilename(String filename) {
+        this.filename = filename;
     }
-	
+
 	static public SimpleSequence fromXML(TransformationGraph graph, Element nodeXML) throws XMLConfigurationException {
 		ComponentXMLAttributes xattribs = new ComponentXMLAttributes(nodeXML, graph);
 



